<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.18.1 -->
<document source="/Users/libcellml/BuildbotWorker/Finalise_Release_Builder/src/docs/review_process.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/" xmlns:todo="https://www.sphinx-doc.org/">
    <target refid="review-process"></target>
    <section ids="review-process id1" names="review\ process review_process">
        <title>Review process</title>
        <paragraph>This chapter details the responsibilities of the repository owners, and will help contributors to understand how their code contributions will be assessed and reviewed.</paragraph>
        <section ids="check-for-the-green-tick" names="check\ for\ the\ green\ tick">
            <title>Check for the green tick</title>
            <paragraph>Before accepting a tranche of work into the libCellML prime repository check that the <reference internal="False" refuri="https://autotest.bioeng.auckland.ac.nz/buildbot/libcellml/#/builders">libCellML Buildbot</reference> has tested and passed the code.
                The status of the code is shown in the last commit of a pushed group of commits in the pull request.
                The last commit will have a red cross for a failed build or a green tick for a passed build.
                Obviously, make sure that the last commit has a green tick before merging.</paragraph>
            <paragraph>The “Details” link at the bottom of the pull request web page will take you to the build records of the library.
                This page shows the results of the unit tests for each target operating system, the results of the coverage test, the results of the memory check test, and the results of the documentation build.</paragraph>
            <paragraph>The coverage statistics for the library (generated from <reference internal="False" refuri="https://gcovr.com/">gcovr</reference> ) can be reached through the <reference internal="True" refuri="coverage_statistics#coverage-statistics"><inline classes="std std-ref">Coverage Statistics</inline></reference> page.</paragraph>
        </section>
        <section ids="read-the-documentation" names="read\ the\ documentation">
            <title>Read the documentation</title>
            <paragraph><strong>TODO</strong> Update needed now that documentation is integrated into libcellml.org.</paragraph>
            <paragraph>The documentation for the project is built as part of the testing process.</paragraph>
            <paragraph>The Documentation Builder link (entry 2 in step 5) will take you to the build for the documentation.
                On this page, you can see the steps taken to build the documentation.
                In the last step of the build (step 7), there is a link ‘dox’ (entry 2) that will take you to the built documentation.</paragraph>
            <paragraph>The documentation should be reviewed in its final format particularly those parts of the documentation that (should) have changed due to the current pull request.
                The API documentation (generated by <reference internal="False" refuri="http://www.doxygen.nl/">Doxygen</reference>) can be reached from the <reference internal="False" refuri="/documentation/api/latest/classlibcellml_1_1">API Documentation</reference> pages.
                Note that it may be some time before changes to the documentation are seen on that site, as there is currently not a live connection between the repository and the API documentation on this website.</paragraph>
        </section>
        <section ids="resolving-comments" names="resolving\ comments">
            <title>Resolving comments</title>
            <paragraph>All comments on the pull request and associated issue should be responded to and satisfied.
                It’s useful if contributors include the Git commit number (a six or seven digit hexadecimal code) in which any requested code changes are made in their reply to reviewer comments.
                It is the reviewers’ responsibility to check that appropriate changes have been made before merging the pull request.</paragraph>
        </section>
        <section ids="coding-standards" names="coding\ standards">
            <title>Coding standards</title>
            <paragraph>Currently, there is no fully-defined libCellML coding standards set, but the <reference internal="False" refuri="https://google.github.io/styleguide/cppguide.html">Google C++ Style Guide</reference> can be considered a baseline for the standard of code that is expected for libCellML.
                See the <reference internal="True" refuri="coding_standards#coding-standards"><inline classes="std std-ref">Coding Standards</inline></reference> document for deviations from this guideline.</paragraph>
        </section>
        <section ids="merging-a-pull-request" names="merging\ a\ pull\ request">
            <title>Merging a pull request</title>
            <note>
                <paragraph>Caution: before merging a pull request make sure that a release is not currently in progress.
                    If a release is in progress, the prime repository will have a branch called <emphasis>release_staging_&lt;version number&gt;</emphasis> (where &lt;version number&gt; is a semantic version number).</paragraph>
            </note>
            <paragraph>When merging a pull request, the reviewer should add a comment so that the corresponding issue is closed.
                This can be done by adding a directive to the merge commit, like so:</paragraph>
            <literal_block force="False" language="default" linenos="False" xml:space="preserve">closes #123</literal_block>
            <paragraph>where the numeral corresponds to the issue that needs to be closed.
                You can use other closing directives that will achieve the same outcome, please see <reference internal="False" refuri="https://help.github.com/articles/closing-issues-via-commit-messages/">the Github article for a list of all directives</reference> that will work on Github.</paragraph>
        </section>
    </section>
</document>
