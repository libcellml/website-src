<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.18.1 -->
<document source="/Users/libcellml/BuildbotWorker/Finalise_Release_Builder/user-guides/resources/code_snippets/snippet_build_solver.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/" xmlns:todo="https://www.sphinx-doc.org/">
    <target refid="snippet-build-solver"></target>
    <container classes="toggle" ids="snippet-build-solver" names="snippet_build_solver">
        <container classes="header-left">
            <paragraph>Build a solver using generated code</paragraph>
        </container>
        <container classes="sphinx-tabs" type="tab-element">
            <div aria-label="Tabbed content" classes="closeable" role="tablist">
                <button aria-controls="panel-0-0-0" aria-selected="true" classes="sphinx-tabs-tab" ids="tab-0-0-0" name="0-0" role="tab" tabindex="0">C++ snippet</button>
                <button aria-controls="panel-0-0-1" aria-selected="false" classes="sphinx-tabs-tab" ids="tab-0-0-1" name="0-1" role="tab" tabindex="-1">Python snippet</button>
            </div>
            <div aria-labelledby="tab-0-0-0" classes="sphinx-tabs-panel" ids="panel-0-0-0" name="0-0" role="tabpanel" tabindex="0">
                <paragraph>This file should be saved as a CMakeLists.txt file for generation with CMake.</paragraph>
                <literal_block force="False" highlight_args="{'linenostart': 1}" language="cmake" linenos="False" source="/Users/libcellml/BuildbotWorker/Finalise_Release_Builder/user-guides/resources/code/solver/CMakeLists.txt" xml:space="preserve">cmake_minimum_required(VERSION 3.10.2)

set(INPUT_HELP "Please enter the name of the implementation file to solve (with extension, .c, .cpp, or .cxx) using the syntax -DINPUT=your_filename.")
set(INPUT "" CACHE FILEPATH ${INPUT_HELP})

if("${INPUT}" STREQUAL "")
    message(FATAL_ERROR "${INPUT_HELP}")
endif()

get_filename_component(INPUTNAME ${INPUT} NAME_WE)
get_filename_component(INPUTDIR ${INPUT} DIRECTORY)

set(PROJECT_NAME solve_${INPUTNAME})

project(${PROJECT_NAME} VERSION 0.1.0)

set(PROJECT_SRC
    solveGeneratedModel.cpp
    ${INPUT}
)

add_executable(${PROJECT_NAME} ${PROJECT_SRC})
target_include_directories(${PROJECT_NAME} PUBLIC ${INPUTDIR})

message("")
message("1) First, build the executable")
message("2) Then, solve by running: ./${PROJECT_NAME} with the arguments:")
message("  -n  step_total")
message("  -dt step_size")
message("")
</literal_block>
            </div>
            <div aria-labelledby="tab-0-0-1" classes="sphinx-tabs-panel" hidden="true" ids="panel-0-0-1" name="0-1" role="tabpanel" tabindex="0">
                <literal_block force="False" highlight_args="{'linenostart': 67}" language="python" linenos="True" source="/Users/libcellml/BuildbotWorker/Finalise_Release_Builder/user-guides/resources/code/solver/solveGeneratedModel.py" xml:space="preserve">def module_from_file(input):

    # Check the extension is stripped during input.
    if input[-3:] != '.py':
        module_file = input + ".py"
        module_name = input.split("/")[-1]
    else:
        module_file = input
        module_name = ".".join(input.split("/")[-1].split(".")[:-1])

    # Import the generated code as a module, and return it.
    spec = importlib.util.spec_from_file_location(module_name, module_file)
    module = importlib.util.module_from_spec(spec)
    sys.modules[module_name] = module
    spec.loader.exec_module(module)
    return module
</literal_block>
                <paragraph>Full context: <download_reference filename="720f0969a3d62e612fd4909324baa756/solveGeneratedModel.py" refdoc="resources/code_snippets/snippet_build_solver" refdomain="" refexplicit="True" reftarget="/resources/code/solver/solveGeneratedModel.py" reftype="download" refwarn="False"><literal classes="xref download">solveGeneratedModel.py</literal></download_reference></paragraph>
            </div>
        </container>
    </container>
</document>
