<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/Users/hsor001/Projects/cellml/sandbox/tmp/userguides/tutorials/index.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/" xmlns:todo="https://www.sphinx-doc.org/">
    <target refid="tutorials-index"></target>
    <section ids="libcellml-tutorials tutorials-index" names="libcellml\ tutorials tutorials_index">
        <title>libCellML Tutorials</title>
        <paragraph>Please follow the <reference internal="True" refuri="../installation/index#installation"><inline classes="std std-ref">Installation instructions</inline></reference> first to get yourself a copy of libCellML.</paragraph>
        <section ids="introductory-tutorials" names="introductory\ tutorials">
            <title>Introductory tutorials</title>
            <paragraph>The first set of tutorials provides a simple starting point for users who are unfamiliar with CellML and/or modelling in general.</paragraph>
            <compound classes="toctree-wrapper">
                <compact_paragraph toctree="True"><bullet_list><list_item classes="toctree-l1"><compact_paragraph classes="toctree-l1"><reference anchorname="" internal="True" refuri="tutorial1/index">Tutorial 1: Reading and writing CellML files</reference></compact_paragraph></list_item><list_item classes="toctree-l1"><compact_paragraph classes="toctree-l1"><reference anchorname="" internal="True" refuri="tutorial2/index">Tutorial 2: Debugging, issue checking and validating</reference></compact_paragraph></list_item><list_item classes="toctree-l1"><compact_paragraph classes="toctree-l1"><reference anchorname="" internal="True" refuri="tutorial3/index">Tutorial 3: Create a model and generate code using the API</reference></compact_paragraph></list_item><list_item classes="toctree-l1"><compact_paragraph classes="toctree-l1"><reference anchorname="" internal="True" refuri="tutorial4/index">Tutorial 4: Using generated code to run a simulation</reference></compact_paragraph></list_item><list_item classes="toctree-l1"><compact_paragraph classes="toctree-l1"><reference anchorname="" internal="True" refuri="tutorial5/index">Tutorial 5: Annotation tools</reference></compact_paragraph></list_item></bullet_list></compact_paragraph>
            </compound>
            <paragraph>For information on solving a CellML model with a simple numerical solver, please see the <reference internal="True" refuri="../resources/code/solver/index#solver"><inline classes="std std-ref">solving a generated model page</inline></reference>.
                Hodgkin-Huxley modelling tutorials
                ———————————-</paragraph>
            <paragraph>The second set of tutorials take the user progressively through different aspects of the libCellML functionality while building towards a model of Hodgkin and Huxley’s squid axon activation.
                It is aimed at users who are already familiar with the concept of CellML and modelling.</paragraph>
            <paragraph>For more information on their theoretical background, please see the <reference internal="True" refuri="../theory/index#theory-index"><inline classes="std std-ref">Hodgkin-Huxley theory pages</inline></reference>.</paragraph>
            <compound classes="toctree-wrapper">
                <compact_paragraph toctree="True"><bullet_list><list_item classes="toctree-l1"><compact_paragraph classes="toctree-l1"><reference anchorname="" internal="True" refuri="hh_tutorial1/index">Hodgkin-Huxley 1: Creating a model using the API</reference></compact_paragraph></list_item><list_item classes="toctree-l1"><compact_paragraph classes="toctree-l1"><reference anchorname="" internal="True" refuri="hh_tutorial2/index">Hodgkin-Huxley 2: Creating a model which uses imports</reference></compact_paragraph></list_item><list_item classes="toctree-l1"><compact_paragraph classes="toctree-l1"><reference anchorname="" internal="True" refuri="hh_tutorial3/index">Hodgkin-Huxley 3: Debugging a model</reference></compact_paragraph></list_item><list_item classes="toctree-l1"><compact_paragraph classes="toctree-l1"><reference anchorname="" internal="True" refuri="hh_tutorial4/index">Hodgkin-Huxley 4: Generating code from a model</reference></compact_paragraph></list_item><list_item classes="toctree-l1"><compact_paragraph classes="toctree-l1"><reference anchorname="" internal="True" refuri="hh_tutorial5/index">Hodgkin-Huxley 5: Interact with generated code</reference></compact_paragraph></list_item></bullet_list></compact_paragraph>
            </compound>
            <compound classes="toctree-wrapper">
            </compound>
        </section>
    </section>
</document>
