<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/Users/hsor001/Projects/cellml/sandbox/userguides/resources/snippets/snippet_edit_mathml.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/" xmlns:todo="https://www.sphinx-doc.org/">
    <target refid="snippet-edit-mathml"></target>
    <container classes="toggle" ids="snippet-edit-mathml" names="snippet_edit_mathml">
        <container classes="header-left">
            <paragraph>Edit MathML in a component</paragraph>
        </container>
        <paragraph>MathML is stored as a single string within a component.
            Retrieving it is simple enough using the <literal classes="code">math()</literal> function, but any manipulation (change units used, changing variable names, adding additional relationships, etc) are a little more complicated.</paragraph>
        <comment xml:space="preserve"></comment>
        <block_quote>
            <paragraph>TODO: Need more examples of useful mathml manipulation. Variable names? Need to remove whitespace first?</paragraph>
        </block_quote>
        <container classes="sphinx-tabs" type="tab-element">
            <div aria-label="Tabbed content" classes="closeable" role="tablist">
                <button aria-controls="panel-0-Qysr" aria-selected="true" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-0-Qysr" name="Qysr" role="tab" tabindex="0">C++</button>
                <button aria-controls="panel-0-UHl0aG9u" aria-selected="false" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-0-UHl0aG9u" name="UHl0aG9u" role="tab" tabindex="-1">Python</button>
            </div>
            <div aria-labelledby="tab-0-Qysr" classes="sphinx-tabs-panel code-tab group-tab" ids="panel-0-Qysr" name="Qysr" role="tabpanel" tabindex="0">
                <literal_block force="False" highlight_args="{}" language="c++" linenos="False" xml:space="preserve">void switchUnitsInMaths(std::string &amp;maths, std::string in, std::string out)
{
    //  Note that this function will replace any and all occurrences of the "in"
    //  string within the "maths" string with the "out" string.  It's worth noting that
    //  in order to be sure that only full name matches for units are replaced, we exploit
    //  the fact that the units names in the MathML string will be in quotation marks, and include
    //  these quotation marks on either side of the in and out strings for safety.

    std::string::size_type n = 0;
    std::string in_with_quotes = "\"" + in + "\"";
    std::string out_with_quotes = "\"" + out + "\"";

    while ((n = maths.find(in_with_quotes, n)) != std::string::npos) {
        maths.replace(n, in_with_quotes.size(), out_with_quotes);
        n += out_with_quotes.size();
    }

    std::cout &lt;&lt; "Switched units '" &lt;&lt; in &lt;&lt; "' for units '" &lt;&lt; out &lt;&lt; "'" &lt;&lt; std::endl;
}</literal_block>
            </div>
            <div aria-labelledby="tab-0-UHl0aG9u" classes="sphinx-tabs-panel code-tab group-tab" hidden="true" ids="panel-0-UHl0aG9u" name="UHl0aG9u" role="tabpanel" tabindex="0">
                <literal_block force="False" highlight_args="{}" language="py" linenos="False" xml:space="preserve">def switch_units_in_maths(maths, units_in, units_out):
#   Note that this function will replace any and all occurrences of the "units_in"
#   string within the "maths" string with the "units_out" string.  It's worth noting that
#   in order to be sure that only full name matches for units are replaced, we exploit
#   the fact that the units names in the MathML string will be in quotation marks, and include
#   these quotation marks on either side of the in and out strings for safety.

in_with_quotes = "\"" + units_in + "\""
out_with_quotes = "\"" + units_out + "\""

new_maths = maths.replace(in_with_quotes, out_with_quotes)

return new_maths</literal_block>
            </div>
        </container>
    </container>
</document>
