<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.18.1 -->
<document source="/Users/hsor001/Projects/buildbot/instances/worker_mac/Finalise_Release_Builder/user-guides/resources/snippets/snippet_annotator_retrieve_duplicated_ids.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/" xmlns:todo="https://www.sphinx-doc.org/">
    <target refid="snippet-annotator-retrieve-duplicated-ids"></target>
    <container classes="toggle" ids="snippet-annotator-retrieve-duplicated-ids" names="snippet_annotator_retrieve_duplicated_ids">
        <container classes="header-left">
            <paragraph>Retrieve items with duplicated ids</paragraph>
        </container>
        <paragraph>Items with a unique id can be retrieved using the <literal classes="code" language="">item("uniqueId")</literal> function, items whose ids are not unique must be retrieved with the <literal classes="code" language="">items("duplicatedId")</literal> function instead.</paragraph>
        <container classes="sphinx-tabs" type="tab-element">
            <div aria-label="Tabbed content" classes="closeable" role="tablist">
                <button aria-controls="panel-0-Qysr" aria-selected="true" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-0-Qysr" name="Qysr" role="tab" tabindex="0">C++</button>
                <button aria-controls="panel-0-UHl0aG9u" aria-selected="false" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-0-UHl0aG9u" name="UHl0aG9u" role="tab" tabindex="-1">Python</button>
            </div>
            <div aria-labelledby="tab-0-Qysr" classes="sphinx-tabs-panel code-tab group-tab" ids="panel-0-Qysr" name="Qysr" role="tabpanel" tabindex="0">
                <literal_block force="False" highlight_args="{}" language="c++" linenos="False" xml:space="preserve">// Create an Annotator instance.
auto annotator = libcellml::Annotator::create();

// Pass the model to the annotator and build the index.
annotator-&gt;buildModelIndex(model);

auto duplicatedIdItems = annotator-&gt;items("duplicatedId");
// The duplicateIdItems is a vector of AnyItem items; pairs whose first
// attribute is an Annotator::Type enum, and the second is an std::any cast
// of the item.</literal_block>
            </div>
            <div aria-labelledby="tab-0-UHl0aG9u" classes="sphinx-tabs-panel code-tab group-tab" hidden="true" ids="panel-0-UHl0aG9u" name="UHl0aG9u" role="tabpanel" tabindex="0">
                <literal_block force="False" highlight_args="{}" language="py" linenos="False" xml:space="preserve"># Create an Annotator instance.
annotator = Annotator()

# Pass the model to the annotator and build the index.
annotator.buildModelIndex(model)

duplicatedIdItems = annotator.items("duplicatedId")
# The duplicateIdItems is a vector of items with "duplicatedId"
# as an id attribute.</literal_block>
            </div>
        </container>
    </container>
</document>
