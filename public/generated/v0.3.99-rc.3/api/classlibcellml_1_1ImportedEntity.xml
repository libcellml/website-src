<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="classlibcellml_1_1ImportedEntity" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>libcellml::ImportedEntity</compoundname>
    <derivedcompoundref refid="classlibcellml_1_1Component" prot="public" virt="non-virtual">libcellml::Component</derivedcompoundref>
    <derivedcompoundref refid="classlibcellml_1_1Units" prot="public" virt="non-virtual">libcellml::Units</derivedcompoundref>
    <includes refid="importedentity_8h" local="no">importedentity.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classlibcellml_1_1ImportedEntity_1af7c33db97729d11909f3cf544c30566e" prot="private" static="no" mutable="no">
        <type>ImportedEntityImpl *</type>
        <definition>ImportedEntityImpl* libcellml::ImportedEntity::mPimpl</definition>
        <argsstring></argsstring>
        <name>mPimpl</name>
        <qualifiedname>libcellml::ImportedEntity::mPimpl</qualifiedname>
        <briefdescription>
<para>Private member to implementation pointer,. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/importedentity.h" line="129" column="24" bodyfile="libcellml/importedentity.h" bodystart="129" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classlibcellml_1_1ImportedEntity_1aae51f703ab7b5b36264f03eba9d27744" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type></type>
        <definition>virtual libcellml::ImportedEntity::~ImportedEntity</definition>
        <argsstring>()=0</argsstring>
        <name>~ImportedEntity</name>
        <qualifiedname>libcellml::ImportedEntity::~ImportedEntity</qualifiedname>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/importedentity.h" line="35" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1ImportedEntity_1a4a489fc27bfdc0ffeda7dc13bc874ab3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>libcellml::ImportedEntity::ImportedEntity</definition>
        <argsstring>(const ImportedEntity &amp;rhs)=delete</argsstring>
        <name>ImportedEntity</name>
        <qualifiedname>libcellml::ImportedEntity::ImportedEntity</qualifiedname>
        <param>
          <type>const <ref refid="classlibcellml_1_1ImportedEntity" kindref="compound">ImportedEntity</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/importedentity.h" line="36" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1ImportedEntity_1a6136c548bd3634a5b6b553d8cf97926a" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>libcellml::ImportedEntity::ImportedEntity</definition>
        <argsstring>(ImportedEntity &amp;&amp;rhs) noexcept=delete</argsstring>
        <name>ImportedEntity</name>
        <qualifiedname>libcellml::ImportedEntity::ImportedEntity</qualifiedname>
        <param>
          <type><ref refid="classlibcellml_1_1ImportedEntity" kindref="compound">ImportedEntity</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Move constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/importedentity.h" line="37" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1ImportedEntity_1a25f7d4abe5d3ca67c97ad341cb4853e7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool libcellml::ImportedEntity::isImport</definition>
        <argsstring>() const</argsstring>
        <name>isImport</name>
        <qualifiedname>libcellml::ImportedEntity::isImport</qualifiedname>
        <briefdescription>
<para>Test if this entity is an imported entity. </para>
        </briefdescription>
        <detaileddescription>
<para>Method to test if this entity is an imported entity. Returns <computeroutput>true</computeroutput> if the import is not the <computeroutput>nullptr</computeroutput> otherwise return <computeroutput>false</computeroutput>.</para>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if the import is not the <computeroutput>nullptr</computeroutput>, <computeroutput>false</computeroutput> otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/importedentity.h" line="47" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1ImportedEntity_1af9db33dab9b6151683656b9f4744188a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacelibcellml_1ac2c4e6d1793d7214616c1548d8a9f502" kindref="member">ImportSourcePtr</ref></type>
        <definition>ImportSourcePtr libcellml::ImportedEntity::importSource</definition>
        <argsstring>() const</argsstring>
        <name>importSource</name>
        <qualifiedname>libcellml::ImportedEntity::importSource</qualifiedname>
        <briefdescription>
<para>Get the import source. </para>
        </briefdescription>
        <detaileddescription>
<para>Get the import source, if no import source is set <computeroutput>nullptr</computeroutput> is returned.</para>
<para><simplesect kind="see"><para><ref refid="classlibcellml_1_1ImportedEntity_1a0c9e48f04f3039f5538d9d86d59a479e" kindref="member">setImportSource</ref></para>
</simplesect>
<simplesect kind="return"><para>The shared pointer for the import source, if no import source is set returns <computeroutput>nullptr</computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/importedentity.h" line="59" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1ImportedEntity_1a0c9e48f04f3039f5538d9d86d59a479e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::ImportedEntity::setImportSource</definition>
        <argsstring>(const ImportSourcePtr &amp;importSource)</argsstring>
        <name>setImportSource</name>
        <qualifiedname>libcellml::ImportedEntity::setImportSource</qualifiedname>
        <param>
          <type>const <ref refid="namespacelibcellml_1ac2c4e6d1793d7214616c1548d8a9f502" kindref="member">ImportSourcePtr</ref> &amp;</type>
          <declname>importSource</declname>
        </param>
        <briefdescription>
<para>Set the import source. </para>
        </briefdescription>
        <detaileddescription>
<para>Set the import source for the imported entity. Set to <computeroutput>nullptr</computeroutput> to unset the import source.</para>
<para><simplesect kind="see"><para><ref refid="classlibcellml_1_1ImportedEntity_1af9db33dab9b6151683656b9f4744188a" kindref="member">importSource</ref></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>importSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The import source to set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/importedentity.h" line="71" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1ImportedEntity_1a14451a2854699b2e31c67f0afc4d28d3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::ImportedEntity::importReference</definition>
        <argsstring>() const</argsstring>
        <name>importReference</name>
        <qualifiedname>libcellml::ImportedEntity::importReference</qualifiedname>
        <briefdescription>
<para>Get the import reference. </para>
        </briefdescription>
        <detaileddescription>
<para>Get the reference to the entity in the imported model.</para>
<para><simplesect kind="see"><para><ref refid="classlibcellml_1_1ImportedEntity_1ab5e0d32cc24fced7cd19362f08e162eb" kindref="member">setImportReference</ref></para>
</simplesect>
<simplesect kind="return"><para>The reference to the entity in the imported model, the empty string if it is not set. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/importedentity.h" line="83" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1ImportedEntity_1ab5e0d32cc24fced7cd19362f08e162eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::ImportedEntity::setImportReference</definition>
        <argsstring>(const std::string &amp;reference)</argsstring>
        <name>setImportReference</name>
        <qualifiedname>libcellml::ImportedEntity::setImportReference</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>reference</declname>
        </param>
        <briefdescription>
<para>Set the import reference. </para>
        </briefdescription>
        <detaileddescription>
<para>Set the import reference to an entity in the imported model. The import reference should be a <ref refid="classlibcellml_1_1Component" kindref="compound">Component</ref> or a Unit in the import model.</para>
<para><simplesect kind="see"><para><ref refid="classlibcellml_1_1ImportedEntity_1a14451a2854699b2e31c67f0afc4d28d3" kindref="member">importReference</ref></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reference</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the reference to refer to in the import model. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/importedentity.h" line="95" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1ImportedEntity_1a46f296ae869244d37926acb5b25aff12" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool libcellml::ImportedEntity::isResolved</definition>
        <argsstring>() const</argsstring>
        <name>isResolved</name>
        <qualifiedname>libcellml::ImportedEntity::isResolved</qualifiedname>
        <briefdescription>
<para>Test whether this entity has been resolved. </para>
        </briefdescription>
        <detaileddescription>
<para>Test whether this entity is resolved or not.</para>
<para>An entity that is not imported is always resolved so this method returns <computeroutput>true</computeroutput>. Alternatively, if this entity is imported then it returns <computeroutput>true</computeroutput> if every entity that this imported entity requires can be found. That is, return <computeroutput>true</computeroutput> if this imported entity is resolvable. In all other cases, this method returns <computeroutput>false</computeroutput>.</para>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if the import is resolved, <computeroutput>false</computeroutput> otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/importedentity.h" line="110" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classlibcellml_1_1ImportedEntity_1a1cdb9522aea8000e43a13705aa3f2960" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>libcellml::ImportedEntity::ImportedEntity</definition>
        <argsstring>()</argsstring>
        <name>ImportedEntity</name>
        <qualifiedname>libcellml::ImportedEntity::ImportedEntity</qualifiedname>
        <briefdescription>
<para>Constructor,. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/importedentity.h" line="113" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1ImportedEntity_1a8b5a99ebf28d618220afbdb938f39a9c" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool libcellml::ImportedEntity::doEquals</definition>
        <argsstring>(const ImportedEntityPtr &amp;other) const</argsstring>
        <name>doEquals</name>
        <qualifiedname>libcellml::ImportedEntity::doEquals</qualifiedname>
        <param>
          <type>const <ref refid="namespacelibcellml_1a264c28a2318a5adadd83ec8036c81660" kindref="member">ImportedEntityPtr</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Implementation method for equals,. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/importedentity.h" line="125" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classlibcellml_1_1ImportedEntity_1acb6abf695325f1b364957fdb7e8ed118" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool libcellml::ImportedEntity::doIsResolved</definition>
        <argsstring>() const =0</argsstring>
        <name>doIsResolved</name>
        <qualifiedname>libcellml::ImportedEntity::doIsResolved</qualifiedname>
        <reimplementedby refid="classlibcellml_1_1Component_1abbd068b939c8d4ce5bd0f8570007aea2">doIsResolved</reimplementedby>
        <reimplementedby refid="classlibcellml_1_1Units_1a0ab2e0efb3e04323f15cb623344ecc91">doIsResolved</reimplementedby>
        <briefdescription>
<para>Virtual is resolved method to be implemented by derived classes. </para>
        </briefdescription>
        <detaileddescription>
<para>Virtual isResolved method to allow the <ref refid="classlibcellml_1_1Units" kindref="compound">Units</ref> and <ref refid="classlibcellml_1_1Component" kindref="compound">Component</ref> classes to implement their own versions.</para>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if this imported entity is resolved and <computeroutput>false</computeroutput> otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/importedentity.h" line="123" column="18"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classlibcellml_1_1ImportedEntity" kindref="compound">ImportedEntity</ref> class. </para>
    </briefdescription>
    <detaileddescription>
<para>Base class for all importable libCellML classes. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>libcellml::Component</label>
        <link refid="classlibcellml_1_1Component"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>libcellml::ImportedEntity</label>
        <link refid="classlibcellml_1_1ImportedEntity"/>
      </node>
      <node id="3">
        <label>libcellml::Units</label>
        <link refid="classlibcellml_1_1Units"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>libcellml::ImportedEntity</label>
        <link refid="classlibcellml_1_1ImportedEntity"/>
      </node>
    </collaborationgraph>
    <location file="libcellml/importedentity.h" line="32" column="1" bodyfile="libcellml/importedentity.h" bodystart="33" bodyend="130"/>
    <listofallmembers>
      <member refid="classlibcellml_1_1ImportedEntity_1a8b5a99ebf28d618220afbdb938f39a9c" prot="private" virt="non-virtual"><scope>libcellml::ImportedEntity</scope><name>doEquals</name></member>
      <member refid="classlibcellml_1_1ImportedEntity_1acb6abf695325f1b364957fdb7e8ed118" prot="protected" virt="pure-virtual"><scope>libcellml::ImportedEntity</scope><name>doIsResolved</name></member>
      <member refid="classlibcellml_1_1ImportedEntity_1a4a489fc27bfdc0ffeda7dc13bc874ab3" prot="public" virt="non-virtual"><scope>libcellml::ImportedEntity</scope><name>ImportedEntity</name></member>
      <member refid="classlibcellml_1_1ImportedEntity_1a6136c548bd3634a5b6b553d8cf97926a" prot="public" virt="non-virtual"><scope>libcellml::ImportedEntity</scope><name>ImportedEntity</name></member>
      <member refid="classlibcellml_1_1ImportedEntity_1a1cdb9522aea8000e43a13705aa3f2960" prot="private" virt="non-virtual"><scope>libcellml::ImportedEntity</scope><name>ImportedEntity</name></member>
      <member refid="classlibcellml_1_1ImportedEntity_1a14451a2854699b2e31c67f0afc4d28d3" prot="public" virt="non-virtual"><scope>libcellml::ImportedEntity</scope><name>importReference</name></member>
      <member refid="classlibcellml_1_1ImportedEntity_1af9db33dab9b6151683656b9f4744188a" prot="public" virt="non-virtual"><scope>libcellml::ImportedEntity</scope><name>importSource</name></member>
      <member refid="classlibcellml_1_1ImportedEntity_1a25f7d4abe5d3ca67c97ad341cb4853e7" prot="public" virt="non-virtual"><scope>libcellml::ImportedEntity</scope><name>isImport</name></member>
      <member refid="classlibcellml_1_1ImportedEntity_1a46f296ae869244d37926acb5b25aff12" prot="public" virt="non-virtual"><scope>libcellml::ImportedEntity</scope><name>isResolved</name></member>
      <member refid="classlibcellml_1_1ImportedEntity_1af7c33db97729d11909f3cf544c30566e" prot="private" virt="non-virtual"><scope>libcellml::ImportedEntity</scope><name>mPimpl</name></member>
      <member refid="classlibcellml_1_1ImportedEntity_1ab5e0d32cc24fced7cd19362f08e162eb" prot="public" virt="non-virtual"><scope>libcellml::ImportedEntity</scope><name>setImportReference</name></member>
      <member refid="classlibcellml_1_1ImportedEntity_1a0c9e48f04f3039f5538d9d86d59a479e" prot="public" virt="non-virtual"><scope>libcellml::ImportedEntity</scope><name>setImportSource</name></member>
      <member refid="classlibcellml_1_1ImportedEntity_1aae51f703ab7b5b36264f03eba9d27744" prot="public" virt="pure-virtual"><scope>libcellml::ImportedEntity</scope><name>~ImportedEntity</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
