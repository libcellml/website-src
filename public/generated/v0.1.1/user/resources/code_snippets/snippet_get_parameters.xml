<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.16 -->
<document source="/Users/kmoy001/libcellml/libcellml-tutorials/resources/code_snippets/snippet_get_parameters.rst">
    <target refid="snippet-get-parameters"></target>
    <container classes="toggle" ids="snippet-get-parameters" names="snippet_get_parameters">
        <container classes="header-left">
            <paragraph>Retrieve model parameters</paragraph>
        </container>
        <container classes="sphinx-tabs">
            <container>
                <container classes="item">
                    <container>
                        <paragraph>C++ snippet</paragraph>
                    </container>
                </container>
                <container classes="ui bottom attached sphinx-tab tab segment sphinx-data-tab-0-0 active">
                    <literal_block force="False" highlight_args="{'linenostart': 1}" language="c++" linenos="False" source="/Users/kmoy001/libcellml/libcellml-tutorials/resources/code/solver/solveGeneratedModel.cpp" xml:space="preserve">    // Inside the generated code are structures with information about the 
    // model and its dimensions.  These are:
    //   - VOI_INFO: a dict with the name, units, and component of the variable of integration,
    //   - STATE_INFO: a list of dicts for the state variables,
    //   - VARIABLE_INFO: a list of dicts for the non-state variables. 

    std::cout &lt;&lt; "   VARIABLE OF INTEGRATION (units) " &lt;&lt; std::endl;
    std::cout &lt;&lt; "      " &lt;&lt; VOI_INFO.name &lt;&lt; " (" &lt;&lt; VOI_INFO.units &lt;&lt; ")" &lt;&lt;std::endl 
              &lt;&lt; std::endl;
    std::cout &lt;&lt; "   STATE VARIABLES (units) " &lt;&lt; std::endl;
    std::cout &lt;&lt; "-------------------------------------------------------------" &lt;&lt; std::endl;
    for (size_t i = 0; i &lt; STATE_COUNT; ++i) {
        std::cout &lt;&lt; "      " &lt;&lt; STATE_INFO[i].name &lt;&lt; " (" &lt;&lt; STATE_INFO[i].units &lt;&lt; ")" &lt;&lt; std::endl;
    }
    std::cout &lt;&lt; std::endl;

</literal_block>
                    <paragraph>Full context: <download_reference filename="bcee499fcda27579ee11394c8ddb8c88/solveGeneratedModel.cpp" refdoc="resources/code_snippets/snippet_get_parameters" refdomain="" refexplicit="True" reftarget="/resources/code/solver/solveGeneratedModel.cpp" reftype="download" refwarn="False"><literal classes="xref download">example_solveGeneratedModel.cpp</literal></download_reference></paragraph>
                </container>
            </container>
            <container>
                <container classes="item">
                    <container>
                        <paragraph>Python snippet</paragraph>
                    </container>
                </container>
                <container classes="ui bottom attached sphinx-tab tab segment sphinx-data-tab-0-1">
                    <literal_block force="False" highlight_args="{'linenostart': 1}" language="python" linenos="False" source="/Users/kmoy001/libcellml/libcellml-tutorials/resources/code/solver/solveGeneratedModel.py" xml:space="preserve">    # Retrieve model module from the generated code file.
    model = module_from_file(args['m'])

    # Inside the 'model' module are structures with information about the 
    # model and its dimensions.  These are:
    #   - VOI_INFO: a dict with the name, units, and component of the variable of integration,
    #   - STATE_INFO: a list of similar dicts for the state variables,
    #   - VARIABLE_INFO: a list of similar dicts for the non-state variables. 

    print('   VARIABLE OF INTEGRATION (units)')
    print('--------------------------------------------------------------------')
    print('      {} ({}, {})'.format(model.VOI_INFO['name'],
                                     model.VOI_INFO['units'],
                                     dt))
    print('      {} steps'.format(n))
    print()

</literal_block>
                    <paragraph>Full context: <download_reference filename="720f0969a3d62e612fd4909324baa756/solveGeneratedModel.py" refdoc="resources/code_snippets/snippet_get_parameters" refdomain="" refexplicit="True" reftarget="/resources/code/solver/solveGeneratedModel.py" reftype="download" refwarn="False"><literal classes="xref download">example_solveGeneratedModel.py</literal></download_reference></paragraph>
                </container>
            </container>
        </container>
    </container>
</document>
