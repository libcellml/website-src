<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classlibcellml_1_1GeneratorProfile" kind="class" language="C++" prot="public">
    <compoundname>libcellml::GeneratorProfile</compoundname>
    <includes refid="generatorprofile_8h" local="no">generatorprofile.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classlibcellml_1_1GeneratorProfile_1afcb812ce769f207661f0161ac17191ad" prot="public" static="no" strong="yes">
        <type></type>
        <name>Profile</name>
        <enumvalue id="classlibcellml_1_1GeneratorProfile_1afcb812ce769f207661f0161ac17191ada0d61f8370cad1d412f80b84d143e1257" prot="public">
          <name>C</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classlibcellml_1_1GeneratorProfile_1afcb812ce769f207661f0161ac17191ada0aff891c0d43dc127e64bbc28a4ec4e8" prot="public">
          <name>PYTHON</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="36" column="1" bodyfile="libcellml/generatorprofile.h" bodystart="35" bodyend="39"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classlibcellml_1_1GeneratorProfile_1a2a5b380ac5b9ceabee8fb724576ee2ac" prot="private" static="no" mutable="no">
        <type>GeneratorProfileImpl *</type>
        <definition>GeneratorProfileImpl* libcellml::GeneratorProfile::mPimpl</definition>
        <argsstring></argsstring>
        <name>mPimpl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="3125" column="26" bodyfile="libcellml/generatorprofile.h" bodystart="3124" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a2390e84871f15d9510512aefc8b0d3c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>libcellml::GeneratorProfile::~GeneratorProfile</definition>
        <argsstring>()</argsstring>
        <name>~GeneratorProfile</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="41" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1aae3d29ccce8d4b7f52177fa35d5342d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>libcellml::GeneratorProfile::GeneratorProfile</definition>
        <argsstring>(const GeneratorProfile &amp;rhs)=delete</argsstring>
        <name>GeneratorProfile</name>
        <param>
          <type>const <ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="42" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1ac299c996d78b15d799548310a6f89a49" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>libcellml::GeneratorProfile::GeneratorProfile</definition>
        <argsstring>(GeneratorProfile &amp;&amp;rhs) noexcept=delete</argsstring>
        <name>GeneratorProfile</name>
        <param>
          <type><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Move constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="43" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a64dfb33c2bce0170d49d382810cf1f8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref> &amp;</type>
        <definition>GeneratorProfile&amp; libcellml::GeneratorProfile::operator=</definition>
        <argsstring>(GeneratorProfile rhs)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Assignment operator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="44" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1ad6c8b610ceb5629306547ee7aee6edf7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classlibcellml_1_1GeneratorProfile_1afcb812ce769f207661f0161ac17191ad" kindref="member">Profile</ref></type>
        <definition>Profile libcellml::GeneratorProfile::profile</definition>
        <argsstring>() const</argsstring>
        <name>profile</name>
        <briefdescription>
<para>Get the <computeroutput>Profile</computeroutput> for this <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>Profile</computeroutput> for this <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput>.</para>
<para><simplesect kind="return"><para>The <computeroutput>Profile</computeroutput> for this <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="67" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a963d8030213db5be4c5a9dbc259984fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setProfile</definition>
        <argsstring>(Profile profile)</argsstring>
        <name>setProfile</name>
        <param>
          <type><ref refid="classlibcellml_1_1GeneratorProfile_1afcb812ce769f207661f0161ac17191ad" kindref="member">Profile</ref></type>
          <declname>profile</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>Profile</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> to the given <computeroutput>Profile</computeroutput> .</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>profile</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>Profile</computeroutput> to use. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="76" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a4096cf953ca01caf9efd7b8c9d7ad95e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool libcellml::GeneratorProfile::hasInterface</definition>
        <argsstring>() const</argsstring>
        <name>hasInterface</name>
        <briefdescription>
<para>Test if this <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> requires an interface to be generated. </para>
        </briefdescription>
        <detaileddescription>
<para>Test if this <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> has an requires an interface to be generated.</para>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if the <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> has an requires an interface to be generated, <computeroutput>false</computeroutput> otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="91" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a3601bc78c3be19d9d8795ab85d468291" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setHasInterface</definition>
        <argsstring>(bool hasInterface)</argsstring>
        <name>setHasInterface</name>
        <param>
          <type>bool</type>
          <declname>hasInterface</declname>
        </param>
        <briefdescription>
<para>Set whether this <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> has an requires an interface to be generated. </para>
        </briefdescription>
        <detaileddescription>
<para>Set whether this <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> has an requires an interface to be generated.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hasInterface</parametername>
</parameternamelist>
<parameterdescription>
<para>A <computeroutput>bool</computeroutput> to determine whether this <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> has an requires an interface to be generated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="103" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1ae1f5bf49b450f70aff793a28c5edaf5d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::assignmentString</definition>
        <argsstring>() const</argsstring>
        <name>assignmentString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for the assignment operator. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for the assignment operator.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for the assignment operator. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="114" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a65991d1b4dad0c7c0d3f8a0d8358463b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setAssignmentString</definition>
        <argsstring>(const std::string &amp;assignmentString)</argsstring>
        <name>setAssignmentString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>assignmentString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for the assignment operator. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for the assignment operator.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>assignmentString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for the assignment operator. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="124" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1abb71107ba37929b5e4de92ffb912e85f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::eqString</definition>
        <argsstring>() const</argsstring>
        <name>eqString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for the equivalence operator. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for the equivalence operator.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for the equivalence operator. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="135" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a050eea9d5fea7c14487baeee55caf9a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setEqString</definition>
        <argsstring>(const std::string &amp;eqString)</argsstring>
        <name>setEqString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>eqString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for the equivalence operator. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for the equivalence operator.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eqString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for the equivalence operator. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="144" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1adf9afe42b55c4753339f993dcd316a3f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::neqString</definition>
        <argsstring>() const</argsstring>
        <name>neqString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for the nonequivalence operator. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for the nonequivalence operator.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for the nonequivalence operator. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="153" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a9339d5f05ecf1adc46addc1439f1e854" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setNeqString</definition>
        <argsstring>(const std::string &amp;neqString)</argsstring>
        <name>setNeqString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>neqString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for the nonequivalence operator. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for the nonequivalence operator.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>neqString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for the nonequivalence operator. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="163" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a6442c88bda035529148359c48f9926e6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::ltString</definition>
        <argsstring>() const</argsstring>
        <name>ltString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for the lower than operator. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for the lower than operator.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for the lower than operator. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="172" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a10ea51abe489081a6339238b9f23e68d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setLtString</definition>
        <argsstring>(const std::string &amp;ltString)</argsstring>
        <name>setLtString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>ltString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for the lower than operator. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for the lower than operator.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ltString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for the lower than operator. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="181" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a7dbc1ac020809e01882e9ff337b41a15" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::leqString</definition>
        <argsstring>() const</argsstring>
        <name>leqString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for the lower or equal than operator. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for the lower or equal than operator.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for the lower or equal than operator. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="190" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a692fd19beccb47a26608b25ea50f334b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setLeqString</definition>
        <argsstring>(const std::string &amp;leqString)</argsstring>
        <name>setLeqString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>leqString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for the lower or equal than operator. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for the lower or equal than operator.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>leqString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for the lower or equal than operator. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="200" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a566f9602c60505b71348bb191f65354a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::gtString</definition>
        <argsstring>() const</argsstring>
        <name>gtString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for the greater than operator. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for the greater than operator.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for the greater than operator. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="209" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a18fbc8a136120677b39f544b188f1f08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setGtString</definition>
        <argsstring>(const std::string &amp;gtString)</argsstring>
        <name>setGtString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>gtString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for the greater than operator. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for the greater than operator.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>gtString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for the greater than operator. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="218" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1aab602fd394f402ddd72de3d0dddc3cea" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::geqString</definition>
        <argsstring>() const</argsstring>
        <name>geqString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for the greater or equal than operator. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for the greater or equal than operator.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for the greater or equal than operator. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="227" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a050ffcd91350dafd5dc7c0247587fbd1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setGeqString</definition>
        <argsstring>(const std::string &amp;geqString)</argsstring>
        <name>setGeqString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>geqString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for the greater or equal than operator. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for the greater or equal than operator.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>geqString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for the greater or equal than operator. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="237" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1afe5d36c8ce4ef7dac5549c78d268cdc4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::andString</definition>
        <argsstring>() const</argsstring>
        <name>andString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for the and operator. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for the and operator.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for the and operator. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="246" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1aee793cd0fdb55faba7c00e77855965d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setAndString</definition>
        <argsstring>(const std::string &amp;andString)</argsstring>
        <name>setAndString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>andString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for the and operator. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for the and operator.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>andString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for the and operator. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="255" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a275fc8f3f490cea159bc9744440bcd82" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::orString</definition>
        <argsstring>() const</argsstring>
        <name>orString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for the or operator. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for the or operator.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for the or operator. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="264" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a6ce5411b31f398bf92722bc8f6f37fda" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setOrString</definition>
        <argsstring>(const std::string &amp;orString)</argsstring>
        <name>setOrString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>orString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for the or operator. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for the or operator.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>orString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for the or operator. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="273" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a7cdd01761928ea8565d2d730b7b90bea" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::xorString</definition>
        <argsstring>() const</argsstring>
        <name>xorString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for the xor operator. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for the xor operator.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for the xor operator. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="282" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a1905e28c9ce2eeb2b94bb2d3f08750be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setXorString</definition>
        <argsstring>(const std::string &amp;xorString)</argsstring>
        <name>setXorString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>xorString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for the xor operator. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for the xor operator.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xorString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for the xor operator. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="291" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a023df2a77ecbb48bce7188df84d26220" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::notString</definition>
        <argsstring>() const</argsstring>
        <name>notString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for the not operator. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for the not operator.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for the not operator. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="300" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1ae4cea0b3899d76139874594c2c69df28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setNotString</definition>
        <argsstring>(const std::string &amp;notString)</argsstring>
        <name>setNotString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>notString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for the not operator. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for the not operator.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>notString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for the not operator. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="309" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a25064e722fbf0b3275f1c82db87b96ce" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool libcellml::GeneratorProfile::hasEqOperator</definition>
        <argsstring>() const</argsstring>
        <name>hasEqOperator</name>
        <briefdescription>
<para>Test if this <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> has an equivalence operator. </para>
        </briefdescription>
        <detaileddescription>
<para>Test if this <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> has an equivalence operator.</para>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if the <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> has an equivalence operator, <computeroutput>false</computeroutput> otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="319" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a6ab998854fc4085dc5c2bec625ab1c4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setHasEqOperator</definition>
        <argsstring>(bool hasEqOperator)</argsstring>
        <name>setHasEqOperator</name>
        <param>
          <type>bool</type>
          <declname>hasEqOperator</declname>
        </param>
        <briefdescription>
<para>Set whether this <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> has an equivalence operator. </para>
        </briefdescription>
        <detaileddescription>
<para>Set whether this <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> has an equivalence operator.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hasEqOperator</parametername>
</parameternamelist>
<parameterdescription>
<para>A <computeroutput>bool</computeroutput> to determine whether this <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> has an equivalence operator. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="329" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a79888abbbb193174c534211e86838f8b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool libcellml::GeneratorProfile::hasNeqOperator</definition>
        <argsstring>() const</argsstring>
        <name>hasNeqOperator</name>
        <briefdescription>
<para>Test if this <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> has a nonequivalence operator. </para>
        </briefdescription>
        <detaileddescription>
<para>Test if this <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> has a nonequivalence operator.</para>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if the <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> has a nonequivalence operator, <computeroutput>false</computeroutput> otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="339" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a29dbfbb34d1035aeb1b21451d21bc72a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setHasNeqOperator</definition>
        <argsstring>(bool hasNeqOperator)</argsstring>
        <name>setHasNeqOperator</name>
        <param>
          <type>bool</type>
          <declname>hasNeqOperator</declname>
        </param>
        <briefdescription>
<para>Set whether this <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> has a nonequivalence operator. </para>
        </briefdescription>
        <detaileddescription>
<para>Set whether this <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> has a nonequivalence operator.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hasNeqOperator</parametername>
</parameternamelist>
<parameterdescription>
<para>A <computeroutput>bool</computeroutput> to determine whether this <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> has a nonequivalence operator. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="349" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a0858382b8b77bbc43727f45504f3fd7c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool libcellml::GeneratorProfile::hasLtOperator</definition>
        <argsstring>() const</argsstring>
        <name>hasLtOperator</name>
        <briefdescription>
<para>Test if this <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> has a lower than operator. </para>
        </briefdescription>
        <detaileddescription>
<para>Test if this <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> has a lower than operator.</para>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if the <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> has a lower than operator, <computeroutput>false</computeroutput> otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="359" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a3c9fd674c7e44ff085f70c377b8c5bb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setHasLtOperator</definition>
        <argsstring>(bool hasLtOperator)</argsstring>
        <name>setHasLtOperator</name>
        <param>
          <type>bool</type>
          <declname>hasLtOperator</declname>
        </param>
        <briefdescription>
<para>Set whether this <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> has a lower than operator. </para>
        </briefdescription>
        <detaileddescription>
<para>Set whether this <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> has a lower than operator.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hasLtOperator</parametername>
</parameternamelist>
<parameterdescription>
<para>A <computeroutput>bool</computeroutput> to determine whether this <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> has a lower than operator. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="369" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a8e75084342eb33dac00c2d3c1dc51a8e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool libcellml::GeneratorProfile::hasLeqOperator</definition>
        <argsstring>() const</argsstring>
        <name>hasLeqOperator</name>
        <briefdescription>
<para>Test if this <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> has a lower or equal than operator. </para>
        </briefdescription>
        <detaileddescription>
<para>Test if this <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> has a lower or equal than operator.</para>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if the <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> has a lower or equal than operator, <computeroutput>false</computeroutput> otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="381" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1af6b5e9acba2d16b6ff1a361f8c77bdc4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setHasLeqOperator</definition>
        <argsstring>(bool hasLeqOperator)</argsstring>
        <name>setHasLeqOperator</name>
        <param>
          <type>bool</type>
          <declname>hasLeqOperator</declname>
        </param>
        <briefdescription>
<para>Set whether this <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> has a lower or equal than operator. </para>
        </briefdescription>
        <detaileddescription>
<para>Set whether this <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> has a lower or equal than operator.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hasLeqOperator</parametername>
</parameternamelist>
<parameterdescription>
<para>A <computeroutput>bool</computeroutput> to determine whether this <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> has a lower or equal than operator. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="392" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1adde55bb026365251671e24dfaf588843" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool libcellml::GeneratorProfile::hasGtOperator</definition>
        <argsstring>() const</argsstring>
        <name>hasGtOperator</name>
        <briefdescription>
<para>Test if this <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> has a greater than operator. </para>
        </briefdescription>
        <detaileddescription>
<para>Test if this <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> has a greater than operator.</para>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if the <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> has a greater than operator, <computeroutput>false</computeroutput> otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="402" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a35cecf1dc4364951ddc0fb51e0b2858e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setHasGtOperator</definition>
        <argsstring>(bool hasGtOperator)</argsstring>
        <name>setHasGtOperator</name>
        <param>
          <type>bool</type>
          <declname>hasGtOperator</declname>
        </param>
        <briefdescription>
<para>Set whether this <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> has a greater than operator. </para>
        </briefdescription>
        <detaileddescription>
<para>Set whether this <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> has a greater than operator.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hasGtOperator</parametername>
</parameternamelist>
<parameterdescription>
<para>A <computeroutput>bool</computeroutput> to determine whether this <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> has a greater than operator. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="412" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1ae608e86444c287eb92b5da610e3abaf6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool libcellml::GeneratorProfile::hasGeqOperator</definition>
        <argsstring>() const</argsstring>
        <name>hasGeqOperator</name>
        <briefdescription>
<para>Test if this <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> has a greater or equal than operator. </para>
        </briefdescription>
        <detaileddescription>
<para>Test if this <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> has a greater or equal than operator.</para>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if the <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> has a greater or equal than operator, <computeroutput>false</computeroutput> otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="424" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1adab33d68e12f26924bb5d3d6bfb083a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setHasGeqOperator</definition>
        <argsstring>(bool hasGeqOperator)</argsstring>
        <name>setHasGeqOperator</name>
        <param>
          <type>bool</type>
          <declname>hasGeqOperator</declname>
        </param>
        <briefdescription>
<para>Set whether this <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> has a greater or equal than operator. </para>
        </briefdescription>
        <detaileddescription>
<para>Set whether this <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> has a greater or equal than operator.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hasGeqOperator</parametername>
</parameternamelist>
<parameterdescription>
<para>A <computeroutput>bool</computeroutput> to determine whether this <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> has a greater or equal than operator. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="436" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1ab3f6039ded5e59777c052aef20cf1226" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool libcellml::GeneratorProfile::hasAndOperator</definition>
        <argsstring>() const</argsstring>
        <name>hasAndOperator</name>
        <briefdescription>
<para>Test if this <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> has an and operator. </para>
        </briefdescription>
        <detaileddescription>
<para>Test if this <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> has an and operator.</para>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if the <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> has an and operator, <computeroutput>false</computeroutput> otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="446" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1aa5d06c6072d41220e11dfb7c363675c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setHasAndOperator</definition>
        <argsstring>(bool hasAndOperator)</argsstring>
        <name>setHasAndOperator</name>
        <param>
          <type>bool</type>
          <declname>hasAndOperator</declname>
        </param>
        <briefdescription>
<para>Set whether this <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> has an and operator. </para>
        </briefdescription>
        <detaileddescription>
<para>Set whether this <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> has an and operator.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hasAndOperator</parametername>
</parameternamelist>
<parameterdescription>
<para>A <computeroutput>bool</computeroutput> to determine whether this <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> has an and operator. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="456" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a867e428facc98eafb09898d5434d761e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool libcellml::GeneratorProfile::hasOrOperator</definition>
        <argsstring>() const</argsstring>
        <name>hasOrOperator</name>
        <briefdescription>
<para>Test if this <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> has an or operator. </para>
        </briefdescription>
        <detaileddescription>
<para>Test if this <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> has an or operator.</para>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if the <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> has an or operator, <computeroutput>false</computeroutput> otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="466" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1af145529b62f3c132eb3e2077d3505442" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setHasOrOperator</definition>
        <argsstring>(bool hasOrOperator)</argsstring>
        <name>setHasOrOperator</name>
        <param>
          <type>bool</type>
          <declname>hasOrOperator</declname>
        </param>
        <briefdescription>
<para>Set whether this <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> has an or operator. </para>
        </briefdescription>
        <detaileddescription>
<para>Set whether this <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> has an or operator.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hasOrOperator</parametername>
</parameternamelist>
<parameterdescription>
<para>A <computeroutput>bool</computeroutput> to determine whether this <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> has an or operator. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="476" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a12832c4faccd64693f109651af12cec6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool libcellml::GeneratorProfile::hasXorOperator</definition>
        <argsstring>() const</argsstring>
        <name>hasXorOperator</name>
        <briefdescription>
<para>Test if this <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> has a xor operator. </para>
        </briefdescription>
        <detaileddescription>
<para>Test if this <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> has a xor operator.</para>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if the <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> has a xor operator, <computeroutput>false</computeroutput> otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="486" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1ac179e5b94cc02dac39b5b4cb2a78f624" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setHasXorOperator</definition>
        <argsstring>(bool hasXorOperator)</argsstring>
        <name>setHasXorOperator</name>
        <param>
          <type>bool</type>
          <declname>hasXorOperator</declname>
        </param>
        <briefdescription>
<para>Set whether this <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> has a xor operator. </para>
        </briefdescription>
        <detaileddescription>
<para>Set whether this <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> has a xor operator.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hasXorOperator</parametername>
</parameternamelist>
<parameterdescription>
<para>A <computeroutput>bool</computeroutput> to determine whether this <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> has a xor operator. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="496" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a8628665d18dbd8a4ce321c68b0d1352c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool libcellml::GeneratorProfile::hasNotOperator</definition>
        <argsstring>() const</argsstring>
        <name>hasNotOperator</name>
        <briefdescription>
<para>Test if this <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> has a not operator. </para>
        </briefdescription>
        <detaileddescription>
<para>Test if this <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> has a not operator.</para>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if the <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> has a not operator, <computeroutput>false</computeroutput> otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="506" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a47e605ad75a5b9c4d41340e720751c6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setHasNotOperator</definition>
        <argsstring>(bool hasNotOperator)</argsstring>
        <name>setHasNotOperator</name>
        <param>
          <type>bool</type>
          <declname>hasNotOperator</declname>
        </param>
        <briefdescription>
<para>Set whether this <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> has a not operator. </para>
        </briefdescription>
        <detaileddescription>
<para>Set whether this <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> has a not operator.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hasNotOperator</parametername>
</parameternamelist>
<parameterdescription>
<para>A <computeroutput>bool</computeroutput> to determine whether this <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> has a not operator. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="516" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a9be5d39d7ffa94b883e340c07e38e44a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::plusString</definition>
        <argsstring>() const</argsstring>
        <name>plusString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for an addition. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for an addition.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for an addition. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="527" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a9188dd4fc12033a9a88f4765eecac44e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setPlusString</definition>
        <argsstring>(const std::string &amp;plusString)</argsstring>
        <name>setPlusString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>plusString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for an addition. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for an addition.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>plusString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for an addition. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="536" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a852b83329f6214fdd02bc90114d8598a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::minusString</definition>
        <argsstring>() const</argsstring>
        <name>minusString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for a subtraction. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for a subtraction.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for a subtraction. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="545" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a02745cb0f003a546777722b359ddec9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setMinusString</definition>
        <argsstring>(const std::string &amp;minusString)</argsstring>
        <name>setMinusString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>minusString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for a subtraction. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for a subtraction.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>minusString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for a subtraction. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="554" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1af21d4fe22ecd383fac901211e017009c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::timesString</definition>
        <argsstring>() const</argsstring>
        <name>timesString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for a multiplication. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for a multiplication.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for a multiplication. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="563" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a568a95f993bb9f58c3ff4b78a4dd94af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setTimesString</definition>
        <argsstring>(const std::string &amp;timesString)</argsstring>
        <name>setTimesString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>timesString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for a multiplication. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for a multiplication.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timesString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for a multiplication. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="572" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a0dbb8e9c8de7096e4c52705322d2da12" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::divideString</definition>
        <argsstring>() const</argsstring>
        <name>divideString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for a division. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for a division.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for a division. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="581" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1ac223e368d1f6a67039f218c0ce344993" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setDivideString</definition>
        <argsstring>(const std::string &amp;divideString)</argsstring>
        <name>setDivideString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>divideString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for a division. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for a division.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>divideString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for a division. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="590" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1ac6bdb50ef33f18776b230eca7f216090" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::powerString</definition>
        <argsstring>() const</argsstring>
        <name>powerString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for a power. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for a power.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for a power. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="599" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a835e263f8e6216a2727442f106c0c2aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setPowerString</definition>
        <argsstring>(const std::string &amp;powerString)</argsstring>
        <name>setPowerString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>powerString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for a power. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for a power.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>powerString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for a power. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="608" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a54a65d83c85ddc272f7cd55229d04bea" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::squareRootString</definition>
        <argsstring>() const</argsstring>
        <name>squareRootString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for a square root. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for a square root.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for a square root. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="617" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1aca3e96e22a2fe59fca773ea4ac65c19c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setSquareRootString</definition>
        <argsstring>(const std::string &amp;squareRootString)</argsstring>
        <name>setSquareRootString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>squareRootString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for a square root. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for a square root.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>squareRootString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for a square root. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="626" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1af00c11cff62a5b16260c3f7a7ca7a989" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::squareString</definition>
        <argsstring>() const</argsstring>
        <name>squareString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for a square. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for a square.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for a square. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="635" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a79f5e8c3760d2c0c24449098ad971d78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setSquareString</definition>
        <argsstring>(const std::string &amp;squareString)</argsstring>
        <name>setSquareString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>squareString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for a square. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for a square.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>squareString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for a square. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="644" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1aebf479f374e134f467b81fc6596d2715" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::absoluteValueString</definition>
        <argsstring>() const</argsstring>
        <name>absoluteValueString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for an absolute value. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for an absolute value.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for an absolute value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="653" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a79721f9a22fed620e619c2d21ce7c77c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setAbsoluteValueString</definition>
        <argsstring>(const std::string &amp;absoluteValueString)</argsstring>
        <name>setAbsoluteValueString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>absoluteValueString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for an absolute value. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for an absolute value.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>absoluteValueString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for an absolute value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="663" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a442293083b20ca8ba777e0d0887d3085" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::exponentialString</definition>
        <argsstring>() const</argsstring>
        <name>exponentialString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for an exponential. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for an exponential.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for an exponential. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="672" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1afcee0d4b891a17ac1a22528194f505c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setExponentialString</definition>
        <argsstring>(const std::string &amp;exponentialString)</argsstring>
        <name>setExponentialString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>exponentialString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for an exponential. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for an exponential.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>exponentialString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for an exponential. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="681" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a3aa1fc9813ee6e2c86a7fdc8f98cd478" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::napierianLogarithmString</definition>
        <argsstring>() const</argsstring>
        <name>napierianLogarithmString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for a Napierian logarithm. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for a Napierian logarithm.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for a Napierian logarithm. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="690" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a0dc591dc177b9a1459ada9895cb6b707" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setNapierianLogarithmString</definition>
        <argsstring>(const std::string &amp;napierianLogarithmString)</argsstring>
        <name>setNapierianLogarithmString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>napierianLogarithmString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for a Napierian logarithm. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for a Napierian logarithm.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>napierianLogarithmString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for a Napierian logarithm. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="700" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a5851a0aab9162c4048e222008691c59e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::commonLogarithmString</definition>
        <argsstring>() const</argsstring>
        <name>commonLogarithmString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for a common logarithm. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for a common logarithm.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for a common logarithm. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="709" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1ac0d2c65a4c278204d2e8dcff1ef8352f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setCommonLogarithmString</definition>
        <argsstring>(const std::string &amp;commonLogarithmString)</argsstring>
        <name>setCommonLogarithmString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>commonLogarithmString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for a common logarithm. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for a common logarithm.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>commonLogarithmString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for a common logarithm. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="719" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1afe683c7cdc6baf5cb885054c9e20c4f2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::ceilingString</definition>
        <argsstring>() const</argsstring>
        <name>ceilingString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for a ceiling. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for a ceiling.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for a ceiling. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="728" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a0c24f1165b3b77b3fe162e1e2aca3645" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setCeilingString</definition>
        <argsstring>(const std::string &amp;ceilingString)</argsstring>
        <name>setCeilingString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>ceilingString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for a ceiling. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for a ceiling.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ceilingString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for a ceiling. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="737" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a57d27120755b9973c86330524acf8c04" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::floorString</definition>
        <argsstring>() const</argsstring>
        <name>floorString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for a floor. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for a floor.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for a floor. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="746" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a499ff35980e51958d35e7743525846d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setFloorString</definition>
        <argsstring>(const std::string &amp;floorString)</argsstring>
        <name>setFloorString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>floorString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for a floor. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for a floor.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>floorString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for a floor. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="755" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a9ec957a72331e92ac99a92bd296be033" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::minString</definition>
        <argsstring>() const</argsstring>
        <name>minString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for a minimum. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for a minimum.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for a minimum. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="764" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a1cc2cd5c97cc307f5339427d5880e851" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setMinString</definition>
        <argsstring>(const std::string &amp;minString)</argsstring>
        <name>setMinString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>minString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for a minimum. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for a minimum.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>minString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for a minimum. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="773" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a2eb19e9162f01a319c5a454327fed590" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::maxString</definition>
        <argsstring>() const</argsstring>
        <name>maxString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for a maximum. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for a maximum.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for a maximum. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="782" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1ab52380844b7a04f04a3610e1fea6f1e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setMaxString</definition>
        <argsstring>(const std::string &amp;maxString)</argsstring>
        <name>setMaxString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>maxString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for a maximum. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for a maximum.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>maxString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for a maximum. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="791" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1af2394023953dfaadfff68f1c2508cd93" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::remString</definition>
        <argsstring>() const</argsstring>
        <name>remString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for a remainder. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for a remainder.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for a remainder. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="800" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a68cac6fa0aefa7f7ad6d17ed6bcec54d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setRemString</definition>
        <argsstring>(const std::string &amp;remString)</argsstring>
        <name>setRemString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>remString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for a remainder. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for a remainder.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>remString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for a remainder. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="809" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1ae92f04f7fc04075678332121bcf4643d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool libcellml::GeneratorProfile::hasPowerOperator</definition>
        <argsstring>() const</argsstring>
        <name>hasPowerOperator</name>
        <briefdescription>
<para>Test if this <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> has a power operator. </para>
        </briefdescription>
        <detaileddescription>
<para>Test if this <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> has a power operator.</para>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if the <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> has a power operator, <computeroutput>false</computeroutput> otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="819" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a6187a0560e22386a10debb6d001ee87b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setHasPowerOperator</definition>
        <argsstring>(bool hasPowerOperator)</argsstring>
        <name>setHasPowerOperator</name>
        <param>
          <type>bool</type>
          <declname>hasPowerOperator</declname>
        </param>
        <briefdescription>
<para>Set whether this <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> has a power operator. </para>
        </briefdescription>
        <detaileddescription>
<para>Set whether this <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> has a power operator.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hasPowerOperator</parametername>
</parameternamelist>
<parameterdescription>
<para>A <computeroutput>bool</computeroutput> to determine whether this <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> has a power operator. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="829" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a8316882c4a3eb8a36384b5ed78b7afd5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::sinString</definition>
        <argsstring>() const</argsstring>
        <name>sinString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for sine. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for sine.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for sine. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="840" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a7796a239686ba58fd323a59efcf04590" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setSinString</definition>
        <argsstring>(const std::string &amp;sinString)</argsstring>
        <name>setSinString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>sinString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for sine. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for sine.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sinString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for sine. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="849" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a70ec02f7dc68115c3236de0a2650d1c4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::cosString</definition>
        <argsstring>() const</argsstring>
        <name>cosString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for cosine. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for cosine.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for cosine. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="858" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a9fc6878159698314c09fe8a521470fd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setCosString</definition>
        <argsstring>(const std::string &amp;cosString)</argsstring>
        <name>setCosString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>cosString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for cosine. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for cosine.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cosString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for cosine. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="867" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a5661c1d0a82edf048cacf35bc45598e3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::tanString</definition>
        <argsstring>() const</argsstring>
        <name>tanString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for tangent. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for tangent.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for tangent. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="876" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a3f625e3027fd1174d99f3a336df98521" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setTanString</definition>
        <argsstring>(const std::string &amp;tanString)</argsstring>
        <name>setTanString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>tanString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for tangent. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for tangent.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tanString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for tangent. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="885" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a19387bd65c61f132b188cd52b66ab47c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::secString</definition>
        <argsstring>() const</argsstring>
        <name>secString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for secant. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for secant.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for secant. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="894" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a1852abcbcf118172d444e369b12aa333" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setSecString</definition>
        <argsstring>(const std::string &amp;secString)</argsstring>
        <name>setSecString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>secString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for secant. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for secant.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>secString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for secant. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="903" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a87fbfbb9be1e812ae6adefc3c9d217cf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::cscString</definition>
        <argsstring>() const</argsstring>
        <name>cscString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for cosecant. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for cosecant.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for cosecant. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="912" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a748d447a86aa17213de2cce856698cc4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setCscString</definition>
        <argsstring>(const std::string &amp;cscString)</argsstring>
        <name>setCscString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>cscString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for cosecant. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for cosecant.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cscString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for cosecant. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="921" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1ad7a4c3751a0aa91b086aac580236c47d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::cotString</definition>
        <argsstring>() const</argsstring>
        <name>cotString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for cotangent. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for cotangent.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for cotangent. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="930" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1ada9c773b4d5f20c5a2956c99bf354bdd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setCotString</definition>
        <argsstring>(const std::string &amp;cotString)</argsstring>
        <name>setCotString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>cotString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for cotangent. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for cotangent.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cotString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for cotangent. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="939" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a92abe687646d5be807c14ed433c0e35c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::sinhString</definition>
        <argsstring>() const</argsstring>
        <name>sinhString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for hyperbolic sine. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for hyperbolic sine.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for hyperbolic sine. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="948" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1ae3e54b67e46f44141a619053b2364c0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setSinhString</definition>
        <argsstring>(const std::string &amp;sinhString)</argsstring>
        <name>setSinhString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>sinhString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for hyperbolic sine. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for hyperbolic sine.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sinhString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for hyperbolic sine. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="957" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1ab1452a1a07c07cfbac79bab6d7976bc4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::coshString</definition>
        <argsstring>() const</argsstring>
        <name>coshString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for hyperbolic cosine. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for hyperbolic cosine.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for hyperbolic cosine. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="966" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a75de423ee3f9b1ec62343fbc714bac8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setCoshString</definition>
        <argsstring>(const std::string &amp;coshString)</argsstring>
        <name>setCoshString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>coshString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for hyperbolic cosine. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for hyperbolic cosine.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coshString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for hyperbolic cosine. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="975" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a40df56331e027dac26369021974f40ed" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::tanhString</definition>
        <argsstring>() const</argsstring>
        <name>tanhString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for hyperbolic tangent. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for hyperbolic tangent.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for hyperbolic tangent. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="984" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a0ea5a65219d7e54cb6d98f99389075d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setTanhString</definition>
        <argsstring>(const std::string &amp;tanhString)</argsstring>
        <name>setTanhString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>tanhString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for hyperbolic tangent. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for hyperbolic tangent.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tanhString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for hyperbolic tangent. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="993" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a57cfdde55fd4f39ec1750e4248f57c32" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::sechString</definition>
        <argsstring>() const</argsstring>
        <name>sechString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for hyperbolic secant. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for hyperbolic secant.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for hyperbolic secant. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1002" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1af5cffd49f9edac1b4f14b3c2bb636050" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setSechString</definition>
        <argsstring>(const std::string &amp;sechString)</argsstring>
        <name>setSechString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>sechString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for hyperbolic secant. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for hyperbolic secant.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sechString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for hyperbolic secant. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1011" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a61dc00e2116e16549d7dc4057f12266f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::cschString</definition>
        <argsstring>() const</argsstring>
        <name>cschString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for hyperbolic cosecant. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for hyperbolic cosecant.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for hyperbolic cosecant. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1020" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a0f5c722febbd343e7fae478361ef34ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setCschString</definition>
        <argsstring>(const std::string &amp;cschString)</argsstring>
        <name>setCschString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>cschString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for hyperbolic cosecant. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for hyperbolic cosecant.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cschString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for hyperbolic cosecant. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1029" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a5363fd8c2f906c0dec6c1184c6ca9ebb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::cothString</definition>
        <argsstring>() const</argsstring>
        <name>cothString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for hyperbolic cotangent. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for hyperbolic cotangent.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for hyperbolic cotangent. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1038" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a4c28ba1a0408d3e37e34236ad4ed1107" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setCothString</definition>
        <argsstring>(const std::string &amp;cothString)</argsstring>
        <name>setCothString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>cothString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for hyperbolic cotangent. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for hyperbolic cotangent.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cothString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for hyperbolic cotangent. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1047" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a90c5f4e56eac97f4aa2d0767e76e0430" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::asinString</definition>
        <argsstring>() const</argsstring>
        <name>asinString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for inverse sine. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for inverse sine.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for inverse sine. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1056" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a3757c8c85d4aff6c97bf6e65a54fdb94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setAsinString</definition>
        <argsstring>(const std::string &amp;asinString)</argsstring>
        <name>setAsinString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>asinString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for inverse sine. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for inverse sine.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>asinString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for inverse sine. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1065" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a0b0ca2a7d7e3b9caebb388c71b52a2f8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::acosString</definition>
        <argsstring>() const</argsstring>
        <name>acosString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for inverse cosine. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for inverse cosine.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for inverse cosine. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1074" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a93415193f92538041419d7389c27137a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setAcosString</definition>
        <argsstring>(const std::string &amp;acosString)</argsstring>
        <name>setAcosString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>acosString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for inverse cosine. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for inverse cosine.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>acosString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for inverse cosine. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1083" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1af3959bbdb473750ac8b74c16410d34a2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::atanString</definition>
        <argsstring>() const</argsstring>
        <name>atanString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for inverse tangent. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for inverse tangent.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for inverse tangent. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1092" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a02f1e8905cf9f16f44404c39627593d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setAtanString</definition>
        <argsstring>(const std::string &amp;atanString)</argsstring>
        <name>setAtanString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>atanString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for inverse tangent. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for inverse tangent.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>atanString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for inverse tangent. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1101" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1ab7a72748da927e4296f69afc4c346488" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::asecString</definition>
        <argsstring>() const</argsstring>
        <name>asecString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for inverse secant. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for inverse secant.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for inverse secant. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1110" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a0f1f42fdf45d24f0b1ecaaa19e4d2b6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setAsecString</definition>
        <argsstring>(const std::string &amp;asecString)</argsstring>
        <name>setAsecString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>asecString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for inverse secant. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for inverse secant.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>asecString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for inverse secant. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1119" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a4f7c8bb0d8c52ef7705ced5aef242c5c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::acscString</definition>
        <argsstring>() const</argsstring>
        <name>acscString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for inverse cosecant. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for inverse cosecant.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for inverse cosecant. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1128" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a4cd662509f7a7ffa9b67fe52cfc5e994" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setAcscString</definition>
        <argsstring>(const std::string &amp;acscString)</argsstring>
        <name>setAcscString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>acscString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for inverse cosecant. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for inverse cosecant.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>acscString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for inverse cosecant. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1137" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1ac480db6b9584a6b85a6741f460c39abf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::acotString</definition>
        <argsstring>() const</argsstring>
        <name>acotString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for inverse cotangent. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for inverse cotangent.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for inverse cotangent. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1146" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a5d58ccd4f5899f9d62c961ac086bc7a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setAcotString</definition>
        <argsstring>(const std::string &amp;acotString)</argsstring>
        <name>setAcotString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>acotString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for inverse cotangent. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for inverse cotangent.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>acotString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for inverse cotangent. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1155" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a17d15adccdb7eed62032192143f276ea" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::asinhString</definition>
        <argsstring>() const</argsstring>
        <name>asinhString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for inverse hyperbolic sine. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for inverse hyperbolic sine.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for inverse hyperbolic sine. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1164" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1ab0d39b098080bd85b928436d64e437c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setAsinhString</definition>
        <argsstring>(const std::string &amp;asinhString)</argsstring>
        <name>setAsinhString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>asinhString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for inverse hyperbolic sine. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for inverse hyperbolic sine.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>asinhString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for inverse hyperbolic sine. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1173" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a3ca6ce36aed0efbd5b681df62250e8f0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::acoshString</definition>
        <argsstring>() const</argsstring>
        <name>acoshString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for inverse hyperbolic cosine. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for inverse hyperbolic cosine.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for inverse hyperbolic cosine. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1182" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a205563de02dea4204e8f1e6708c9edd4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setAcoshString</definition>
        <argsstring>(const std::string &amp;acoshString)</argsstring>
        <name>setAcoshString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>acoshString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for inverse hyperbolic cosine. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for inverse hyperbolic cosine.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>acoshString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for inverse hyperbolic cosine. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1192" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1ad71e933689c49b1d3aad0da4adef1ff3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::atanhString</definition>
        <argsstring>() const</argsstring>
        <name>atanhString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for inverse hyperbolic tangent. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for inverse hyperbolic tangent.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for inverse hyperbolic tangent. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1201" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a396dee90f09b6f6a5e7005439b2996f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setAtanhString</definition>
        <argsstring>(const std::string &amp;atanhString)</argsstring>
        <name>setAtanhString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>atanhString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for inverse hyperbolic tangent. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for inverse hyperbolic tangent.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>atanhString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for inverse hyperbolic tangent. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1211" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1aff1b8b5034b8bbe0ed67d30727e0102c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::asechString</definition>
        <argsstring>() const</argsstring>
        <name>asechString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for inverse hyperbolic secant. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for inverse hyperbolic secant.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for inverse hyperbolic secant. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1220" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1ac2147452e3cf51e7574a86206ba286c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setAsechString</definition>
        <argsstring>(const std::string &amp;asechString)</argsstring>
        <name>setAsechString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>asechString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for inverse hyperbolic secant. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for inverse hyperbolic secant.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>asechString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for inverse hyperbolic secant. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1230" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a32d6197d370526edf34b35e95110405d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::acschString</definition>
        <argsstring>() const</argsstring>
        <name>acschString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for inverse hyperbolic cosecant. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for inverse hyperbolic cosecant.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for inverse hyperbolic cosecant. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1239" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1aa35094f5286bf5244e65edb83a4332e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setAcschString</definition>
        <argsstring>(const std::string &amp;acschString)</argsstring>
        <name>setAcschString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>acschString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for inverse hyperbolic cosecant. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for inverse hyperbolic cosecant.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>acschString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for inverse hyperbolic cosecant. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1249" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a905eed79bbcb70ee2c5a9d9f00d22a09" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::acothString</definition>
        <argsstring>() const</argsstring>
        <name>acothString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for inverse hyperbolic cotangent. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for inverse hyperbolic cotangent.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for inverse hyperbolic cotangent. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1258" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1aa5e414555aa3a828bde3f1baaa126237" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setAcothString</definition>
        <argsstring>(const std::string &amp;acothString)</argsstring>
        <name>setAcothString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>acothString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for inverse hyperbolic cotangent. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for inverse hyperbolic cotangent.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>acothString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for inverse hyperbolic cotangent. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1268" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a153c1e2e70a0a773f27ca36cb5b1241a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::conditionalOperatorIfString</definition>
        <argsstring>() const</argsstring>
        <name>conditionalOperatorIfString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for the if part of a condition statement. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for the if part of a condition statement.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for the if part of a condition statement. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1279" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a9b6d39de926990fa31f8eb51b6cd88a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setConditionalOperatorIfString</definition>
        <argsstring>(const std::string &amp;conditionalOperatorIfString)</argsstring>
        <name>setConditionalOperatorIfString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>conditionalOperatorIfString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for the if part of a condition statement. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for the if part of a condition statement.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conditionalOperatorIfString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for the if part of a condition statement. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1289" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a0d8ea34251a1a92c3b350f049ef4403b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::conditionalOperatorElseString</definition>
        <argsstring>() const</argsstring>
        <name>conditionalOperatorElseString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for the else part of a condition statement. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for the else part of a condition statement.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for the else part of a condition statement. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1298" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a967d588d41e0125ac793c9488088d3ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setConditionalOperatorElseString</definition>
        <argsstring>(const std::string &amp;conditionalOperatorElseString)</argsstring>
        <name>setConditionalOperatorElseString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>conditionalOperatorElseString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for the else part of a condition statement. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for the else part of a condition statement.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conditionalOperatorElseString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for the else part of a condition statement. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1308" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a08500b17d75dfc99548c2f1e03c81a4b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::piecewiseIfString</definition>
        <argsstring>() const</argsstring>
        <name>piecewiseIfString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for the if part of a piecewise statement. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for the if part of a piecewise statement.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for the if part of a piecewise statement. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1317" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1aa6806c3a60224f3b7196bd71d3f3aa28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setPiecewiseIfString</definition>
        <argsstring>(const std::string &amp;piecewiseIfString)</argsstring>
        <name>setPiecewiseIfString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>piecewiseIfString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for the if part of a piecewise statement. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for the if part of a piecewise statement.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>piecewiseIfString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for the if part of a piecewise statement. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1327" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1aaf5c7537bb396c5678f1311078011588" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::piecewiseElseString</definition>
        <argsstring>() const</argsstring>
        <name>piecewiseElseString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for the else part of a piecewise statement. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for the else part of a piecewise statement.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for the else part of a piecewise statement. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1336" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a37334da678f6f87374a3e8b80bcbde8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setPiecewiseElseString</definition>
        <argsstring>(const std::string &amp;piecewiseElseString)</argsstring>
        <name>setPiecewiseElseString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>piecewiseElseString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for the else part of a piecewise statement. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for the else part of a piecewise statement.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>piecewiseElseString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for the else part of a piecewise statement. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1346" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1ad5bf12f72a3051584b3415ec41f0c866" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool libcellml::GeneratorProfile::hasConditionalOperator</definition>
        <argsstring>() const</argsstring>
        <name>hasConditionalOperator</name>
        <briefdescription>
<para>Test if this <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> has a conditional operator. </para>
        </briefdescription>
        <detaileddescription>
<para>Test if this <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> has a conditional operator.</para>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if the <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> has a conditional operator, <computeroutput>false</computeroutput> otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1356" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a6694c27b27adda47834168820b4ce8d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setHasConditionalOperator</definition>
        <argsstring>(bool hasConditionalOperator)</argsstring>
        <name>setHasConditionalOperator</name>
        <param>
          <type>bool</type>
          <declname>hasConditionalOperator</declname>
        </param>
        <briefdescription>
<para>Set whether this <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> has a conditional operator. </para>
        </briefdescription>
        <detaileddescription>
<para>Set whether this <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> has a conditional operator.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hasConditionalOperator</parametername>
</parameternamelist>
<parameterdescription>
<para>A <computeroutput>bool</computeroutput> to determine whether this <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> has a conditional operator. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1366" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1abf82bc66180931f0feef4f136c3cd4f3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::trueString</definition>
        <argsstring>() const</argsstring>
        <name>trueString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for true. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for true.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for true. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1377" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a19f259133f28b3f10cb6e375136c4150" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setTrueString</definition>
        <argsstring>(const std::string &amp;trueString)</argsstring>
        <name>setTrueString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>trueString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for true. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for true.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>trueString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for true. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1386" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a5d366fee38277d814f53e8bdfdf074fa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::falseString</definition>
        <argsstring>() const</argsstring>
        <name>falseString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for false. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for false.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for false. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1395" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a2f43add1bbbd47d8582c5af7f7864356" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setFalseString</definition>
        <argsstring>(const std::string &amp;falseString)</argsstring>
        <name>setFalseString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>falseString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for false. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for false.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>falseString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for false. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1404" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a494a6f9d551416720e643f89f1c050d3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::eString</definition>
        <argsstring>() const</argsstring>
        <name>eString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for exponential constant. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for exponential constant.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for exponential constant. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1413" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1aa1e8b548479de6ae82ce9fa73dd37f76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setEString</definition>
        <argsstring>(const std::string &amp;eString)</argsstring>
        <name>setEString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>eString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for exponential constant. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for exponential constant.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for exponential constant. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1422" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a018d91ce5f07cc873eb859c108f1cc84" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::piString</definition>
        <argsstring>() const</argsstring>
        <name>piString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for π. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for π.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for π. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1431" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1ab953ceeabea60f92231217cce134a371" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setPiString</definition>
        <argsstring>(const std::string &amp;piString)</argsstring>
        <name>setPiString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>piString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for π. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for π.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>piString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for π. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1440" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a7af24867613482b7368b1a82a99f7a53" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::infString</definition>
        <argsstring>() const</argsstring>
        <name>infString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for infinity. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for infinity.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for infinity. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1449" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1aac50ab438fbc191b64a99304a05fee41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setInfString</definition>
        <argsstring>(const std::string &amp;infString)</argsstring>
        <name>setInfString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>infString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for infinity. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for infinity.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>infString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for infinity. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1458" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1af8580a3a417850ce5010ec4b52df7e05" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::nanString</definition>
        <argsstring>() const</argsstring>
        <name>nanString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for NaN. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for NaN.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for NaN. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1467" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a2c1a373ba7056504e5b48cd828b820b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setNanString</definition>
        <argsstring>(const std::string &amp;nanString)</argsstring>
        <name>setNanString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>nanString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for NaN. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for NaN.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nanString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for NaN. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1476" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a286c8a490e387eb7350861eb69b246e7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::eqFunctionString</definition>
        <argsstring>() const</argsstring>
        <name>eqFunctionString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for the equivalence function. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for the equivalence function.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for the equivalence function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1487" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a50901434cd417f2c2aa2d6f52eed0f3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setEqFunctionString</definition>
        <argsstring>(const std::string &amp;eqFunctionString)</argsstring>
        <name>setEqFunctionString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>eqFunctionString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for the equivalence function. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for the equivalence function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eqFunctionString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for the equivalence function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1497" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1ad630e661373897708e1434f7f4126e37" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::neqFunctionString</definition>
        <argsstring>() const</argsstring>
        <name>neqFunctionString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for the nonequivalence function. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for the nonequivalence function.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for the nonequivalence function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1506" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1abff74352750809606a6a4628b28ae1af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setNeqFunctionString</definition>
        <argsstring>(const std::string &amp;neqFunctionString)</argsstring>
        <name>setNeqFunctionString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>neqFunctionString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for the nonequivalence function. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for the nonequivalence function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>neqFunctionString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for the nonequivalence function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1516" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1af09af6e97d948b4817a2a4bd29c37304" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::ltFunctionString</definition>
        <argsstring>() const</argsstring>
        <name>ltFunctionString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for the lower than function. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for the lower than function.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for the lower than function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1525" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1aa2c37c33dd00a9d2c9402164163a60a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setLtFunctionString</definition>
        <argsstring>(const std::string &amp;ltFunctionString)</argsstring>
        <name>setLtFunctionString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>ltFunctionString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for the lower than function. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for the lower than function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ltFunctionString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for the lower than function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1535" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a2c8024caf7d5f3e8434ff0b2f05a1600" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::leqFunctionString</definition>
        <argsstring>() const</argsstring>
        <name>leqFunctionString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for the lower or equal than function. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for the lower or equal than function.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for the lower or equal than function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1544" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a1db0549060cc751747e1d7075a3eeb2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setLeqFunctionString</definition>
        <argsstring>(const std::string &amp;leqFunctionString)</argsstring>
        <name>setLeqFunctionString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>leqFunctionString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for the lower or equal than function. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for the lower or equal than function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>leqFunctionString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for the lower or equal than function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1554" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a622e055a6a82648e0a2a7fac602df0ff" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::gtFunctionString</definition>
        <argsstring>() const</argsstring>
        <name>gtFunctionString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for the greater than function. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for the greater than function.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for the greater than function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1563" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1ab660fadad25f69dd9fb7e1a519a18924" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setGtFunctionString</definition>
        <argsstring>(const std::string &amp;gtFunctionString)</argsstring>
        <name>setGtFunctionString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>gtFunctionString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for the greater than function. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for the greater than function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>gtFunctionString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for the greater than function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1573" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1ad39d595440746ac92ce3c6ff4d484141" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::geqFunctionString</definition>
        <argsstring>() const</argsstring>
        <name>geqFunctionString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for the greater or equal than function. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for the greater or equal than function.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for the greater or equal than function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1582" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a1a78dd5f96c9b28d8bc6546508371f78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setGeqFunctionString</definition>
        <argsstring>(const std::string &amp;geqFunctionString)</argsstring>
        <name>setGeqFunctionString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>geqFunctionString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for the greater or equal than function. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for the greater or equal than function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>geqFunctionString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for the greater or equal than function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1592" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a844baaec145fe235bc27f1107fa548b5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::andFunctionString</definition>
        <argsstring>() const</argsstring>
        <name>andFunctionString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for the and function. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for the and function.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for the and function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1601" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1aff1c76b5d0f1a98deda075b7214949a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setAndFunctionString</definition>
        <argsstring>(const std::string &amp;andFunctionString)</argsstring>
        <name>setAndFunctionString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>andFunctionString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for the and function. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for the and function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>andFunctionString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for the and function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1610" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1ad3c9d22848acd18146570c5c52aec5ee" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::orFunctionString</definition>
        <argsstring>() const</argsstring>
        <name>orFunctionString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for the or function. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for the or function.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for the or function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1619" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a84e64fa85a0444dcc20ea1a051f2eb51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setOrFunctionString</definition>
        <argsstring>(const std::string &amp;orFunctionString)</argsstring>
        <name>setOrFunctionString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>orFunctionString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for the or function. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for the or function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>orFunctionString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for the or function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1628" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a3192ebf0ec00a09fdf16a15516cd354d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::xorFunctionString</definition>
        <argsstring>() const</argsstring>
        <name>xorFunctionString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for the xor function. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for the xor function.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for the xor function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1637" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a6d7850aef15d708fa07b1cfca0fd8c4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setXorFunctionString</definition>
        <argsstring>(const std::string &amp;xorFunctionString)</argsstring>
        <name>setXorFunctionString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>xorFunctionString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for the xor function. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for the xor function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xorFunctionString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for the xor function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1646" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1adc8eec4c0932f851b8474b702c8adb6e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::notFunctionString</definition>
        <argsstring>() const</argsstring>
        <name>notFunctionString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for the not function. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for the not function.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for the not function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1655" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1abfdacb7a75a006998d06e5a94720782e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setNotFunctionString</definition>
        <argsstring>(const std::string &amp;notFunctionString)</argsstring>
        <name>setNotFunctionString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>notFunctionString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for the not function. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for the not function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>notFunctionString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for the not function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1664" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a79c494b9d3bf62b9ad7d323e8a5ecb29" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::minFunctionString</definition>
        <argsstring>() const</argsstring>
        <name>minFunctionString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for the minimum function. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for the minimum function.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for the minimum function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1673" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a8106cd869a68c61453ab93fdfc48b3c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setMinFunctionString</definition>
        <argsstring>(const std::string &amp;minFunctionString)</argsstring>
        <name>setMinFunctionString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>minFunctionString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for the minimum function. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for the minimum function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>minFunctionString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for the minimum function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1683" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a207c58051f73cc6da4e2cff8bfbd415c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::maxFunctionString</definition>
        <argsstring>() const</argsstring>
        <name>maxFunctionString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for the maximum function. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for the maximum function.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for the maximum function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1692" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1adeba2120f228194842e1cfbd1206b2dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setMaxFunctionString</definition>
        <argsstring>(const std::string &amp;maxFunctionString)</argsstring>
        <name>setMaxFunctionString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>maxFunctionString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for the maximum function. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for the maximum function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>maxFunctionString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for the maximum function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1702" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a209856e3fd24402d373a8a63bfc2847d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::secFunctionString</definition>
        <argsstring>() const</argsstring>
        <name>secFunctionString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for the secant function. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for the secant function.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for the secant function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1713" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a9cb0be9363672c10f33f7d1123f36c4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setSecFunctionString</definition>
        <argsstring>(const std::string &amp;secFunctionString)</argsstring>
        <name>setSecFunctionString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>secFunctionString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for the secant function. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for the secant function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>secFunctionString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for the secant function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1723" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1ac5e0fb9289b130800e58ea736b069d02" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::cscFunctionString</definition>
        <argsstring>() const</argsstring>
        <name>cscFunctionString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for the cosecant function. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for the cosecant function.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for the cosecant function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1732" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a8a3476a0c4c05148482553802cd03dc2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setCscFunctionString</definition>
        <argsstring>(const std::string &amp;cscFunctionString)</argsstring>
        <name>setCscFunctionString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>cscFunctionString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for the cosecant function. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for the cosecant function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cscFunctionString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for the cosecant function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1742" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1aa32202ab80c704523caf18c7d31a1374" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::cotFunctionString</definition>
        <argsstring>() const</argsstring>
        <name>cotFunctionString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for the cotangent function. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for the cotangent function.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for the cotangent function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1751" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a07fada62b528092bf2ee5d91a38738d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setCotFunctionString</definition>
        <argsstring>(const std::string &amp;cotFunctionString)</argsstring>
        <name>setCotFunctionString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>cotFunctionString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for the cotangent function. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for the cotangent function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cotFunctionString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for the cotangent function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1761" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a18c578762dcd3956d7117ec0d1834c6f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::sechFunctionString</definition>
        <argsstring>() const</argsstring>
        <name>sechFunctionString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for the hyperbolic secant function. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for the hyperbolic secant function.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for the hyperbolic secant function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1770" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a6112e5081d7e5381791ea074c889848a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setSechFunctionString</definition>
        <argsstring>(const std::string &amp;sechFunctionString)</argsstring>
        <name>setSechFunctionString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>sechFunctionString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for the hyperbolic secant function. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for the hyperbolic secant function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sechFunctionString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for the hyperbolic secant function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1780" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1ae352def524e6ea095fd6384b7a87d458" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::cschFunctionString</definition>
        <argsstring>() const</argsstring>
        <name>cschFunctionString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for the hyperbolic cosecant function. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for the hyperbolic cosecant function.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for the hyperbolic cosecant function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1789" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1ac1ffd465088aaaba3602a84c27e155ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setCschFunctionString</definition>
        <argsstring>(const std::string &amp;cschFunctionString)</argsstring>
        <name>setCschFunctionString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>cschFunctionString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for the hyperbolic cosecant function. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for the hyperbolic cosecant function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cschFunctionString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for the hyperbolic cosecant function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1799" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a32fc4a7d1156422fdab2b1831b1c99fd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::cothFunctionString</definition>
        <argsstring>() const</argsstring>
        <name>cothFunctionString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for the hyperbolic cotangent function. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for the hyperbolic cotangent function.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for the hyperbolic cotangent function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1808" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a105c963cd373f24ad5ab19a893a642ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setCothFunctionString</definition>
        <argsstring>(const std::string &amp;cothFunctionString)</argsstring>
        <name>setCothFunctionString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>cothFunctionString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for the hyperbolic cotangent function. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for the hyperbolic cotangent function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cothFunctionString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for the hyperbolic cotangent function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1818" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1af898922409076ffe0dc7a9c7ea75aed6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::asecFunctionString</definition>
        <argsstring>() const</argsstring>
        <name>asecFunctionString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for the inverse secant function. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for the inverse secant function.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for the inverse secant function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1827" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1adb94a7057eedcdfd2992909ec1820138" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setAsecFunctionString</definition>
        <argsstring>(const std::string &amp;asecFunctionString)</argsstring>
        <name>setAsecFunctionString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>asecFunctionString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for the inverse secant function. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for the inverse secant function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>asecFunctionString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for the inverse secant function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1837" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1acfa6153871d3966b1adb32ce2a601ca3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::acscFunctionString</definition>
        <argsstring>() const</argsstring>
        <name>acscFunctionString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for the inverse cosecant function. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for the inverse cosecant function.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for the inverse cosecant function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1846" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a2d1406b1519f82fc44862673392b7fcd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setAcscFunctionString</definition>
        <argsstring>(const std::string &amp;acscFunctionString)</argsstring>
        <name>setAcscFunctionString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>acscFunctionString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for the inverse cosecant function. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for the inverse cosecant function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>acscFunctionString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for the inverse cosecant function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1856" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1af0c629e13ff09859a6457fb4a051633a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::acotFunctionString</definition>
        <argsstring>() const</argsstring>
        <name>acotFunctionString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for the inverse cotangent function. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for the inverse cotangent function.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for the inverse cotangent function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1865" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1aace4964e0081f546fcdc2a31f6a072b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setAcotFunctionString</definition>
        <argsstring>(const std::string &amp;acotFunctionString)</argsstring>
        <name>setAcotFunctionString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>acotFunctionString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for the inverse cotangent function. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for the inverse cotangent function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>acotFunctionString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for the inverse cotangent function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1875" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a3417ac15ad8967ec441bb27c255df10c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::asechFunctionString</definition>
        <argsstring>() const</argsstring>
        <name>asechFunctionString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for the inverse hyperbolic secant function. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for the inverse hyperbolic secant function.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for the inverse hyperbolic secant function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1884" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1adc80f53e382c5b5e3771d4cf903b1212" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setAsechFunctionString</definition>
        <argsstring>(const std::string &amp;asechFunctionString)</argsstring>
        <name>setAsechFunctionString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>asechFunctionString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for the inverse hyperbolic secant function. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for the inverse hyperbolic secant function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>asechFunctionString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for the inverse hyperbolic secant function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1894" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a77e6ecc36fb617dd69d5e732cf90b92a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::acschFunctionString</definition>
        <argsstring>() const</argsstring>
        <name>acschFunctionString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for the inverse hyperbolic cosecant function. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for the inverse hyperbolic cosecant function.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for the inverse hyperbolic cosecant function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1904" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a50a678ff81e31d6a59fadb9e2f8aa77d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setAcschFunctionString</definition>
        <argsstring>(const std::string &amp;acschFunctionString)</argsstring>
        <name>setAcschFunctionString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>acschFunctionString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for the inverse hyperbolic cosecant function. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for the inverse hyperbolic cosecant function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>acschFunctionString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for the inverse hyperbolic cosecant function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1915" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a2025fecff908881777d55ad3cad6a83a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::acothFunctionString</definition>
        <argsstring>() const</argsstring>
        <name>acothFunctionString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for the inverse hyperbolic cotangent function. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for the inverse hyperbolic cotangent function.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for the inverse hyperbolic cotangent function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1925" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1ab67ab0be655f9de0642556ec9cde3df2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setAcothFunctionString</definition>
        <argsstring>(const std::string &amp;acothFunctionString)</argsstring>
        <name>setAcothFunctionString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>acothFunctionString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for the inverse hyperbolic cotangent function. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for the inverse hyperbolic cotangent function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>acothFunctionString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for the inverse hyperbolic cotangent function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1936" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a630a4e71e87433f6f4805449bb31eb0f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::commentString</definition>
        <argsstring>() const</argsstring>
        <name>commentString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for a comment. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for a comment.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for a comment. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1947" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a4e43d5043a958d695d9ef7927cef572c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setCommentString</definition>
        <argsstring>(const std::string &amp;commentString)</argsstring>
        <name>setCommentString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>commentString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for a comment. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for a comment. To be useful, the string should contain the <computeroutput> tag, which will be replaced with a (proper) comment.</computeroutput></para>
<para><computeroutput><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>commentString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for a comment. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</computeroutput></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1957" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1ab5ac565a77301b527d9329f5aa6861ab" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::originCommentString</definition>
        <argsstring>() const</argsstring>
        <name>originCommentString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for an origin comment. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for an origin comment.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for an origin comment. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1966" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1aedcb0935bd82a382c7dadf52a212fde5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setOriginCommentString</definition>
        <argsstring>(const std::string &amp;originCommentString)</argsstring>
        <name>setOriginCommentString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>originCommentString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for an origin comment. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for an origin comment. To be useful, the string should contain the &lt;PROFILE_INFORMATION&gt; and &lt;LIBCELLML_VERSION&gt; tags, which will be replaced with some profile information and the version of libCellML used.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>originCommentString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for an origin comment. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1979" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a3c0920540cd0c4498f73d4a72ce63f3b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::interfaceFileNameString</definition>
        <argsstring>() const</argsstring>
        <name>interfaceFileNameString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for the interface file name. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for the interface file name.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for the interface file name. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1988" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1abb01c7e9b51a3f6d4c6b933f65633fbe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setInterfaceFileNameString</definition>
        <argsstring>(const std::string &amp;interfaceFileNameString)</argsstring>
        <name>setInterfaceFileNameString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>interfaceFileNameString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for the interface file name. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for the interface file name.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>interfaceFileNameString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use the interface file name. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="1998" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a23d462527ba00765a970bc47f62735a1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::interfaceHeaderString</definition>
        <argsstring>() const</argsstring>
        <name>interfaceHeaderString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for the interface of a header. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for the interface of a header.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for the interface of a header. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2007" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1ae1cf52900b951a53e01c75a1eae72f15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setInterfaceHeaderString</definition>
        <argsstring>(const std::string &amp;interfaceHeaderString)</argsstring>
        <name>setInterfaceHeaderString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>interfaceHeaderString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for the interface of a header. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for the interface of a header.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>interfaceHeaderString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use the interface of a header. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2017" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a6249f607a6a87a80d2361b3dfb7766ab" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::implementationHeaderString</definition>
        <argsstring>() const</argsstring>
        <name>implementationHeaderString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for an implementation header. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for an implementation header.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for an implementation header. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2026" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1aa065871dc307ea6f64d8e5bd9bb0d15b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setImplementationHeaderString</definition>
        <argsstring>(const std::string &amp;implementationHeaderString)</argsstring>
        <name>setImplementationHeaderString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>implementationHeaderString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for an implementation header. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for an implementation header.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>implementationHeaderString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for an implementation header. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2036" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a2bc04e741ddc9be87d19259febd32623" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::interfaceVersionString</definition>
        <argsstring>() const</argsstring>
        <name>interfaceVersionString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for the interface of the version constant. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for the interface of the version constant.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for the interface of the version constant. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2045" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a327361f92802106f9dffd8fc403a1694" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setInterfaceVersionString</definition>
        <argsstring>(const std::string &amp;interfaceVersionString)</argsstring>
        <name>setInterfaceVersionString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>interfaceVersionString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for the interface of the version constant. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for the interface of the version constant.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>interfaceVersionString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for the interface of the version constant. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2055" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1ab31bbc07eefae01b9d3ec4416333b284" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::implementationVersionString</definition>
        <argsstring>() const</argsstring>
        <name>implementationVersionString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for the implementation of the version constant. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for the implementation of the version constant.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for the implementation of the version constant. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2066" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a1c9f5f53e2c0f2038642dc66da10bcb0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setImplementationVersionString</definition>
        <argsstring>(const std::string &amp;implementationVersionString)</argsstring>
        <name>setImplementationVersionString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>implementationVersionString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for the implementation of the version constant. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for the implementation of the version constant.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>implementationVersionString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for the implementation of the version constant. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2077" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1ae3c599b0c6d7a7ce2ff94c4938a19f36" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::interfaceLibcellmlVersionString</definition>
        <argsstring>() const</argsstring>
        <name>interfaceLibcellmlVersionString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for the interface of the libCellML version constant. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for the interface of the libCellML version constant.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for the interface of the libCellML version constant. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2089" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a539889cb0aa1ac3a1f4d69f952c4c61a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setInterfaceLibcellmlVersionString</definition>
        <argsstring>(const std::string &amp;interfaceLibcellmlVersionString)</argsstring>
        <name>setInterfaceLibcellmlVersionString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>interfaceLibcellmlVersionString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for the interface of the libCellML version constant. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for the interface of the libCellML version constant.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>interfaceLibcellmlVersionString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for the interface of the libCellML version constant. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2101" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a7ec465926f982f388998652612ba239a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::implementationLibcellmlVersionString</definition>
        <argsstring>() const</argsstring>
        <name>implementationLibcellmlVersionString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for the implementation of the libCellML version constant. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for the implementation of the libCellML version constant.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for the implementation of the libCellML version constant. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2113" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a975e6fe0c249e9d8939293eab7c6345b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setImplementationLibcellmlVersionString</definition>
        <argsstring>(const std::string &amp;implementationLibcellmlVersionString)</argsstring>
        <name>setImplementationLibcellmlVersionString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>implementationLibcellmlVersionString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for the implementation of the libCellML version constant. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for the implementation of the libCellML version constant. To be useful, the string should contain the &lt;LIBCELLML_VERSION&gt; tag, which will be replaced with the version of libCellML used.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>implementationLibcellmlVersionString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for the implementation of the libCellML version constant. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2126" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a61307f9e0a451a238586a99a38980d79" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::interfaceStateCountString</definition>
        <argsstring>() const</argsstring>
        <name>interfaceStateCountString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for the interface of the state count constant. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for the interface of the state count constant.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for the interface of the state count constant. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2136" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1af0860de374329d17b9c967ed204a6009" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setInterfaceStateCountString</definition>
        <argsstring>(const std::string &amp;interfaceStateCountString)</argsstring>
        <name>setInterfaceStateCountString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>interfaceStateCountString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for the interface of the state count constant. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for the interface of the state count constant.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>interfaceStateCountString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for the interface of the state count constant. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2147" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a1c6e97cc3de52e9fae7e2be61c27875e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::implementationStateCountString</definition>
        <argsstring>() const</argsstring>
        <name>implementationStateCountString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for the implementation of the state count constant. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for the implementation of the state count constant.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for the implementation of the state count constant. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2159" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a24a97a5a2746868bc725e0ff8e92d759" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setImplementationStateCountString</definition>
        <argsstring>(const std::string &amp;implementationStateCountString)</argsstring>
        <name>setImplementationStateCountString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>implementationStateCountString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for the implementation of the state count constant. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for the implementation of the state count constant. To be useful, the string should contain the &lt;STATE_COUNT&gt; tag, which will be replaced with the number of states in the model.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>implementationStateCountString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for the implementation of the state count constant. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2172" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a1ec1d31a03b741a633d16b41c2721168" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::interfaceVariableCountString</definition>
        <argsstring>() const</argsstring>
        <name>interfaceVariableCountString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for the interface of the variable count constant. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for the interface of the variable count constant.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for the interface of the variable count constant. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2184" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1aa656092c4e31e004fd14cee6243e00a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setInterfaceVariableCountString</definition>
        <argsstring>(const std::string &amp;interfaceVariableCountString)</argsstring>
        <name>setInterfaceVariableCountString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>interfaceVariableCountString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for the interface of the variable count constant. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for the interface of the variable count constant.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>interfaceVariableCountString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for the interface of the variable count constant. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2195" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a52304daa4fe76d3f38af5ae72e6b02fd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::implementationVariableCountString</definition>
        <argsstring>() const</argsstring>
        <name>implementationVariableCountString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for the implementation of the variable count constant. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for the implementation of the variable count constant.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for the implementation of the variable count constant. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2207" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a8636226e9c759e6f9dd49c4606c7d7f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setImplementationVariableCountString</definition>
        <argsstring>(const std::string &amp;implementationVariableCountString)</argsstring>
        <name>setImplementationVariableCountString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>implementationVariableCountString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for the implementation of the variable count constant. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for the implementation of the variable count constant. To be useful, the string should contain the &lt;VARIABLE_COUNT&gt; tag, which will be replaced with the number of states in the model.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>implementationVariableCountString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for the implementation of the variable count constant. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2220" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a6d9bf07201dcc58e7947796f1c797c02" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::variableTypeObjectString</definition>
        <argsstring>() const</argsstring>
        <name>variableTypeObjectString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for the data structure for the variable type object. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for the data structure for the variable type object.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for the data structure for the variable type object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2232" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a83d88084dd0b4909c91171606fe408bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setVariableTypeObjectString</definition>
        <argsstring>(const std::string &amp;variableTypeObjectString)</argsstring>
        <name>setVariableTypeObjectString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>variableTypeObjectString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for the data structure for the variable type object. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for the data structure for the variable type object.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>variableTypeObjectString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for the data structure for the variable type object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2244" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1af84512f855bede97a56f94139cd6ee93" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::constantVariableTypeString</definition>
        <argsstring>() const</argsstring>
        <name>constantVariableTypeString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for the name of the constant variable type. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for the name of the constant variable type.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for the name of the constant variable type. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2253" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a399c048ea4c72ed8920e2aeea15507fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setConstantVariableTypeString</definition>
        <argsstring>(const std::string &amp;constantVariableTypeString)</argsstring>
        <name>setConstantVariableTypeString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>constantVariableTypeString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for the name of the constant variable type. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for the name of the constant variable type.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>statesArrayString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for the name of the constant variable type. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2263" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1aa622a32802afb31052793a895913c134" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::computedConstantVariableTypeString</definition>
        <argsstring>() const</argsstring>
        <name>computedConstantVariableTypeString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for the name of the computed constant variable type. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for the name of the computed constant variable type.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for the name of the computed constant variable type. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2275" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a68693262226e5b1aa12c8013c9d2dda2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setComputedConstantVariableTypeString</definition>
        <argsstring>(const std::string &amp;computedConstantVariableTypeString)</argsstring>
        <name>setComputedConstantVariableTypeString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>computedConstantVariableTypeString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for the name of the computed constant variable type. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for the name of the computed constant variable type.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>statesArrayString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for the name of the computed constant variable type. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2287" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1ab66180d3e5113296c351db76ceda2d06" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::algebraicVariableTypeString</definition>
        <argsstring>() const</argsstring>
        <name>algebraicVariableTypeString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for the name of the algebraic variable type. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for the name of the algebraic variable type.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for the name of the algebraic variable type. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2297" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a185da711171ecd051a90915beb1dcbd2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setAlgebraicVariableTypeString</definition>
        <argsstring>(const std::string &amp;algebraicVariableTypeString)</argsstring>
        <name>setAlgebraicVariableTypeString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>algebraicVariableTypeString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for the name of the algebraic variable type. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for the name of the algebraic variable type.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>statesArrayString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for the name of the algebraic variable type. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2308" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a3822b22dc5143052115f992fbccec6e6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::variableInfoObjectString</definition>
        <argsstring>() const</argsstring>
        <name>variableInfoObjectString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for the data structure for the variable information object. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for the data structure for the variable information object.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for the data structure for the variable information object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2320" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a29f3d60e45e36290514945f3b76fffb7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setVariableInfoObjectString</definition>
        <argsstring>(const std::string &amp;variableInfoObjectString)</argsstring>
        <name>setVariableInfoObjectString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>variableInfoObjectString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for the data structure for the variable information object. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for the data structure for the variable information object. To be useful, the string should contain the &lt;NAME_SIZE&gt;, &lt;UNITS_SIZE&gt; and &lt;COMPONENT_SIZE&gt; tags, which will be replaced with the maximum size of a string for holding the name of a component, variable and units, respectively.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>variableInfoObjectString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for the data structure for the variable information object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2335" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a8a09ec2277d395b0f35e1ba084eea29f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::variableInfoWithTypeObjectString</definition>
        <argsstring>() const</argsstring>
        <name>variableInfoWithTypeObjectString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for the data structure for the variable information (incl. </para>
        </briefdescription>
        <detaileddescription>
<para>its type) object.</para>
<para>Return the <computeroutput>std::string</computeroutput> for the data structure for the variable information (incl. its type) object.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for the data structure for the variable information (incl. its type) object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2347" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a9a1b9a37febcaf4f964f0f638158696a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setVariableInfoWithTypeObjectString</definition>
        <argsstring>(const std::string &amp;variableInfoWithTypeObjectString)</argsstring>
        <name>setVariableInfoWithTypeObjectString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>variableInfoWithTypeObjectString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for the data structure for the variable information (incl. </para>
        </briefdescription>
        <detaileddescription>
<para>its type) object.</para>
<para>Set this <computeroutput>std::string</computeroutput> for the data structure for the variable information (incl. its type) object. To be useful, the string should contain the &lt;NAME_SIZE&gt;, &lt;UNITS_SIZE&gt; and &lt;COMPONENT_SIZE&gt; tags, which will be replaced with the maximum size of a string for holding the name of a component, variable and units, respectively.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>variableInfoWithTypeObjectString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for the data structure for the variable information (incl. its type) object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2362" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a5f7bd59c539fa5562223d4e036be50a8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::interfaceVoiInfoString</definition>
        <argsstring>() const</argsstring>
        <name>interfaceVoiInfoString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for the interface of some information about the variable of integration. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for the interface of some information about the variable of integration.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for the interface of some information about the variable of integration. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2374" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1aab8f43a92a2370a3912b203e39381af2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setInterfaceVoiInfoString</definition>
        <argsstring>(const std::string &amp;interfaceVoiInfoString)</argsstring>
        <name>setInterfaceVoiInfoString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>interfaceVoiInfoString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for the interface of some information about the variable of integration. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for the interface of some information about the variable of integration.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>interfaceVoiInfoString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for the interface of some information about the variable of integration. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2386" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a8cc048e4ab8dbeb9deb926a0816d214b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::implementationVoiInfoString</definition>
        <argsstring>() const</argsstring>
        <name>implementationVoiInfoString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for the implementation of some information about the variable of integration. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for the implementation of some information about the variable of integration.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for the implementation of some information about the variable of integration. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2398" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1afd54589ece3203f9693b6fa758f575bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setImplementationVoiInfoString</definition>
        <argsstring>(const std::string &amp;implementationVoiInfoString)</argsstring>
        <name>setImplementationVoiInfoString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>implementationVoiInfoString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for the implementation of some information about the variable of integration. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for the implementation of some information about the variable of integration. To be useful, the string should contain the <computeroutput> tag, which will be replaced with some information about the variable of integration.</computeroutput></para>
<para><computeroutput><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>implementationVoiInfoString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for the implementation of some information about the variable of integration. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</computeroutput></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2412" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1ae5b622382761160528ba5e7822c05aae" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::interfaceStateInfoString</definition>
        <argsstring>() const</argsstring>
        <name>interfaceStateInfoString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for the interface of some information about the different states. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for the interface of some information about the different states.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for the interface of some information about the different states. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2424" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a0fd797d5d790a252035e7c78a706e3c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setInterfaceStateInfoString</definition>
        <argsstring>(const std::string &amp;interfaceStateInfoString)</argsstring>
        <name>setInterfaceStateInfoString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>interfaceStateInfoString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for the interface of some information about the different states. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for the interface of some information about the different states.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>interfaceStateInfoString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for the interface of some information about the different states. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2436" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1aacf52edbdcecc9d99e52f01a1f7be7dd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::implementationStateInfoString</definition>
        <argsstring>() const</argsstring>
        <name>implementationStateInfoString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for the implementation of some information about the different states. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for the implementation of some information about the different states.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for the implementation of some information about the different states. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2448" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1acef5ce2b75b06fcd771f696509e19a11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setImplementationStateInfoString</definition>
        <argsstring>(const std::string &amp;implementationStateInfoString)</argsstring>
        <name>setImplementationStateInfoString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>implementationStateInfoString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for the implementation of some information about the different states. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for the implementation of some information about the different states. To be useful, the string should contain the <computeroutput> tag, which will be replaced with some information about the different states.</computeroutput></para>
<para><computeroutput><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>implementationStateInfoString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for the implementation of some information about the different states. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</computeroutput></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2462" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a33143717bcef7ca44d5afd9d4622fd64" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::interfaceVariableInfoString</definition>
        <argsstring>() const</argsstring>
        <name>interfaceVariableInfoString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for the interface of some information about the different variables. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for the interface of some information about the different variables.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for the interface of some information about the different variables. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2474" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a9f949abca9f7b2052b7c3c5a8b028658" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setInterfaceVariableInfoString</definition>
        <argsstring>(const std::string &amp;interfaceVariableInfoString)</argsstring>
        <name>setInterfaceVariableInfoString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>interfaceVariableInfoString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for the interface of some information about the different variables. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for the interface of some information about the different variables.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>interfaceVariableInfoString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for the interface of some information about the different variables. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2486" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a415e98acad38c16dd04a9f3c9a9b85f3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::implementationVariableInfoString</definition>
        <argsstring>() const</argsstring>
        <name>implementationVariableInfoString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for the implementation of some information about the different variables. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for the implementation of some information about the different variables.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for the implementation of some information about the different variables. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2498" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1aa1448cd54c917bd4f2919c94aff5784b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setImplementationVariableInfoString</definition>
        <argsstring>(const std::string &amp;implementationVariableInfoString)</argsstring>
        <name>setImplementationVariableInfoString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>implementationVariableInfoString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for the implementation of some information about the different variables. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for the implementation of some information about the different variables. To be useful, the string should contain the <computeroutput> tag, which will be replaced with some information about the different variables.</computeroutput></para>
<para><computeroutput><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>implementationVariableInfoString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for the implementation of some information about the different variables. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</computeroutput></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2512" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1aa453650e1a245edca6a8f441e29b84bf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::variableInfoEntryString</definition>
        <argsstring>() const</argsstring>
        <name>variableInfoEntryString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for an entry in an array for some information about a variable. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for an entry in an array for some information about a variable.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for an entry in an array for some information about a variable. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2524" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a21064e096140d65d0350f11ef6fed429" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setVariableInfoEntryString</definition>
        <argsstring>(const std::string &amp;variableInfoEntryString)</argsstring>
        <name>setVariableInfoEntryString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>variableInfoEntryString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for an entry in an array for some information about a variable. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for an entry in an array for some information about a variable. To be useful, the string should contain the &lt;COMPONENT&gt;, &lt;NAME&gt; and &lt;UNITS&gt; tags, which will be replaced with the name of the component, name and units of a variable.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>variableInfoEntryString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for an entry in an array for some information about a variable. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2538" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a9368f89311f038838be830f2b0c0b3d6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::variableInfoWithTypeEntryString</definition>
        <argsstring>() const</argsstring>
        <name>variableInfoWithTypeEntryString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for an entry in an array for some information about a variable (incl. </para>
        </briefdescription>
        <detaileddescription>
<para>its type).</para>
<para>Return the <computeroutput>std::string</computeroutput> for an entry in an array for some information about a variable (incl. its type).</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for an entry in an array for some information about a variable (incl. its type). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2550" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1affe5541dfda35e84a75204986fbed5c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setVariableInfoWithTypeEntryString</definition>
        <argsstring>(const std::string &amp;variableInfoWithTypeEntryString)</argsstring>
        <name>setVariableInfoWithTypeEntryString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>variableInfoWithTypeEntryString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for an entry in an array for some information about a variable (incl. </para>
        </briefdescription>
        <detaileddescription>
<para>its type).</para>
<para>Set this <computeroutput>std::string</computeroutput> for an entry in an array for some information about a variable (incl. its type). To be useful, the string should contain the &lt;COMPONENT&gt;, &lt;NAME&gt; and &lt;UNITS&gt; tags, which will be replaced with the name of the component, name and units of a variable.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>variableInfoWithTypeEntryString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for an entry in an array for some information about a variable (incl. its type). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2564" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a9d9cfc612053558d0093464bf8ef9b03" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::voiString</definition>
        <argsstring>() const</argsstring>
        <name>voiString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for the name of the variable of integration. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for the name of the variable of integration.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for the name of the variable of integration. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2574" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1afbb9cd9fd0bbd1f2783a361d8f5bca2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setVoiString</definition>
        <argsstring>(const std::string &amp;voiString)</argsstring>
        <name>setVoiString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>voiString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for the name of the variable of integration. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for the name of the variable of integration.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>voiString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for the name of the variable of integration. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2585" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1ac2b7aa56b9a5da966ba1c48d2d3b4240" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::statesArrayString</definition>
        <argsstring>() const</argsstring>
        <name>statesArrayString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for the name of the states array. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for the name of the states array.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for the name of the states array. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2594" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a7b8d941765dfca781c192738872c57eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setStatesArrayString</definition>
        <argsstring>(const std::string &amp;statesArrayString)</argsstring>
        <name>setStatesArrayString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>statesArrayString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for the name of the states array. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for the name of the states array.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>statesArrayString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for the name of the states array. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2604" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a8e106a9bee947e83a7186b3c58be9f49" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::ratesArrayString</definition>
        <argsstring>() const</argsstring>
        <name>ratesArrayString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for the name of the rates array. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for the name of the rates array.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for the name of the rates array. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2613" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1ac920f1d9870876d616845e248ad52c63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setRatesArrayString</definition>
        <argsstring>(const std::string &amp;ratesArrayString)</argsstring>
        <name>setRatesArrayString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>ratesArrayString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for the name of the rates array. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for the name of the rates array.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ratesArrayString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for the name of the rates array. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2623" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a958c3e6a4f4b0ba4aebc1ec57a6e597c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::variablesArrayString</definition>
        <argsstring>() const</argsstring>
        <name>variablesArrayString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for the name of the variables array. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for the name of the variables array.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for the name of the variables array. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2632" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a5bdc080343be45f5c0a3604fd3fd61ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setVariablesArrayString</definition>
        <argsstring>(const std::string &amp;variablesArrayString)</argsstring>
        <name>setVariablesArrayString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>variablesArrayString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for the name of the variables array. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for the name of the variables array.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>variablesArrayString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for the name of the variables array. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2642" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a2f23049f5dd8e5d2b67f0b1f12f3cdc9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::interfaceCreateStatesArrayMethodString</definition>
        <argsstring>() const</argsstring>
        <name>interfaceCreateStatesArrayMethodString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for the interface to create the states array. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for the interface to create the states array.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for the interface to create the states array. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2652" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1acd7c9b8ad03cdcaf11f2d6b13156132a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setInterfaceCreateStatesArrayMethodString</definition>
        <argsstring>(const std::string &amp;interfaceCreateStatesArrayMethodString)</argsstring>
        <name>setInterfaceCreateStatesArrayMethodString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>interfaceCreateStatesArrayMethodString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for the interface to create the states array. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for the interface to create the states array. To be useful, the string should contain the <computeroutput> tag, which will be replaced with some code to create the states array.</computeroutput></para>
<para><computeroutput><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>interfaceCreateStatesArrayMethodString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for the interface to create the states array. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</computeroutput></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2665" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a148c90cd9bd423d8e6dea811f090e8aa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::implementationCreateStatesArrayMethodString</definition>
        <argsstring>() const</argsstring>
        <name>implementationCreateStatesArrayMethodString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for the implementation to create the states array. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for the implementation to create the states array.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for the implementation to create the states array. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2677" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a453ad4535d5ed6914a9f21fdae49a63b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setImplementationCreateStatesArrayMethodString</definition>
        <argsstring>(const std::string &amp;implementationCreateStatesArrayMethodString)</argsstring>
        <name>setImplementationCreateStatesArrayMethodString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>implementationCreateStatesArrayMethodString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for the implementation to create the states array. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for the implementation to create the states array. To be useful, the string should contain the <computeroutput> tag, which will be replaced with some code to create the states array.</computeroutput></para>
<para><computeroutput><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>implementationCreateStatesArrayMethodString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for the implementation to create the states array. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</computeroutput></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2690" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a039fb6a7612a02218f49eaa8c716de21" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::interfaceCreateVariablesArrayMethodString</definition>
        <argsstring>() const</argsstring>
        <name>interfaceCreateVariablesArrayMethodString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for the interface to create variables array. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for the interface to create variables array.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for the interface to create variables array. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2700" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1aaa7aa358360dce238a6b6310815c7aa5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setInterfaceCreateVariablesArrayMethodString</definition>
        <argsstring>(const std::string &amp;interfaceCreateVariablesArrayMethodString)</argsstring>
        <name>setInterfaceCreateVariablesArrayMethodString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>interfaceCreateVariablesArrayMethodString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for the interface to create variables array. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for the interface to create variables array. To be useful, the string should contain the <computeroutput> tag, which will be replaced with some code to create the variables array.</computeroutput></para>
<para><computeroutput><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>interfaceCreateVariablesArrayMethodString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for the interface to create variables array. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</computeroutput></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2713" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1aadb66459ca36441a7e66c1385585be3a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::implementationCreateVariablesArrayMethodString</definition>
        <argsstring>() const</argsstring>
        <name>implementationCreateVariablesArrayMethodString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for the implementation to create the variables array. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for the implementation to create the variables array.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for the implementation to create the variables array. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2725" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1aac3824ec8f3b36453344bb6e4750a54e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setImplementationCreateVariablesArrayMethodString</definition>
        <argsstring>(const std::string &amp;implementationCreateVariablesArrayMethodString)</argsstring>
        <name>setImplementationCreateVariablesArrayMethodString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>implementationCreateVariablesArrayMethodString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for the implementation to create the variables array. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for the implementation to create the variables array. To be useful, the string should contain the <computeroutput> tag, which will be replaced with some code to create the variables array.</computeroutput></para>
<para><computeroutput><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>implementationCreateVariablesArrayMethodString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for the implementation to create the variables array. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</computeroutput></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2738" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a9480736d08d9a0386241a5b125164cb5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::interfaceDeleteArrayMethodString</definition>
        <argsstring>() const</argsstring>
        <name>interfaceDeleteArrayMethodString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for the interface to delete an array. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for the interface to delete an array.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for the interface to delete an array. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2747" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1ae31da52232747a496512c27147a97dcb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setInterfaceDeleteArrayMethodString</definition>
        <argsstring>(const std::string &amp;interfaceDeleteArrayMethodString)</argsstring>
        <name>setInterfaceDeleteArrayMethodString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>interfaceDeleteArrayMethodString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for the interface to delete an array. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for the interface to delete an array.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>interfaceDeleteArrayMethodString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for the interface to delete an array. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2757" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a6e4d864b6a6ad848bf4164b9bfa17532" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::implementationDeleteArrayMethodString</definition>
        <argsstring>() const</argsstring>
        <name>implementationDeleteArrayMethodString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for the implementation to delete an array. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for the implementation to delete an array.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for the implementation to delete an array. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2766" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1afc3abf8746467c2aa3eaa5e42a0d5744" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setImplementationDeleteArrayMethodString</definition>
        <argsstring>(const std::string &amp;implementationDeleteArrayMethodString)</argsstring>
        <name>setImplementationDeleteArrayMethodString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>implementationDeleteArrayMethodString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for the implementation to delete an array. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for the implementation to delete an array.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>implementationDeleteArrayMethodString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for the implementation to delete an array. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2776" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a13032860513af4e9d51825c6dbed9397" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::interfaceInitializeStatesAndConstantsMethodString</definition>
        <argsstring>() const</argsstring>
        <name>interfaceInitializeStatesAndConstantsMethodString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for the interface to initialise states and constants. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for the interface to initialise states and constants.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for the interface to initialise states and constants. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2788" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a34aef33c5885cd90bd9b2b4c487109e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setInterfaceInitializeStatesAndConstantsMethodString</definition>
        <argsstring>(const std::string &amp;interfaceInitializeStatesAndConstantsMethodString)</argsstring>
        <name>setInterfaceInitializeStatesAndConstantsMethodString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>interfaceInitializeStatesAndConstantsMethodString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for the interface to initialise states and constants. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for the interface to initialise states and constants.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>interfaceInitializeStatesAndConstantsMethodString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for the interface to initialise states and constants. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2801" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a73949ac935034e1b89a733b20f1abd86" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::implementationInitializeStatesAndConstantsMethodString</definition>
        <argsstring>() const</argsstring>
        <name>implementationInitializeStatesAndConstantsMethodString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for the implementation to initialise states and constants. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for the implementation to initialise states and constants.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for the implementation to initialise states and constants. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2813" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a9f94d72bba74323843e9be40c266b5cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setImplementationInitializeStatesAndConstantsMethodString</definition>
        <argsstring>(const std::string &amp;implementationInitializeStatesAndConstantsMethodString)</argsstring>
        <name>setImplementationInitializeStatesAndConstantsMethodString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>implementationInitializeStatesAndConstantsMethodString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for the implementation to initialise states and constants. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for the implementation to initialise states and constants.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>implementationInitializeStatesAndConstantsMethodString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for the implementation to initialise states and constants. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2826" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a9c3c441d29a8a78f1cce5c69072f288c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::interfaceComputeComputedConstantsMethodString</definition>
        <argsstring>() const</argsstring>
        <name>interfaceComputeComputedConstantsMethodString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for the interface to compute computed constants. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for the interface to compute computed constants.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for the interface to compute computed constants. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2838" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1ac10e03e27d5a9ca6893b165ce4fd5e48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setInterfaceComputeComputedConstantsMethodString</definition>
        <argsstring>(const std::string &amp;interfaceComputeComputedConstantsMethodString)</argsstring>
        <name>setInterfaceComputeComputedConstantsMethodString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>interfaceComputeComputedConstantsMethodString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for the interface to compute computed constants. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for the interface to compute computed constants.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>interfaceComputeComputedConstantsMethodString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for the interface to compute computed constants. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2849" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a3f3f7408afec91c5a3cb5fa7d7f654d3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::implementationComputeComputedConstantsMethodString</definition>
        <argsstring>() const</argsstring>
        <name>implementationComputeComputedConstantsMethodString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for the implementation to compute computed constants. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for the implementation to compute computed constants.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for the implementation to compute computed constants. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2861" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a8be4b9950b82a560e36f27a0d18766d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setImplementationComputeComputedConstantsMethodString</definition>
        <argsstring>(const std::string &amp;implementationComputeComputedConstantsMethodString)</argsstring>
        <name>setImplementationComputeComputedConstantsMethodString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>implementationComputeComputedConstantsMethodString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for the implementation to compute computed constants. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for the implementation to compute computed constants.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>implementationComputeComputedConstantsMethodString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for the implementation to compute computed constants. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2874" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1ac6b5dbc5b4b3deb460a42d7cbd4890a3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::interfaceComputeRatesMethodString</definition>
        <argsstring>() const</argsstring>
        <name>interfaceComputeRatesMethodString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for the interface to compute rates. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for the interface to compute rates.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for the interface to compute rates. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2883" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a96a30dbdbcbcbfe46a7d57cb4585ee3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setInterfaceComputeRatesMethodString</definition>
        <argsstring>(const std::string &amp;interfaceComputeRatesMethodString)</argsstring>
        <name>setInterfaceComputeRatesMethodString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>interfaceComputeRatesMethodString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for the interface to compute rates. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for the interface to compute rates.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>interfaceComputeRatesMethodString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for the interface to compute rates. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2893" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a821d8c166aca145f53dd76c45314ab52" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::implementationComputeRatesMethodString</definition>
        <argsstring>() const</argsstring>
        <name>implementationComputeRatesMethodString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for the implementation to compute rates. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for the implementation to compute rates.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for the implementation to compute rates. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2902" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a5cd45ef2e7b06178dc56b2e94158df7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setImplementationComputeRatesMethodString</definition>
        <argsstring>(const std::string &amp;implementationComputeRatesMethodString)</argsstring>
        <name>setImplementationComputeRatesMethodString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>implementationComputeRatesMethodString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for the implementation to compute rates. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for the implementation to compute rates.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>implementationComputeRatesMethodString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for the implementation to compute rates. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2912" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a7fecfe30b61a789369c752340d2c250b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::interfaceComputeVariablesMethodString</definition>
        <argsstring>() const</argsstring>
        <name>interfaceComputeVariablesMethodString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for the interface to compute variables. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for the interface to compute variables.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for the interface to compute variables. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2921" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a2963054e4156ff760d12a5e05a46d30a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setInterfaceComputeVariablesMethodString</definition>
        <argsstring>(const std::string &amp;interfaceComputeVariablesMethodString)</argsstring>
        <name>setInterfaceComputeVariablesMethodString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>interfaceComputeVariablesMethodString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for the interface to compute variables. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for the interface to compute variables.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>interfaceComputeVariablesMethodString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for the interface to compute variables. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2931" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a5e196aeff470cdd0f7b8fe53e9f10a58" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::implementationComputeVariablesMethodString</definition>
        <argsstring>() const</argsstring>
        <name>implementationComputeVariablesMethodString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for the implementation to compute variables. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for the implementation to compute variables.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for the implementation to compute variables. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2941" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a5f72a678c0e999836a18300b77185f3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setImplementationComputeVariablesMethodString</definition>
        <argsstring>(const std::string &amp;implementationComputeVariablesMethodString)</argsstring>
        <name>setImplementationComputeVariablesMethodString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>implementationComputeVariablesMethodString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for the implementation to compute variables. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for the implementation to compute variables.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>implementationComputeVariablesMethodString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for the implementation to compute variables. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2952" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a12c9bd0488d3bff4b00b47c0dab2c21d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::emptyMethodString</definition>
        <argsstring>() const</argsstring>
        <name>emptyMethodString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for an empty method. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for an empty method.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for an empty method. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2961" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a874b8af8e7e9e66d49521eaadc7e74c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setEmptyMethodString</definition>
        <argsstring>(const std::string &amp;emptyMethodString)</argsstring>
        <name>setEmptyMethodString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>emptyMethodString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for an empty method. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for an empty method.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>emptyMethodString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for an empty method. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2970" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1aea587dcc46395a3f74a51277e08a5a33" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::indentString</definition>
        <argsstring>() const</argsstring>
        <name>indentString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for an indent. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for an indent.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for an indent. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2979" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1ab38969ebc37a285a20964aaeff8b73d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setIndentString</definition>
        <argsstring>(const std::string &amp;indentString)</argsstring>
        <name>setIndentString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>indentString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for an indent. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for an indent.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>indentString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for an indent. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2988" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a71256c7b53bce7ce31b14d8248975bc7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::openArrayInitializerString</definition>
        <argsstring>() const</argsstring>
        <name>openArrayInitializerString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for opening an array initializer. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for opening an array initializer.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for opening an array initializer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="2997" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a88d4e7703dc87b845f568f82498779b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setOpenArrayInitializerString</definition>
        <argsstring>(const std::string &amp;openArrayInitializerString)</argsstring>
        <name>setOpenArrayInitializerString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>openArrayInitializerString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for opening an array initializer. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for opening an array initializer.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>openArrayInitializerString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for opening an array initializer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="3007" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1afde94258cc2ab052f01f5eac665a1945" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::closeArrayInitializerString</definition>
        <argsstring>() const</argsstring>
        <name>closeArrayInitializerString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for closing an array initializer. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for closing an array initializer.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for closing an array initializer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="3016" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a387d6af7c15e0b4a1054c1ebd42bf2e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setCloseArrayInitializerString</definition>
        <argsstring>(const std::string &amp;closeArrayInitializerString)</argsstring>
        <name>setCloseArrayInitializerString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>closeArrayInitializerString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for closing an array initializer. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for closing an array initializer.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>closeArrayInitializerString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for closing an array initializer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="3026" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1ae428f343fb66fd2544177463c1486262" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::openArrayString</definition>
        <argsstring>() const</argsstring>
        <name>openArrayString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for opening an array. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for opening an array.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for opening an array. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="3035" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1aa9ee9f3e4523b52382bebacc08a1b1e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setOpenArrayString</definition>
        <argsstring>(const std::string &amp;openArrayString)</argsstring>
        <name>setOpenArrayString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>openArrayString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for opening an array. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for opening an array.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>openArrayString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for opening an array. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="3044" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a81eb8b75aa83f51dc11496820733fa70" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::closeArrayString</definition>
        <argsstring>() const</argsstring>
        <name>closeArrayString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for closing an array. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for closing an array.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for closing an array. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="3053" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1afda6010cacd224c4f3320b3abe341cf4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setCloseArrayString</definition>
        <argsstring>(const std::string &amp;closeArrayString)</argsstring>
        <name>setCloseArrayString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>closeArrayString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for closing an array. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for closing an array.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>closeArrayString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for closing an array. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="3062" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1ae902fc2bbaf669d71998144f774c297b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::arrayElementSeparatorString</definition>
        <argsstring>() const</argsstring>
        <name>arrayElementSeparatorString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for separating elements in an array. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for separating elements in an array.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for separating elements in an array. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="3071" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a4ab7dcb74443e60d0b5b94e48e13f2b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setArrayElementSeparatorString</definition>
        <argsstring>(const std::string &amp;arrayElementSeparatorString)</argsstring>
        <name>setArrayElementSeparatorString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>arrayElementSeparatorString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for separating elements in an array. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for separating elements in an array.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>arrayElementSeparatorString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for separating elements in an array. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="3081" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a2e7d978ba4a7543c0fd8ddac5a97e458" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::stringDelimiterString</definition>
        <argsstring>() const</argsstring>
        <name>stringDelimiterString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for a string delimiter. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for a string delimiter.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for a string delimiter. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="3090" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a655a12b7bbcf1e31f42119c5a5d707be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setStringDelimiterString</definition>
        <argsstring>(const std::string &amp;stringDelimiterString)</argsstring>
        <name>setStringDelimiterString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>stringDelimiterString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for a string delimiter. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for a string delimiter.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stringDelimiterString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for a string delimiter. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="3100" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1ae3e02679261d858e0de3c804cd49a01c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::GeneratorProfile::commandSeparatorString</definition>
        <argsstring>() const</argsstring>
        <name>commandSeparatorString</name>
        <briefdescription>
<para>Get the <computeroutput>std::string</computeroutput> for a command separator. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>std::string</computeroutput> for a command separator.</para>
<para><simplesect kind="return"><para>The <computeroutput>std::string</computeroutput> for a command separator. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="3109" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a838c297ea7b62a3b1c4c39419e638fa0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::GeneratorProfile::setCommandSeparatorString</definition>
        <argsstring>(const std::string &amp;commandSeparatorString)</argsstring>
        <name>setCommandSeparatorString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>commandSeparatorString</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput>std::string</computeroutput> for a command separator. </para>
        </briefdescription>
        <detaileddescription>
<para>Set this <computeroutput>std::string</computeroutput> for a command separator.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>commandSeparatorString</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>std::string</computeroutput> to use for a command separator. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="3119" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1aa2f1440c5ca576ccd10999a3d8e929d7" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespacelibcellml_1aea4687d4be74e5654468ad4b60b314a7" kindref="member">GeneratorProfilePtr</ref></type>
        <definition>static GeneratorProfilePtr libcellml::GeneratorProfile::create</definition>
        <argsstring>(Profile profile=Profile::C) noexcept</argsstring>
        <name>create</name>
        <param>
          <type><ref refid="classlibcellml_1_1GeneratorProfile_1afcb812ce769f207661f0161ac17191ad" kindref="member">Profile</ref></type>
          <declname>profile</declname>
          <defval><ref refid="classlibcellml_1_1GeneratorProfile_1afcb812ce769f207661f0161ac17191ada0d61f8370cad1d412f80b84d143e1257" kindref="member">Profile::C</ref></defval>
        </param>
        <briefdescription>
<para>Create a <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> object. </para>
        </briefdescription>
        <detaileddescription>
<para>Factory method to create a <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput>. Create a generator profile with::</para>
<para>GeneratorProfilePtr generatorProfile = <ref refid="classlibcellml_1_1GeneratorProfile_1aa2f1440c5ca576ccd10999a3d8e929d7" kindref="member">libcellml::GeneratorProfile::create()</ref>;</para>
<para><simplesect kind="return"><para>A smart pointer to a <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="56" column="32"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classlibcellml_1_1GeneratorProfile_1a1f55722c17f13f0e4f6dfa39d5e68415" prot="private" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>libcellml::GeneratorProfile::GeneratorProfile</definition>
        <argsstring>(Profile profile=Profile::C)</argsstring>
        <name>GeneratorProfile</name>
        <param>
          <type><ref refid="classlibcellml_1_1GeneratorProfile_1afcb812ce769f207661f0161ac17191ad" kindref="member">Profile</ref></type>
          <declname>profile</declname>
          <defval><ref refid="classlibcellml_1_1GeneratorProfile_1afcb812ce769f207661f0161ac17191ada0d61f8370cad1d412f80b84d143e1257" kindref="member">Profile::C</ref></defval>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generatorprofile.h" line="3122" column="14"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref> class. </para>
    </briefdescription>
    <detaileddescription>
<para>The <ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref> class is for representing a CellML <ref refid="classlibcellml_1_1Generator" kindref="compound">Generator</ref> Profile. </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>libcellml::GeneratorProfile</label>
        <link refid="classlibcellml_1_1GeneratorProfile"/>
      </node>
    </collaborationgraph>
    <location file="libcellml/generatorprofile.h" line="33" column="1" bodyfile="libcellml/generatorprofile.h" bodystart="32" bodyend="3126"/>
    <listofallmembers>
      <member refid="classlibcellml_1_1GeneratorProfile_1aebf479f374e134f467b81fc6596d2715" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>absoluteValueString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a3ca6ce36aed0efbd5b681df62250e8f0" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>acoshString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a0b0ca2a7d7e3b9caebb388c71b52a2f8" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>acosString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1af0c629e13ff09859a6457fb4a051633a" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>acotFunctionString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a2025fecff908881777d55ad3cad6a83a" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>acothFunctionString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a905eed79bbcb70ee2c5a9d9f00d22a09" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>acothString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1ac480db6b9584a6b85a6741f460c39abf" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>acotString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1acfa6153871d3966b1adb32ce2a601ca3" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>acscFunctionString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a77e6ecc36fb617dd69d5e732cf90b92a" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>acschFunctionString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a32d6197d370526edf34b35e95110405d" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>acschString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a4f7c8bb0d8c52ef7705ced5aef242c5c" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>acscString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1ab66180d3e5113296c351db76ceda2d06" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>algebraicVariableTypeString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a844baaec145fe235bc27f1107fa548b5" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>andFunctionString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1afe5d36c8ce4ef7dac5549c78d268cdc4" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>andString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1ae902fc2bbaf669d71998144f774c297b" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>arrayElementSeparatorString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1af898922409076ffe0dc7a9c7ea75aed6" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>asecFunctionString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a3417ac15ad8967ec441bb27c255df10c" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>asechFunctionString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1aff1b8b5034b8bbe0ed67d30727e0102c" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>asechString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1ab7a72748da927e4296f69afc4c346488" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>asecString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a17d15adccdb7eed62032192143f276ea" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>asinhString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a90c5f4e56eac97f4aa2d0767e76e0430" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>asinString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1ae1f5bf49b450f70aff793a28c5edaf5d" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>assignmentString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1ad71e933689c49b1d3aad0da4adef1ff3" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>atanhString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1af3959bbdb473750ac8b74c16410d34a2" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>atanString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1afe683c7cdc6baf5cb885054c9e20c4f2" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>ceilingString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1afde94258cc2ab052f01f5eac665a1945" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>closeArrayInitializerString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a81eb8b75aa83f51dc11496820733fa70" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>closeArrayString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1ae3e02679261d858e0de3c804cd49a01c" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>commandSeparatorString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a630a4e71e87433f6f4805449bb31eb0f" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>commentString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a5851a0aab9162c4048e222008691c59e" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>commonLogarithmString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1aa622a32802afb31052793a895913c134" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>computedConstantVariableTypeString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a0d8ea34251a1a92c3b350f049ef4403b" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>conditionalOperatorElseString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a153c1e2e70a0a773f27ca36cb5b1241a" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>conditionalOperatorIfString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1af84512f855bede97a56f94139cd6ee93" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>constantVariableTypeString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1ab1452a1a07c07cfbac79bab6d7976bc4" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>coshString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a70ec02f7dc68115c3236de0a2650d1c4" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>cosString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1aa32202ab80c704523caf18c7d31a1374" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>cotFunctionString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a32fc4a7d1156422fdab2b1831b1c99fd" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>cothFunctionString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a5363fd8c2f906c0dec6c1184c6ca9ebb" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>cothString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1ad7a4c3751a0aa91b086aac580236c47d" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>cotString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1aa2f1440c5ca576ccd10999a3d8e929d7" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>create</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1ac5e0fb9289b130800e58ea736b069d02" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>cscFunctionString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1ae352def524e6ea095fd6384b7a87d458" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>cschFunctionString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a61dc00e2116e16549d7dc4057f12266f" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>cschString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a87fbfbb9be1e812ae6adefc3c9d217cf" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>cscString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a0dbb8e9c8de7096e4c52705322d2da12" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>divideString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a12c9bd0488d3bff4b00b47c0dab2c21d" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>emptyMethodString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a286c8a490e387eb7350861eb69b246e7" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>eqFunctionString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1abb71107ba37929b5e4de92ffb912e85f" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>eqString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a494a6f9d551416720e643f89f1c050d3" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>eString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a442293083b20ca8ba777e0d0887d3085" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>exponentialString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a5d366fee38277d814f53e8bdfdf074fa" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>falseString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a57d27120755b9973c86330524acf8c04" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>floorString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1aae3d29ccce8d4b7f52177fa35d5342d3" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>GeneratorProfile</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1ac299c996d78b15d799548310a6f89a49" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>GeneratorProfile</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a1f55722c17f13f0e4f6dfa39d5e68415" prot="private" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>GeneratorProfile</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1ad39d595440746ac92ce3c6ff4d484141" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>geqFunctionString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1aab602fd394f402ddd72de3d0dddc3cea" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>geqString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a622e055a6a82648e0a2a7fac602df0ff" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>gtFunctionString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a566f9602c60505b71348bb191f65354a" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>gtString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1ab3f6039ded5e59777c052aef20cf1226" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>hasAndOperator</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1ad5bf12f72a3051584b3415ec41f0c866" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>hasConditionalOperator</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a25064e722fbf0b3275f1c82db87b96ce" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>hasEqOperator</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1ae608e86444c287eb92b5da610e3abaf6" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>hasGeqOperator</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1adde55bb026365251671e24dfaf588843" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>hasGtOperator</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a4096cf953ca01caf9efd7b8c9d7ad95e" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>hasInterface</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a8e75084342eb33dac00c2d3c1dc51a8e" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>hasLeqOperator</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a0858382b8b77bbc43727f45504f3fd7c" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>hasLtOperator</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a79888abbbb193174c534211e86838f8b" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>hasNeqOperator</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a8628665d18dbd8a4ce321c68b0d1352c" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>hasNotOperator</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a867e428facc98eafb09898d5434d761e" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>hasOrOperator</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1ae92f04f7fc04075678332121bcf4643d" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>hasPowerOperator</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a12832c4faccd64693f109651af12cec6" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>hasXorOperator</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a3f3f7408afec91c5a3cb5fa7d7f654d3" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>implementationComputeComputedConstantsMethodString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a821d8c166aca145f53dd76c45314ab52" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>implementationComputeRatesMethodString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a5e196aeff470cdd0f7b8fe53e9f10a58" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>implementationComputeVariablesMethodString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a148c90cd9bd423d8e6dea811f090e8aa" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>implementationCreateStatesArrayMethodString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1aadb66459ca36441a7e66c1385585be3a" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>implementationCreateVariablesArrayMethodString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a6e4d864b6a6ad848bf4164b9bfa17532" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>implementationDeleteArrayMethodString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a6249f607a6a87a80d2361b3dfb7766ab" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>implementationHeaderString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a73949ac935034e1b89a733b20f1abd86" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>implementationInitializeStatesAndConstantsMethodString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a7ec465926f982f388998652612ba239a" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>implementationLibcellmlVersionString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a1c6e97cc3de52e9fae7e2be61c27875e" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>implementationStateCountString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1aacf52edbdcecc9d99e52f01a1f7be7dd" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>implementationStateInfoString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a52304daa4fe76d3f38af5ae72e6b02fd" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>implementationVariableCountString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a415e98acad38c16dd04a9f3c9a9b85f3" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>implementationVariableInfoString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1ab31bbc07eefae01b9d3ec4416333b284" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>implementationVersionString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a8cc048e4ab8dbeb9deb926a0816d214b" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>implementationVoiInfoString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1aea587dcc46395a3f74a51277e08a5a33" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>indentString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a7af24867613482b7368b1a82a99f7a53" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>infString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a9c3c441d29a8a78f1cce5c69072f288c" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>interfaceComputeComputedConstantsMethodString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1ac6b5dbc5b4b3deb460a42d7cbd4890a3" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>interfaceComputeRatesMethodString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a7fecfe30b61a789369c752340d2c250b" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>interfaceComputeVariablesMethodString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a2f23049f5dd8e5d2b67f0b1f12f3cdc9" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>interfaceCreateStatesArrayMethodString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a039fb6a7612a02218f49eaa8c716de21" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>interfaceCreateVariablesArrayMethodString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a9480736d08d9a0386241a5b125164cb5" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>interfaceDeleteArrayMethodString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a3c0920540cd0c4498f73d4a72ce63f3b" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>interfaceFileNameString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a23d462527ba00765a970bc47f62735a1" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>interfaceHeaderString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a13032860513af4e9d51825c6dbed9397" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>interfaceInitializeStatesAndConstantsMethodString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1ae3c599b0c6d7a7ce2ff94c4938a19f36" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>interfaceLibcellmlVersionString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a61307f9e0a451a238586a99a38980d79" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>interfaceStateCountString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1ae5b622382761160528ba5e7822c05aae" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>interfaceStateInfoString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a1ec1d31a03b741a633d16b41c2721168" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>interfaceVariableCountString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a33143717bcef7ca44d5afd9d4622fd64" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>interfaceVariableInfoString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a2bc04e741ddc9be87d19259febd32623" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>interfaceVersionString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a5f7bd59c539fa5562223d4e036be50a8" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>interfaceVoiInfoString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a2c8024caf7d5f3e8434ff0b2f05a1600" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>leqFunctionString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a7dbc1ac020809e01882e9ff337b41a15" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>leqString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1af09af6e97d948b4817a2a4bd29c37304" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>ltFunctionString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a6442c88bda035529148359c48f9926e6" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>ltString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a207c58051f73cc6da4e2cff8bfbd415c" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>maxFunctionString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a2eb19e9162f01a319c5a454327fed590" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>maxString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a79c494b9d3bf62b9ad7d323e8a5ecb29" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>minFunctionString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a9ec957a72331e92ac99a92bd296be033" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>minString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a852b83329f6214fdd02bc90114d8598a" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>minusString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a2a5b380ac5b9ceabee8fb724576ee2ac" prot="private" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>mPimpl</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1af8580a3a417850ce5010ec4b52df7e05" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>nanString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a3aa1fc9813ee6e2c86a7fdc8f98cd478" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>napierianLogarithmString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1ad630e661373897708e1434f7f4126e37" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>neqFunctionString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1adf9afe42b55c4753339f993dcd316a3f" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>neqString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1adc8eec4c0932f851b8474b702c8adb6e" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>notFunctionString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a023df2a77ecbb48bce7188df84d26220" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>notString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a71256c7b53bce7ce31b14d8248975bc7" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>openArrayInitializerString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1ae428f343fb66fd2544177463c1486262" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>openArrayString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a64dfb33c2bce0170d49d382810cf1f8f" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>operator=</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1ad3c9d22848acd18146570c5c52aec5ee" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>orFunctionString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1ab5ac565a77301b527d9329f5aa6861ab" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>originCommentString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a275fc8f3f490cea159bc9744440bcd82" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>orString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1aaf5c7537bb396c5678f1311078011588" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>piecewiseElseString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a08500b17d75dfc99548c2f1e03c81a4b" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>piecewiseIfString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a018d91ce5f07cc873eb859c108f1cc84" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>piString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a9be5d39d7ffa94b883e340c07e38e44a" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>plusString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1ac6bdb50ef33f18776b230eca7f216090" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>powerString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1afcb812ce769f207661f0161ac17191ad" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>Profile</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1ad6c8b610ceb5629306547ee7aee6edf7" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>profile</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a8e106a9bee947e83a7186b3c58be9f49" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>ratesArrayString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1af2394023953dfaadfff68f1c2508cd93" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>remString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a209856e3fd24402d373a8a63bfc2847d" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>secFunctionString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a18c578762dcd3956d7117ec0d1834c6f" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>sechFunctionString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a57cfdde55fd4f39ec1750e4248f57c32" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>sechString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a19387bd65c61f132b188cd52b66ab47c" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>secString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a79721f9a22fed620e619c2d21ce7c77c" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setAbsoluteValueString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a205563de02dea4204e8f1e6708c9edd4" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setAcoshString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a93415193f92538041419d7389c27137a" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setAcosString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1aace4964e0081f546fcdc2a31f6a072b6" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setAcotFunctionString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1ab67ab0be655f9de0642556ec9cde3df2" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setAcothFunctionString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1aa5e414555aa3a828bde3f1baaa126237" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setAcothString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a5d58ccd4f5899f9d62c961ac086bc7a3" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setAcotString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a2d1406b1519f82fc44862673392b7fcd" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setAcscFunctionString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a50a678ff81e31d6a59fadb9e2f8aa77d" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setAcschFunctionString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1aa35094f5286bf5244e65edb83a4332e6" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setAcschString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a4cd662509f7a7ffa9b67fe52cfc5e994" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setAcscString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a185da711171ecd051a90915beb1dcbd2" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setAlgebraicVariableTypeString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1aff1c76b5d0f1a98deda075b7214949a7" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setAndFunctionString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1aee793cd0fdb55faba7c00e77855965d2" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setAndString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a4ab7dcb74443e60d0b5b94e48e13f2b1" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setArrayElementSeparatorString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1adb94a7057eedcdfd2992909ec1820138" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setAsecFunctionString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1adc80f53e382c5b5e3771d4cf903b1212" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setAsechFunctionString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1ac2147452e3cf51e7574a86206ba286c9" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setAsechString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a0f1f42fdf45d24f0b1ecaaa19e4d2b6f" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setAsecString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1ab0d39b098080bd85b928436d64e437c9" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setAsinhString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a3757c8c85d4aff6c97bf6e65a54fdb94" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setAsinString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a65991d1b4dad0c7c0d3f8a0d8358463b" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setAssignmentString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a396dee90f09b6f6a5e7005439b2996f5" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setAtanhString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a02f1e8905cf9f16f44404c39627593d6" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setAtanString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a0c24f1165b3b77b3fe162e1e2aca3645" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setCeilingString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a387d6af7c15e0b4a1054c1ebd42bf2e4" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setCloseArrayInitializerString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1afda6010cacd224c4f3320b3abe341cf4" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setCloseArrayString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a838c297ea7b62a3b1c4c39419e638fa0" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setCommandSeparatorString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a4e43d5043a958d695d9ef7927cef572c" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setCommentString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1ac0d2c65a4c278204d2e8dcff1ef8352f" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setCommonLogarithmString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a68693262226e5b1aa12c8013c9d2dda2" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setComputedConstantVariableTypeString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a967d588d41e0125ac793c9488088d3ca" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setConditionalOperatorElseString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a9b6d39de926990fa31f8eb51b6cd88a4" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setConditionalOperatorIfString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a399c048ea4c72ed8920e2aeea15507fa" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setConstantVariableTypeString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a75de423ee3f9b1ec62343fbc714bac8c" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setCoshString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a9fc6878159698314c09fe8a521470fd9" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setCosString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a07fada62b528092bf2ee5d91a38738d8" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setCotFunctionString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a105c963cd373f24ad5ab19a893a642ed" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setCothFunctionString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a4c28ba1a0408d3e37e34236ad4ed1107" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setCothString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1ada9c773b4d5f20c5a2956c99bf354bdd" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setCotString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a8a3476a0c4c05148482553802cd03dc2" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setCscFunctionString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1ac1ffd465088aaaba3602a84c27e155ab" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setCschFunctionString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a0f5c722febbd343e7fae478361ef34ed" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setCschString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a748d447a86aa17213de2cce856698cc4" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setCscString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1ac223e368d1f6a67039f218c0ce344993" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setDivideString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a874b8af8e7e9e66d49521eaadc7e74c3" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setEmptyMethodString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a50901434cd417f2c2aa2d6f52eed0f3a" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setEqFunctionString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a050eea9d5fea7c14487baeee55caf9a1" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setEqString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1aa1e8b548479de6ae82ce9fa73dd37f76" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setEString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1afcee0d4b891a17ac1a22528194f505c7" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setExponentialString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a2f43add1bbbd47d8582c5af7f7864356" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setFalseString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a499ff35980e51958d35e7743525846d1" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setFloorString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a1a78dd5f96c9b28d8bc6546508371f78" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setGeqFunctionString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a050ffcd91350dafd5dc7c0247587fbd1" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setGeqString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1ab660fadad25f69dd9fb7e1a519a18924" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setGtFunctionString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a18fbc8a136120677b39f544b188f1f08" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setGtString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1aa5d06c6072d41220e11dfb7c363675c0" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setHasAndOperator</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a6694c27b27adda47834168820b4ce8d8" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setHasConditionalOperator</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a6ab998854fc4085dc5c2bec625ab1c4c" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setHasEqOperator</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1adab33d68e12f26924bb5d3d6bfb083a3" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setHasGeqOperator</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a35cecf1dc4364951ddc0fb51e0b2858e" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setHasGtOperator</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a3601bc78c3be19d9d8795ab85d468291" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setHasInterface</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1af6b5e9acba2d16b6ff1a361f8c77bdc4" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setHasLeqOperator</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a3c9fd674c7e44ff085f70c377b8c5bb1" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setHasLtOperator</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a29dbfbb34d1035aeb1b21451d21bc72a" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setHasNeqOperator</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a47e605ad75a5b9c4d41340e720751c6f" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setHasNotOperator</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1af145529b62f3c132eb3e2077d3505442" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setHasOrOperator</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a6187a0560e22386a10debb6d001ee87b" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setHasPowerOperator</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1ac179e5b94cc02dac39b5b4cb2a78f624" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setHasXorOperator</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a8be4b9950b82a560e36f27a0d18766d0" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setImplementationComputeComputedConstantsMethodString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a5cd45ef2e7b06178dc56b2e94158df7f" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setImplementationComputeRatesMethodString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a5f72a678c0e999836a18300b77185f3f" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setImplementationComputeVariablesMethodString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a453ad4535d5ed6914a9f21fdae49a63b" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setImplementationCreateStatesArrayMethodString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1aac3824ec8f3b36453344bb6e4750a54e" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setImplementationCreateVariablesArrayMethodString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1afc3abf8746467c2aa3eaa5e42a0d5744" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setImplementationDeleteArrayMethodString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1aa065871dc307ea6f64d8e5bd9bb0d15b" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setImplementationHeaderString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a9f94d72bba74323843e9be40c266b5cb" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setImplementationInitializeStatesAndConstantsMethodString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a975e6fe0c249e9d8939293eab7c6345b" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setImplementationLibcellmlVersionString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a24a97a5a2746868bc725e0ff8e92d759" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setImplementationStateCountString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1acef5ce2b75b06fcd771f696509e19a11" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setImplementationStateInfoString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a8636226e9c759e6f9dd49c4606c7d7f5" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setImplementationVariableCountString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1aa1448cd54c917bd4f2919c94aff5784b" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setImplementationVariableInfoString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a1c9f5f53e2c0f2038642dc66da10bcb0" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setImplementationVersionString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1afd54589ece3203f9693b6fa758f575bd" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setImplementationVoiInfoString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1ab38969ebc37a285a20964aaeff8b73d6" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setIndentString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1aac50ab438fbc191b64a99304a05fee41" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setInfString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1ac10e03e27d5a9ca6893b165ce4fd5e48" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setInterfaceComputeComputedConstantsMethodString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a96a30dbdbcbcbfe46a7d57cb4585ee3c" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setInterfaceComputeRatesMethodString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a2963054e4156ff760d12a5e05a46d30a" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setInterfaceComputeVariablesMethodString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1acd7c9b8ad03cdcaf11f2d6b13156132a" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setInterfaceCreateStatesArrayMethodString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1aaa7aa358360dce238a6b6310815c7aa5" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setInterfaceCreateVariablesArrayMethodString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1ae31da52232747a496512c27147a97dcb" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setInterfaceDeleteArrayMethodString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1abb01c7e9b51a3f6d4c6b933f65633fbe" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setInterfaceFileNameString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1ae1cf52900b951a53e01c75a1eae72f15" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setInterfaceHeaderString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a34aef33c5885cd90bd9b2b4c487109e3" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setInterfaceInitializeStatesAndConstantsMethodString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a539889cb0aa1ac3a1f4d69f952c4c61a" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setInterfaceLibcellmlVersionString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1af0860de374329d17b9c967ed204a6009" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setInterfaceStateCountString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a0fd797d5d790a252035e7c78a706e3c4" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setInterfaceStateInfoString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1aa656092c4e31e004fd14cee6243e00a6" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setInterfaceVariableCountString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a9f949abca9f7b2052b7c3c5a8b028658" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setInterfaceVariableInfoString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a327361f92802106f9dffd8fc403a1694" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setInterfaceVersionString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1aab8f43a92a2370a3912b203e39381af2" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setInterfaceVoiInfoString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a1db0549060cc751747e1d7075a3eeb2c" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setLeqFunctionString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a692fd19beccb47a26608b25ea50f334b" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setLeqString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1aa2c37c33dd00a9d2c9402164163a60a3" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setLtFunctionString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a10ea51abe489081a6339238b9f23e68d" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setLtString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1adeba2120f228194842e1cfbd1206b2dd" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setMaxFunctionString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1ab52380844b7a04f04a3610e1fea6f1e8" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setMaxString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a8106cd869a68c61453ab93fdfc48b3c3" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setMinFunctionString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a1cc2cd5c97cc307f5339427d5880e851" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setMinString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a02745cb0f003a546777722b359ddec9c" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setMinusString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a2c1a373ba7056504e5b48cd828b820b6" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setNanString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a0dc591dc177b9a1459ada9895cb6b707" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setNapierianLogarithmString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1abff74352750809606a6a4628b28ae1af" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setNeqFunctionString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a9339d5f05ecf1adc46addc1439f1e854" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setNeqString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1abfdacb7a75a006998d06e5a94720782e" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setNotFunctionString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1ae4cea0b3899d76139874594c2c69df28" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setNotString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a88d4e7703dc87b845f568f82498779b3" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setOpenArrayInitializerString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1aa9ee9f3e4523b52382bebacc08a1b1e2" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setOpenArrayString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a84e64fa85a0444dcc20ea1a051f2eb51" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setOrFunctionString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1aedcb0935bd82a382c7dadf52a212fde5" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setOriginCommentString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a6ce5411b31f398bf92722bc8f6f37fda" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setOrString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a37334da678f6f87374a3e8b80bcbde8a" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setPiecewiseElseString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1aa6806c3a60224f3b7196bd71d3f3aa28" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setPiecewiseIfString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1ab953ceeabea60f92231217cce134a371" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setPiString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a9188dd4fc12033a9a88f4765eecac44e" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setPlusString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a835e263f8e6216a2727442f106c0c2aa" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setPowerString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a963d8030213db5be4c5a9dbc259984fa" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setProfile</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1ac920f1d9870876d616845e248ad52c63" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setRatesArrayString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a68cac6fa0aefa7f7ad6d17ed6bcec54d" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setRemString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a9cb0be9363672c10f33f7d1123f36c4b" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setSecFunctionString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a6112e5081d7e5381791ea074c889848a" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setSechFunctionString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1af5cffd49f9edac1b4f14b3c2bb636050" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setSechString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a1852abcbcf118172d444e369b12aa333" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setSecString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1ae3e54b67e46f44141a619053b2364c0d" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setSinhString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a7796a239686ba58fd323a59efcf04590" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setSinString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1aca3e96e22a2fe59fca773ea4ac65c19c" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setSquareRootString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a79f5e8c3760d2c0c24449098ad971d78" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setSquareString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a7b8d941765dfca781c192738872c57eb" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setStatesArrayString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a655a12b7bbcf1e31f42119c5a5d707be" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setStringDelimiterString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a0ea5a65219d7e54cb6d98f99389075d4" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setTanhString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a3f625e3027fd1174d99f3a336df98521" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setTanString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a568a95f993bb9f58c3ff4b78a4dd94af" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setTimesString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a19f259133f28b3f10cb6e375136c4150" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setTrueString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a21064e096140d65d0350f11ef6fed429" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setVariableInfoEntryString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a29f3d60e45e36290514945f3b76fffb7" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setVariableInfoObjectString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1affe5541dfda35e84a75204986fbed5c7" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setVariableInfoWithTypeEntryString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a9a1b9a37febcaf4f964f0f638158696a" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setVariableInfoWithTypeObjectString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a5bdc080343be45f5c0a3604fd3fd61ee" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setVariablesArrayString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a83d88084dd0b4909c91171606fe408bc" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setVariableTypeObjectString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1afbb9cd9fd0bbd1f2783a361d8f5bca2a" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setVoiString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a6d7850aef15d708fa07b1cfca0fd8c4c" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setXorFunctionString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a1905e28c9ce2eeb2b94bb2d3f08750be" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>setXorString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a92abe687646d5be807c14ed433c0e35c" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>sinhString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a8316882c4a3eb8a36384b5ed78b7afd5" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>sinString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a54a65d83c85ddc272f7cd55229d04bea" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>squareRootString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1af00c11cff62a5b16260c3f7a7ca7a989" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>squareString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1ac2b7aa56b9a5da966ba1c48d2d3b4240" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>statesArrayString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a2e7d978ba4a7543c0fd8ddac5a97e458" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>stringDelimiterString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a40df56331e027dac26369021974f40ed" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>tanhString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a5661c1d0a82edf048cacf35bc45598e3" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>tanString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1af21d4fe22ecd383fac901211e017009c" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>timesString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1abf82bc66180931f0feef4f136c3cd4f3" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>trueString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1aa453650e1a245edca6a8f441e29b84bf" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>variableInfoEntryString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a3822b22dc5143052115f992fbccec6e6" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>variableInfoObjectString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a9368f89311f038838be830f2b0c0b3d6" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>variableInfoWithTypeEntryString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a8a09ec2277d395b0f35e1ba084eea29f" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>variableInfoWithTypeObjectString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a958c3e6a4f4b0ba4aebc1ec57a6e597c" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>variablesArrayString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a6d9bf07201dcc58e7947796f1c797c02" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>variableTypeObjectString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a9d9cfc612053558d0093464bf8ef9b03" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>voiString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a3192ebf0ec00a09fdf16a15516cd354d" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>xorFunctionString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a7cdd01761928ea8565d2d730b7b90bea" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>xorString</name></member>
      <member refid="classlibcellml_1_1GeneratorProfile_1a2390e84871f15d9510512aefc8b0d3c8" prot="public" virt="non-virtual"><scope>libcellml::GeneratorProfile</scope><name>~GeneratorProfile</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
