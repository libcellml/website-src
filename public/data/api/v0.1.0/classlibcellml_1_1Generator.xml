<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classlibcellml_1_1Generator" kind="class" language="C++" prot="public">
    <compoundname>libcellml::Generator</compoundname>
    <basecompoundref refid="classlibcellml_1_1Logger" prot="public" virt="non-virtual">libcellml::Logger</basecompoundref>
    <includes refid="generator_8h" local="no">generator.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classlibcellml_1_1Generator_1ae4fbcc2d6b36325ab29e22dc5b8d195f" prot="public" static="no" strong="yes">
        <type></type>
        <name>ModelType</name>
        <enumvalue id="classlibcellml_1_1Generator_1ae4fbcc2d6b36325ab29e22dc5b8d195fa696b031073e74bf2cb98e5ef201d4aa3" prot="public">
          <name>UNKNOWN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classlibcellml_1_1Generator_1ae4fbcc2d6b36325ab29e22dc5b8d195fa5c5e440cc3d6aed1fada5b21a045e2fe" prot="public">
          <name>ALGEBRAIC</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classlibcellml_1_1Generator_1ae4fbcc2d6b36325ab29e22dc5b8d195fa96f459e16830e7d7620bdbd8cfe660b7" prot="public">
          <name>ODE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classlibcellml_1_1Generator_1ae4fbcc2d6b36325ab29e22dc5b8d195faccc0377a8afbf50e7094f5c23a8af223" prot="public">
          <name>INVALID</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classlibcellml_1_1Generator_1ae4fbcc2d6b36325ab29e22dc5b8d195fa63078ad1ad4f2e1007b7b8f451cf63ae" prot="public">
          <name>UNDERCONSTRAINED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classlibcellml_1_1Generator_1ae4fbcc2d6b36325ab29e22dc5b8d195fa4a202316ca5ddd9ae46ec336f2cf5101" prot="public">
          <name>OVERCONSTRAINED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classlibcellml_1_1Generator_1ae4fbcc2d6b36325ab29e22dc5b8d195faccd505c354dd1f201ca471b888d24604" prot="public">
          <name>UNSUITABLY_CONSTRAINED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generator.h" line="113" column="1" bodyfile="libcellml/generator.h" bodystart="112" bodyend="121"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classlibcellml_1_1Generator_1ae40c6ae93e548d8ec6eaf1ff52e4e69d" prot="private" static="no" mutable="no">
        <type>GeneratorImpl *</type>
        <definition>GeneratorImpl* libcellml::Generator::mPimpl</definition>
        <argsstring></argsstring>
        <name>mPimpl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generator.h" line="250" column="19" bodyfile="libcellml/generator.h" bodystart="249" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classlibcellml_1_1Generator_1ab6d38da531f934d0b524f065a24f3de2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>libcellml::Generator::~Generator</definition>
        <argsstring>() override</argsstring>
        <name>~Generator</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generator.h" line="123" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1Generator_1a598a8d10840214db710e6e311f982826" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>libcellml::Generator::Generator</definition>
        <argsstring>(const Generator &amp;rhs)=delete</argsstring>
        <name>Generator</name>
        <param>
          <type>const <ref refid="classlibcellml_1_1Generator" kindref="compound">Generator</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generator.h" line="124" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1Generator_1a7919358aaa9d759de702abf99fd10060" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>libcellml::Generator::Generator</definition>
        <argsstring>(Generator &amp;&amp;rhs) noexcept=delete</argsstring>
        <name>Generator</name>
        <param>
          <type><ref refid="classlibcellml_1_1Generator" kindref="compound">Generator</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Move constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generator.h" line="125" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1Generator_1a1a61a0ccfa9e61794338bc4d8b6d9f1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classlibcellml_1_1Generator" kindref="compound">Generator</ref> &amp;</type>
        <definition>Generator&amp; libcellml::Generator::operator=</definition>
        <argsstring>(Generator rhs)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classlibcellml_1_1Generator" kindref="compound">Generator</ref></type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Assignment operator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generator.h" line="126" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1Generator_1a907743663e29034e6823c56931c65791" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacelibcellml_1aea4687d4be74e5654468ad4b60b314a7" kindref="member">GeneratorProfilePtr</ref></type>
        <definition>GeneratorProfilePtr libcellml::Generator::profile</definition>
        <argsstring>()</argsstring>
        <name>profile</name>
        <briefdescription>
<para>Get the <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>Get the <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> used by this <computeroutput><ref refid="classlibcellml_1_1Generator" kindref="compound">Generator</ref></computeroutput>.</para>
<para><simplesect kind="return"><para>The <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> used. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generator.h" line="147" column="25"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1Generator_1a0792ec568bca3d08f604fcc4b6a8f5f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::Generator::setProfile</definition>
        <argsstring>(const GeneratorProfilePtr &amp;profile)</argsstring>
        <name>setProfile</name>
        <param>
          <type>const <ref refid="namespacelibcellml_1aea4687d4be74e5654468ad4b60b314a7" kindref="member">GeneratorProfilePtr</ref> &amp;</type>
          <declname>profile</declname>
        </param>
        <briefdescription>
<para>Set the <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>Set the <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> to be used by this <computeroutput><ref refid="classlibcellml_1_1Generator" kindref="compound">Generator</ref></computeroutput>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>profile</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput> to set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generator.h" line="156" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1Generator_1a6cc45021a23b15284e8bd820b43bc756" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void libcellml::Generator::processModel</definition>
        <argsstring>(const ModelPtr &amp;model)</argsstring>
        <name>processModel</name>
        <param>
          <type>const <ref refid="namespacelibcellml_1a8964f62e8f622cfd511f6a3acd9ce628" kindref="member">ModelPtr</ref> &amp;</type>
          <declname>model</declname>
        </param>
        <briefdescription>
<para>Process the <computeroutput><ref refid="classlibcellml_1_1Model" kindref="compound">Model</ref></computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>Process the <computeroutput><ref refid="classlibcellml_1_1Model" kindref="compound">Model</ref></computeroutput> using this <computeroutput><ref refid="classlibcellml_1_1Generator" kindref="compound">Generator</ref></computeroutput>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>model</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput><ref refid="classlibcellml_1_1Model" kindref="compound">Model</ref></computeroutput> to process. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generator.h" line="165" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1Generator_1ad6ad271e39549532727eb74d3449388b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classlibcellml_1_1Generator_1ae4fbcc2d6b36325ab29e22dc5b8d195f" kindref="member">ModelType</ref></type>
        <definition>ModelType libcellml::Generator::modelType</definition>
        <argsstring>() const</argsstring>
        <name>modelType</name>
        <briefdescription>
<para>Get the <computeroutput>ModelType</computeroutput> of the <computeroutput><ref refid="classlibcellml_1_1Model" kindref="compound">Model</ref></computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput>ModelType</computeroutput> of the <computeroutput><ref refid="classlibcellml_1_1Model" kindref="compound">Model</ref></computeroutput> processed by this <computeroutput><ref refid="classlibcellml_1_1Generator" kindref="compound">Generator</ref></computeroutput>.</para>
<para><simplesect kind="return"><para>The <computeroutput>ModelType</computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generator.h" line="174" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1Generator_1a45922996b839172cbc0d603d5cac4f06" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t libcellml::Generator::stateCount</definition>
        <argsstring>() const</argsstring>
        <name>stateCount</name>
        <briefdescription>
<para>Get the number of states in the <computeroutput><ref refid="classlibcellml_1_1Model" kindref="compound">Model</ref></computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the number of states in the <computeroutput><ref refid="classlibcellml_1_1Model" kindref="compound">Model</ref></computeroutput> processed by this <computeroutput><ref refid="classlibcellml_1_1Generator" kindref="compound">Generator</ref></computeroutput>.</para>
<para><simplesect kind="return"><para>The number of states. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generator.h" line="184" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1Generator_1a692d843ef49b85bf774ff5d2f7e71458" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t libcellml::Generator::variableCount</definition>
        <argsstring>() const</argsstring>
        <name>variableCount</name>
        <briefdescription>
<para>Get the number of variables in the <computeroutput><ref refid="classlibcellml_1_1Model" kindref="compound">Model</ref></computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the number of variables in the <computeroutput><ref refid="classlibcellml_1_1Model" kindref="compound">Model</ref></computeroutput> processed by this <computeroutput><ref refid="classlibcellml_1_1Generator" kindref="compound">Generator</ref></computeroutput>.</para>
<para><simplesect kind="return"><para>The number of variables. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generator.h" line="194" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1Generator_1aa1c745aaee085451ff110e1a8c1c9b60" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacelibcellml_1a2e4e999390e5db069922d3cbc69987f7" kindref="member">GeneratorVariablePtr</ref></type>
        <definition>GeneratorVariablePtr libcellml::Generator::voi</definition>
        <argsstring>() const</argsstring>
        <name>voi</name>
        <briefdescription>
<para>Get the variable of integration of the <computeroutput><ref refid="classlibcellml_1_1Model" kindref="compound">Model</ref></computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the <computeroutput><ref refid="classlibcellml_1_1Variable" kindref="compound">Variable</ref></computeroutput> of integration of the <computeroutput><ref refid="classlibcellml_1_1Model" kindref="compound">Model</ref></computeroutput> processed by this <computeroutput><ref refid="classlibcellml_1_1Generator" kindref="compound">Generator</ref></computeroutput>.</para>
<para><simplesect kind="return"><para>The <computeroutput>Type</computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generator.h" line="204" column="26"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1Generator_1a4328a6fa5ce7d02671c4df688a126e6b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacelibcellml_1a2e4e999390e5db069922d3cbc69987f7" kindref="member">GeneratorVariablePtr</ref></type>
        <definition>GeneratorVariablePtr libcellml::Generator::state</definition>
        <argsstring>(size_t index) const</argsstring>
        <name>state</name>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Get the state at <computeroutput>index</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the state at the index <computeroutput>index</computeroutput> for the <computeroutput><ref refid="classlibcellml_1_1Model" kindref="compound">Model</ref></computeroutput> processed by this <computeroutput><ref refid="classlibcellml_1_1Generator" kindref="compound">Generator</ref></computeroutput>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the state to return. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generator.h" line="214" column="26"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1Generator_1a4955b147a96fdcc6bed4ac98c9c349a9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacelibcellml_1a2e4e999390e5db069922d3cbc69987f7" kindref="member">GeneratorVariablePtr</ref></type>
        <definition>GeneratorVariablePtr libcellml::Generator::variable</definition>
        <argsstring>(size_t index) const</argsstring>
        <name>variable</name>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Get the variable at <computeroutput>index</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the variable at the index <computeroutput>index</computeroutput> for the <computeroutput><ref refid="classlibcellml_1_1Model" kindref="compound">Model</ref></computeroutput> processed by this <computeroutput><ref refid="classlibcellml_1_1Generator" kindref="compound">Generator</ref></computeroutput>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the variable to return. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generator.h" line="224" column="26"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1Generator_1ab15be5ed10487796ec567a797a8ecc4c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::Generator::interfaceCode</definition>
        <argsstring>() const</argsstring>
        <name>interfaceCode</name>
        <briefdescription>
<para>Get the interface code for the <computeroutput><ref refid="classlibcellml_1_1Model" kindref="compound">Model</ref></computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the interface code for the <computeroutput><ref refid="classlibcellml_1_1Model" kindref="compound">Model</ref></computeroutput> processed by this <computeroutput><ref refid="classlibcellml_1_1Generator" kindref="compound">Generator</ref></computeroutput>, using its <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput>.</para>
<para><simplesect kind="return"><para>The code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generator.h" line="234" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classlibcellml_1_1Generator_1a7a85ae4c9d64e7aa0d8137c98c74e25e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string libcellml::Generator::implementationCode</definition>
        <argsstring>() const</argsstring>
        <name>implementationCode</name>
        <briefdescription>
<para>Get the implementation code for the <computeroutput><ref refid="classlibcellml_1_1Model" kindref="compound">Model</ref></computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the implementation code for the <computeroutput><ref refid="classlibcellml_1_1Model" kindref="compound">Model</ref></computeroutput> processed by this <computeroutput><ref refid="classlibcellml_1_1Generator" kindref="compound">Generator</ref></computeroutput>, using its <computeroutput><ref refid="classlibcellml_1_1GeneratorProfile" kindref="compound">GeneratorProfile</ref></computeroutput>.</para>
<para><simplesect kind="return"><para>The code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generator.h" line="244" column="17"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classlibcellml_1_1Generator_1afff1cff58e786791bf3a002f52c4edeb" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespacelibcellml_1a0f78fdeb24d2bd8779351c5d02c050e2" kindref="member">GeneratorPtr</ref></type>
        <definition>static GeneratorPtr libcellml::Generator::create</definition>
        <argsstring>() noexcept</argsstring>
        <name>create</name>
        <briefdescription>
<para>Create a <computeroutput><ref refid="classlibcellml_1_1Generator" kindref="compound">Generator</ref></computeroutput> object. </para>
        </briefdescription>
        <detaileddescription>
<para>Factory method to create a <computeroutput><ref refid="classlibcellml_1_1Generator" kindref="compound">Generator</ref></computeroutput>. Create a generator with::</para>
<para>GeneratorPtr generator = <ref refid="classlibcellml_1_1Generator_1afff1cff58e786791bf3a002f52c4edeb" kindref="member">libcellml::Generator::create()</ref>;</para>
<para><simplesect kind="return"><para>A smart pointer to a <computeroutput><ref refid="classlibcellml_1_1Generator" kindref="compound">Generator</ref></computeroutput> object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generator.h" line="138" column="25"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classlibcellml_1_1Generator_1a053b66c39349bf6767e8c7524e9cd8c2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>libcellml::Generator::Generator</definition>
        <argsstring>()</argsstring>
        <name>Generator</name>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libcellml/generator.h" line="247" column="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classlibcellml_1_1Generator" kindref="compound">Generator</ref> class. </para>
    </briefdescription>
    <detaileddescription>
<para>The <ref refid="classlibcellml_1_1Generator" kindref="compound">Generator</ref> class is for representing a CellML <ref refid="classlibcellml_1_1Generator" kindref="compound">Generator</ref>. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>libcellml::Logger</label>
        <link refid="classlibcellml_1_1Logger"/>
      </node>
      <node id="1">
        <label>libcellml::Generator</label>
        <link refid="classlibcellml_1_1Generator"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>libcellml::Logger</label>
        <link refid="classlibcellml_1_1Logger"/>
      </node>
      <node id="1">
        <label>libcellml::Generator</label>
        <link refid="classlibcellml_1_1Generator"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="libcellml/generator.h" line="110" column="1" bodyfile="libcellml/generator.h" bodystart="109" bodyend="251"/>
    <listofallmembers>
      <member refid="classlibcellml_1_1Logger_1afb047604e88a6044b27d7f6933744565" prot="public" virt="non-virtual"><scope>libcellml::Generator</scope><name>addIssue</name></member>
      <member refid="classlibcellml_1_1Generator_1afff1cff58e786791bf3a002f52c4edeb" prot="public" virt="non-virtual"><scope>libcellml::Generator</scope><name>create</name></member>
      <member refid="classlibcellml_1_1Logger_1a5a260a645de3be9ffb844ce3f7584c4f" prot="public" virt="non-virtual"><scope>libcellml::Generator</scope><name>error</name></member>
      <member refid="classlibcellml_1_1Logger_1a6bb9f053eb4f1b743167b84bbf5e9b34" prot="public" virt="non-virtual"><scope>libcellml::Generator</scope><name>errorCount</name></member>
      <member refid="classlibcellml_1_1Generator_1a598a8d10840214db710e6e311f982826" prot="public" virt="non-virtual"><scope>libcellml::Generator</scope><name>Generator</name></member>
      <member refid="classlibcellml_1_1Generator_1a7919358aaa9d759de702abf99fd10060" prot="public" virt="non-virtual"><scope>libcellml::Generator</scope><name>Generator</name></member>
      <member refid="classlibcellml_1_1Generator_1a053b66c39349bf6767e8c7524e9cd8c2" prot="private" virt="non-virtual"><scope>libcellml::Generator</scope><name>Generator</name></member>
      <member refid="classlibcellml_1_1Logger_1a278d9d1a65c4b56e26f3d490e4cffe6c" prot="public" virt="non-virtual"><scope>libcellml::Generator</scope><name>hint</name></member>
      <member refid="classlibcellml_1_1Logger_1ae28a1b7b4fc758c71ddf1ddd0a9aceb6" prot="public" virt="non-virtual"><scope>libcellml::Generator</scope><name>hintCount</name></member>
      <member refid="classlibcellml_1_1Generator_1a7a85ae4c9d64e7aa0d8137c98c74e25e" prot="public" virt="non-virtual"><scope>libcellml::Generator</scope><name>implementationCode</name></member>
      <member refid="classlibcellml_1_1Generator_1ab15be5ed10487796ec567a797a8ecc4c" prot="public" virt="non-virtual"><scope>libcellml::Generator</scope><name>interfaceCode</name></member>
      <member refid="classlibcellml_1_1Logger_1a192650ae59ea8747feb6c4f09de6a389" prot="public" virt="non-virtual"><scope>libcellml::Generator</scope><name>issue</name></member>
      <member refid="classlibcellml_1_1Logger_1a3c078e9502a10748ade938374faef6d9" prot="public" virt="non-virtual"><scope>libcellml::Generator</scope><name>issueCount</name></member>
      <member refid="classlibcellml_1_1Logger_1aefeba7b186698f30222c7e4bfdc55a94" prot="public" virt="non-virtual"><scope>libcellml::Generator</scope><name>Logger</name></member>
      <member refid="classlibcellml_1_1Logger_1a3795ed3f2bbc99ab6ffdd2620cb49e87" prot="public" virt="non-virtual"><scope>libcellml::Generator</scope><name>Logger</name></member>
      <member refid="classlibcellml_1_1Logger_1af0d21280526fec6a2fdd6587f8fc276d" prot="protected" virt="non-virtual"><scope>libcellml::Generator</scope><name>Logger</name></member>
      <member refid="classlibcellml_1_1Generator_1ae4fbcc2d6b36325ab29e22dc5b8d195f" prot="public" virt="non-virtual"><scope>libcellml::Generator</scope><name>ModelType</name></member>
      <member refid="classlibcellml_1_1Generator_1ad6ad271e39549532727eb74d3449388b" prot="public" virt="non-virtual"><scope>libcellml::Generator</scope><name>modelType</name></member>
      <member refid="classlibcellml_1_1Generator_1ae40c6ae93e548d8ec6eaf1ff52e4e69d" prot="private" virt="non-virtual"><scope>libcellml::Generator</scope><name>mPimpl</name></member>
      <member refid="classlibcellml_1_1Generator_1a1a61a0ccfa9e61794338bc4d8b6d9f1b" prot="public" virt="non-virtual"><scope>libcellml::Generator</scope><name>operator=</name></member>
      <member refid="classlibcellml_1_1Logger_1a10b7b226787510f9f3dc3f329eb416a1" prot="public" virt="non-virtual" ambiguityscope="libcellml::Logger::"><scope>libcellml::Generator</scope><name>operator=</name></member>
      <member refid="classlibcellml_1_1Generator_1a6cc45021a23b15284e8bd820b43bc756" prot="public" virt="non-virtual"><scope>libcellml::Generator</scope><name>processModel</name></member>
      <member refid="classlibcellml_1_1Generator_1a907743663e29034e6823c56931c65791" prot="public" virt="non-virtual"><scope>libcellml::Generator</scope><name>profile</name></member>
      <member refid="classlibcellml_1_1Logger_1af3d56e5511cd3d38e9a31f1f55758b61" prot="public" virt="non-virtual"><scope>libcellml::Generator</scope><name>removeAllIssues</name></member>
      <member refid="classlibcellml_1_1Generator_1a0792ec568bca3d08f604fcc4b6a8f5f0" prot="public" virt="non-virtual"><scope>libcellml::Generator</scope><name>setProfile</name></member>
      <member refid="classlibcellml_1_1Generator_1a4328a6fa5ce7d02671c4df688a126e6b" prot="public" virt="non-virtual"><scope>libcellml::Generator</scope><name>state</name></member>
      <member refid="classlibcellml_1_1Generator_1a45922996b839172cbc0d603d5cac4f06" prot="public" virt="non-virtual"><scope>libcellml::Generator</scope><name>stateCount</name></member>
      <member refid="classlibcellml_1_1Generator_1a4955b147a96fdcc6bed4ac98c9c349a9" prot="public" virt="non-virtual"><scope>libcellml::Generator</scope><name>variable</name></member>
      <member refid="classlibcellml_1_1Generator_1a692d843ef49b85bf774ff5d2f7e71458" prot="public" virt="non-virtual"><scope>libcellml::Generator</scope><name>variableCount</name></member>
      <member refid="classlibcellml_1_1Generator_1aa1c745aaee085451ff110e1a8c1c9b60" prot="public" virt="non-virtual"><scope>libcellml::Generator</scope><name>voi</name></member>
      <member refid="classlibcellml_1_1Logger_1a610d4878881567899c6d47db5e625736" prot="public" virt="non-virtual"><scope>libcellml::Generator</scope><name>warning</name></member>
      <member refid="classlibcellml_1_1Logger_1a6973054ad6d00d9bb6d2bfb488cdfebd" prot="public" virt="non-virtual"><scope>libcellml::Generator</scope><name>warningCount</name></member>
      <member refid="classlibcellml_1_1Generator_1ab6d38da531f934d0b524f065a24f3de2" prot="public" virt="non-virtual"><scope>libcellml::Generator</scope><name>~Generator</name></member>
      <member refid="classlibcellml_1_1Logger_1af10a83604f60870be932ac9986a49d85" prot="public" virt="virtual"><scope>libcellml::Generator</scope><name>~Logger</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
