<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.16 -->
<document source="/Users/kmoy001/libcellml/libcellml-tutorials/tutorials/hh_tutorials/index.rst">
    <target refid="hh-tutorials-index"></target>
    <section ids="libcellml-hodgkin-huxley-tutorials hh-tutorials-index" names="libcellml\ hodgkin-huxley\ tutorials hh_tutorials_index">
        <title>libCellML Hodgkin-Huxley Tutorials</title>
        <paragraph>This set of tutorials takes the user progressively through different aspects of the libCellML functionality while building towards a model of Hodgkin and Huxley’s squid axon activation.
            It is aimed at users who are already familiar with the concept of CellML and modelling.</paragraph>
        <paragraph>For more information on the theoretical background behind these steps, please see the <reference internal="True" refuri="../../theory/index#theory-index"><inline classes="std std-ref">Theory pages</inline></reference>.</paragraph>
        <compound classes="toctree-wrapper">
            <compact_paragraph toctree="True"><bullet_list><list_item classes="toctree-l1"><compact_paragraph classes="toctree-l1"><reference anchorname="" internal="True" refuri="tut1/index">Hodgkin-Huxley 1: Creating a model using the API</reference></compact_paragraph><bullet_list><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#overview" internal="True" refuri="tut1/index#overview">Overview</reference></compact_paragraph></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#step-1-set-up-the-model" internal="True" refuri="tut1/index#step-1-set-up-the-model">Step 1: Set up the model</reference></compact_paragraph></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#step-2-create-the-gateequations-component" internal="True" refuri="tut1/index#step-2-create-the-gateequations-component">Step 2: Create the gateEquations component</reference></compact_paragraph></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#step-3-validate-the-model" internal="True" refuri="tut1/index#step-3-validate-the-model">Step 3: Validate the model</reference></compact_paragraph></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#step-4-add-the-variables" internal="True" refuri="tut1/index#step-4-add-the-variables">Step 4: Add the variables</reference></compact_paragraph></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#step-5-add-the-units" internal="True" refuri="tut1/index#step-5-add-the-units">Step 5: Add the units</reference></compact_paragraph></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#step-6-analyse-the-mathematical-construction-of-the-model" internal="True" refuri="tut1/index#step-6-analyse-the-mathematical-construction-of-the-model">Step 6: Analyse the mathematical construction of the model</reference></compact_paragraph></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#step-7-sanity-check" internal="True" refuri="tut1/index#step-7-sanity-check">Step 7: Sanity check</reference></compact_paragraph></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#step-8-serialise-and-output-the-model" internal="True" refuri="tut1/index#step-8-serialise-and-output-the-model">Step 8: Serialise and output the model</reference></compact_paragraph></list_item></bullet_list></list_item><list_item classes="toctree-l1"><compact_paragraph classes="toctree-l1"><reference anchorname="" internal="True" refuri="tut2/index">Hodgkin-Huxley 2: Creating a model which uses imports</reference></compact_paragraph><bullet_list><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#step-1-create-the-model" internal="True" refuri="tut2/index#step-1-create-the-model">Step 1: Create the model</reference></compact_paragraph></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#step-2-create-a-potassium-channel-equations-component" internal="True" refuri="tut2/index#step-2-create-a-potassium-channel-equations-component">Step 2: Create a potassium channel equations component</reference></compact_paragraph></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#step-3-create-the-ngate-and-its-child-components" internal="True" refuri="tut2/index#step-3-create-the-ngate-and-its-child-components">Step 3: Create the nGate and its child components</reference></compact_paragraph></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#step-4-specify-imports-for-the-generic-gate-components" internal="True" refuri="tut2/index#step-4-specify-imports-for-the-generic-gate-components">Step 4: Specify imports for the generic gate components</reference></compact_paragraph></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#step-5-specify-imports-for-the-controller-component" internal="True" refuri="tut2/index#step-5-specify-imports-for-the-controller-component">Step 5: Specify imports for the controller component</reference></compact_paragraph></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#step-6-analyse-the-model" internal="True" refuri="tut2/index#step-6-analyse-the-model">Step 6: Analyse the model</reference></compact_paragraph></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#step-7-define-the-constants" internal="True" refuri="tut2/index#step-7-define-the-constants">Step 7: Define the constants</reference></compact_paragraph></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#step-8-connect-the-input-variables" internal="True" refuri="tut2/index#step-8-connect-the-input-variables">Step 8: Connect the input variables</reference></compact_paragraph></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#step-9-connect-the-calculated-variables" internal="True" refuri="tut2/index#step-9-connect-the-calculated-variables">Step 9: Connect the calculated variables</reference></compact_paragraph></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#step-10-connect-to-imported-components" internal="True" refuri="tut2/index#step-10-connect-to-imported-components">Step 10: Connect to imported components</reference></compact_paragraph></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#step-11-output-the-model" internal="True" refuri="tut2/index#step-11-output-the-model">Step 11: Output the model</reference></compact_paragraph></list_item></bullet_list></list_item><list_item classes="toctree-l1"><compact_paragraph classes="toctree-l1"><reference anchorname="" internal="True" refuri="tut3/index">Hodgkin-Huxley 3: Debugging a model</reference></compact_paragraph><bullet_list><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#overview" internal="True" refuri="tut3/index#overview">Overview</reference></compact_paragraph></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#step-1-parse-the-existing-sodium-channel-model" internal="True" refuri="tut3/index#step-1-parse-the-existing-sodium-channel-model">Step 1: Parse the existing sodium channel model</reference></compact_paragraph></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#step-2-validate-the-parsed-model" internal="True" refuri="tut3/index#step-2-validate-the-parsed-model">Step 2: Validate the parsed model</reference></compact_paragraph></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#step-3-repair-the-parsed-model" internal="True" refuri="tut3/index#step-3-repair-the-parsed-model">Step 3: Repair the parsed model</reference></compact_paragraph></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#step-4-resolve-the-model-s-imports" internal="True" refuri="tut3/index#step-4-resolve-the-model-s-imports">Step 4: Resolve the model’s imports</reference></compact_paragraph></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#step-5-validate-the-imported-dependencies" internal="True" refuri="tut3/index#step-5-validate-the-imported-dependencies">Step 5: Validate the imported dependencies</reference></compact_paragraph></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#step-6-analyse-the-model-s" internal="True" refuri="tut3/index#step-6-analyse-the-model-s">Step 6: Analyse the model(s)</reference></compact_paragraph></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#step-7-serialise-and-print-the-repaired-model" internal="True" refuri="tut3/index#step-7-serialise-and-print-the-repaired-model">Step 7: Serialise and print the repaired model</reference></compact_paragraph></list_item></bullet_list></list_item><list_item classes="toctree-l1"><compact_paragraph classes="toctree-l1"><reference anchorname="" internal="True" refuri="tut4/index">Hodgkin-Huxley 4: Generating code from a model</reference></compact_paragraph><bullet_list><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#step-1-parse-the-existing-membrane-model" internal="True" refuri="tut4/index#step-1-parse-the-existing-membrane-model">Step 1: Parse the existing membrane model</reference></compact_paragraph></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#step-2-resolve-the-imports-and-flatten" internal="True" refuri="tut4/index#step-2-resolve-the-imports-and-flatten">Step 2: Resolve the imports and flatten</reference></compact_paragraph></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#step-3-validate-and-analyse-the-flattened-model" internal="True" refuri="tut4/index#step-3-validate-and-analyse-the-flattened-model">Step 3: Validate and analyse the flattened model</reference></compact_paragraph></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#step-4-generate-code-and-output" internal="True" refuri="tut4/index#step-4-generate-code-and-output">Step 4: Generate code and output</reference></compact_paragraph></list_item></bullet_list></list_item><list_item classes="toctree-l1"><compact_paragraph classes="toctree-l1"><reference anchorname="" internal="True" refuri="tut5/index">Hodgkin-Huxley 5: Interact with generated code</reference></compact_paragraph><bullet_list><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#step-1-link-to-the-generated-code" internal="True" refuri="tut5/index#step-1-link-to-the-generated-code">Step 1: Link to the generated code</reference></compact_paragraph></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#step-2-access-the-variables-in-the-generated-files" internal="True" refuri="tut5/index#step-2-access-the-variables-in-the-generated-files">Step 2: Access the variables in the generated files</reference></compact_paragraph></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#step-3-access-the-functions-in-the-generated-files" internal="True" refuri="tut5/index#step-3-access-the-functions-in-the-generated-files">Step 3: Access the functions in the generated files</reference></compact_paragraph></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#step-4-iterate-through-the-solution" internal="True" refuri="tut5/index#step-4-iterate-through-the-solution">Step 4: Iterate through the solution</reference></compact_paragraph></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="#step-5-sanity-check" internal="True" refuri="tut5/index#step-5-sanity-check">Step 5: Sanity check</reference></compact_paragraph></list_item></bullet_list></list_item></bullet_list></compact_paragraph>
        </compound>
    </section>
</document>
