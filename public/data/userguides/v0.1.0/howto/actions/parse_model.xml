<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.16 -->
<document source="/Users/kmoy001/libcellml/libcellml-tutorials/howto/actions/parse_model.rst">
    <target refid="actions-parse-model"></target>
    <section ids="parse-an-existing-model-from-a-file actions-parse-model" names="parse\ an\ existing\ model\ from\ a\ file actions_parse_model">
        <title>Parse an existing <literal>Model</literal> from a file</title>
        <paragraph>The following code will read a file called <literal classes="code">sine_comparison.cellml</literal> and deserialise its contents into a <literal classes="code">Model</literal> instance.</paragraph>
        <paragraph>Note that both the <literal classes="code">Parser</literal> class and its opposite number, the <literal classes="code">Printer</literal> class, deal with strings rather than files.
            Youâ€™ll need to read the file into a string, and then use the string as input to the <literal classes="code">Parser</literal> item.</paragraph>
        <target refid="snippet-parse-model"></target>
        <container classes="toggle" ids="snippet-parse-model" names="snippet_parse_model">
            <container classes="header-left">
                <paragraph>Parse a model from a CellML file</paragraph>
            </container>
            <container classes="sphinx-tabs">
                <container>
                    <container classes="item">
                        <container>
                            <paragraph>C++ snippet</paragraph>
                        </container>
                    </container>
                    <container classes="ui bottom attached sphinx-tab tab segment sphinx-data-tab-0-0 active">
                        <literal_block force="False" highlight_args="{'linenostart': 1}" language="c++" linenos="False" source="/Users/kmoy001/libcellml/libcellml-tutorials/howto/code/simulation_tool_dev/simulationToolDev.cpp" xml:space="preserve">    // Parse a CellML file into a model.

    // Read the file containing the CellML model into a string.
    std::string inFileName = "simulationExample.cellml";
    std::ifstream inFile(inFileName);
    std::stringstream inFileContents;
    inFileContents &lt;&lt; inFile.rdbuf();

    std::cout &lt;&lt; "Opening the CellML file" &lt;&lt; std::endl;

    // Create a libCellML Parser, and use it to parse the fileContents
    // string and convert it into a CellML Model structure.
    auto parser = libcellml::Parser::create();
    auto model = parser-&gt;parseModel(inFileContents.str());
    printIssues(parser);

</literal_block>
                        <paragraph>Full context: <download_reference filename="6446c8b6fec8120c0fc7c0dc30ffdc04/simulationToolDev.cpp" refdoc="howto/actions/parse_model" refdomain="" refexplicit="True" reftarget="../code/simulation_tool_dev/simulationToolDev.cpp" reftype="download" refwarn="False"><literal classes="xref download">example_simulationToolDev.cpp</literal></download_reference></paragraph>
                    </container>
                </container>
                <container>
                    <container classes="item">
                        <container>
                            <paragraph>Python snippet</paragraph>
                        </container>
                    </container>
                    <container classes="ui bottom attached sphinx-tab tab segment sphinx-data-tab-0-1">
                        <literal_block force="False" highlight_args="{'linenostart': 1}" language="python" linenos="False" source="/Users/kmoy001/libcellml/libcellml-tutorials/howto/code/simulation_tool_dev/simulationToolDev.py" xml:space="preserve">    # Parse the model from a CellML file.

    # Create a libCellML Parser, and use it to parse the fileContents
    # string and convert it into a CellML Model structure.
    read_file = open("resources/simulationExample.cellml", "r")
    parser = Parser()
    model = parser.parseModel(read_file.read())
    print_issues_to_terminal(parser)

</literal_block>
                        <paragraph>Full context: <download_reference filename="0aa479c739e25e77890e20f1b26b4b3b/simulationToolDev.py" refdoc="howto/actions/parse_model" refdomain="" refexplicit="True" reftarget="../code/simulation_tool_dev/simulationToolDev.py" reftype="download" refwarn="False"><literal classes="xref download">example_simulationToolDev.py</literal></download_reference></paragraph>
                    </container>
                </container>
            </container>
        </container>
    </section>
</document>
