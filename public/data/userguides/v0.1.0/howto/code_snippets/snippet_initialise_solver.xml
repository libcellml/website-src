<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.16 -->
<document source="/Users/kmoy001/libcellml/libcellml-tutorials/howto/code_snippets/snippet_initialise_solver.rst">
    <target refid="snippet-initialise-solver"></target>
    <container classes="toggle" ids="snippet-initialise-solver" names="snippet_initialise_solver">
        <container classes="header-left">
            <paragraph>Initialise variables</paragraph>
        </container>
        <container classes="sphinx-tabs">
            <container>
                <container classes="item">
                    <container>
                        <paragraph>C++ snippet</paragraph>
                    </container>
                </container>
                <container classes="ui bottom attached sphinx-tab tab segment sphinx-data-tab-0-0 active">
                    <literal_block force="False" highlight_args="{'linenostart': 1}" language="c++" linenos="False" source="/Users/kmoy001/libcellml/libcellml-tutorials/howto/code/solver/solveGeneratedModel.cpp" xml:space="preserve">    // Make use of the access functions provided to initialise the variable arrays.
    initialiseStatesAndConstants(myStateVariables, myVariables);
    computeComputedConstants(myVariables);
    computeRates(time, myStateVariables, myRates, myVariables);
    computeVariables(time, myStateVariables, myRates, myVariables);

</literal_block>
                    <paragraph>Full context: <download_reference filename="a7dbe8fe8475e1fe24e8555329aec747/solveGeneratedModel.cpp" refdoc="howto/code_snippets/snippet_initialise_solver" refdomain="" refexplicit="True" reftarget="../code/solver/solveGeneratedModel.cpp" reftype="download" refwarn="False"><literal classes="xref download">example_solveGeneratedModel.cpp</literal></download_reference></paragraph>
                </container>
            </container>
            <container>
                <container classes="item">
                    <container>
                        <paragraph>Python snippet</paragraph>
                    </container>
                </container>
                <container classes="ui bottom attached sphinx-tab tab segment sphinx-data-tab-0-1">
                    <literal_block force="False" highlight_args="{'linenostart': 1}" language="python" linenos="False" source="/Users/kmoy001/libcellml/libcellml-tutorials/howto/code/solver/solveGeneratedModel.py" xml:space="preserve">    # Compute the parameters which require it, including the rates and variable values.
    model.initialise_states_and_constants(my_state_variables, my_variables)
    model.compute_computed_constants(my_variables)
    model.compute_rates(0, my_state_variables, my_rates, my_variables)
    model.compute_variables(0, my_state_variables, my_rates, my_variables)

    print('   STATE VARIABLES (units, initial value)')
    print('--------------------------------------------------------------------')
    for i in range(0, model.STATE_COUNT):
        print('      {} ({}, {})'.format(model.STATE_INFO[i]['name'],
                                         model.STATE_INFO[i]['units'],
                                         my_state_variables[i]))
    print()
    print('   VARIABLES (units, initial value)')
    print('--------------------------------------------------------------------')

    for v in range(0, model.VARIABLE_COUNT):
        print('      {} ({}, {})'.format(model.VARIABLE_INFO[v]['name'],
                                         model.VARIABLE_INFO[v]['units'],
                                         my_variables[v]))

</literal_block>
                    <paragraph>Full context: <download_reference filename="7d9d1af31caf4d3023ce09f83b103903/solveGeneratedModel.py" refdoc="howto/code_snippets/snippet_initialise_solver" refdomain="" refexplicit="True" reftarget="../code/solver/solveGeneratedModel.py" reftype="download" refwarn="False"><literal classes="xref download">example_solveGeneratedModel.py</literal></download_reference></paragraph>
                </container>
            </container>
        </container>
    </container>
</document>
