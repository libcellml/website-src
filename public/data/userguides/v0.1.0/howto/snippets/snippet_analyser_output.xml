<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.16 -->
<document source="/Users/kmoy001/libcellml/libcellml-tutorials/howto/snippets/snippet_analyser_output.rst">
    <target refid="snippet-analyser-output"></target>
    <container classes="sphinx-tabs" ids="snippet-analyser-output" names="snippet_analyser_output">
        <container>
            <container classes="item">
                <container>
                    <paragraph>C++</paragraph>
                </container>
            </container>
            <container classes="ui bottom attached sphinx-tab tab segment sphinx-data-tab-0-0 active">
                <literal_block force="False" highlight_args="{'linenostart': 1}" language="c++" linenos="False" source="/Users/kmoy001/libcellml/libcellml-tutorials/howto/code/simulation_tool_dev/simulationToolDev.cpp" xml:space="preserve">    // Generate runnable code in other language formats for this model.

    // Create a Generator instance.  Note that by default this uses the C language profile.
    auto generator = libcellml::Generator::create();

    // Pass the generator the model for processing.
    generator-&gt;setModel(analyser-&gt;model());
    printIssues(generator);

</literal_block>
                <paragraph>Full context: <download_reference filename="585c555a8941ba9facc8398f61a54485/simulationToolDev.cpp" refdoc="howto/snippets/snippet_analyser_output" refdomain="" refexplicit="True" reftarget="../code/simulation_tool_dev/simulationToolDev.cpp" reftype="download" refwarn="False"><literal classes="xref download">example_simulationToolDev.cpp</literal></download_reference></paragraph>
            </container>
        </container>
        <container>
            <container classes="item">
                <container>
                    <paragraph>Python</paragraph>
                </container>
            </container>
            <container classes="ui bottom attached sphinx-tab tab segment sphinx-data-tab-0-1">
                <literal_block force="False" highlight_args="{'linenostart': 1}" language="python" linenos="False" source="/Users/kmoy001/libcellml/libcellml-tutorials/howto/code/simulation_tool_dev/simulationToolDev.py" xml:space="preserve">    # Generate runnable code in other language formats for this model.

    # Create a Generator instance.  Note that by default this is the C language.
    generator = Generator()

    # Pass the generator the analysed model for processing.
    generator.processModel(analyser.model())
    print_issues_to_terminal(generator)

</literal_block>
                <paragraph>Full context: <download_reference filename="accc81f067002158272546f0740562bf/simulationToolDev.py" refdoc="howto/snippets/snippet_analyser_output" refdomain="" refexplicit="True" reftarget="../code/simulation_tool_dev/simulationToolDev.py" reftype="download" refwarn="False"><literal classes="xref download">example_simulationToolDev.py</literal></download_reference></paragraph>
            </container>
        </container>
    </container>
</document>
