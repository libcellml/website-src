<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.16 -->
<document source="/Users/kmoy001/libcellml/libcellml-tutorials/howto/snippets/snippet_annotator_retrieve_duplicated_ids.rst">
    <target refid="snippet-annotator-retrieve-duplicated-ids"></target>
    <container classes="toggle" ids="snippet-annotator-retrieve-duplicated-ids" names="snippet_annotator_retrieve_duplicated_ids">
        <container classes="header-left">
            <paragraph>Retrieve items with duplicated ids</paragraph>
        </container>
        <paragraph>Items with a unique id can be retrieved using the <literal classes="code">item("uniqueId")</literal> function, items whose ids are not unique must be retrieved with the <literal classes="code">items("duplicatedId")</literal> function instead.</paragraph>
        <container classes="sphinx-tabs">
            <container>
                <container classes="item">
                    <container>
                        <paragraph>C++</paragraph>
                    </container>
                </container>
                <container classes="ui bottom attached sphinx-tab tab segment code-tab sphinx-data-tab-Qysr active">
                </container>
                <literal_block force="False" highlight_args="{}" language="c++" linenos="False" xml:space="preserve">// Create an Annotator instance.
auto annotator = libcellml::Annotator::create();

// Pass the model to the annotator and build the index.
annotator-&gt;buildModelIndex(model);

auto duplicatedIdItems = annotator-&gt;items("duplicatedId");
// The duplicateIdItems is a vector of AnyItem items; pairs whose first
// attribute is an Annotator::Type enum, and the second is an std::any cast
// of the item.</literal_block>
            </container>
            <container>
                <container classes="item">
                    <container>
                        <paragraph>Python</paragraph>
                    </container>
                </container>
                <container classes="ui bottom attached sphinx-tab tab segment code-tab sphinx-data-tab-UHl0aG9u">
                </container>
                <literal_block force="False" highlight_args="{}" language="py" linenos="False" xml:space="preserve"># Create an Annotator instance.
annotator = Annotator()

# Pass the model to the annotator and build the index.
annotator.buildModelIndex(model)

duplicatedIdItems = annotator.items("duplicatedId")
# The duplicateIdItems is a vector of items with "duplicatedId"
# as an id attribute.</literal_block>
            </container>
        </container>
    </container>
</document>
