<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.16 -->
<document source="/Users/kmoy001/libcellml/libcellml-src/docs/roadmap.rst">
    <target refid="libcellmlroadmap"></target>
    <section ids="roadmap libcellmlroadmap" names="roadmap libcellmlroadmap">
        <title refid="id2">Roadmap</title>
        <paragraph>Updated: 29 May 2019.</paragraph>
        <paragraph>The current roadmap had evolved from that present in the <reference name="0.1.0 release" refuri="https://libcellml.readthedocs.io/en/0.1.0/roadmap.html">0.1.0 release</reference><target ids="release" names="0.1.0\ release" refuri="https://libcellml.readthedocs.io/en/0.1.0/roadmap.html"></target> of libCellML.</paragraph>
        <paragraph>Each milestone may consist of several ‘releases’ and future requirements may impact the design and implementation of earlier releases of libCellML.
            Major changes in the API will be accepted up to the release of libCellML version 1.0.0.</paragraph>
        <topic classes="contents" ids="contents" names="contents">
            <title>Contents</title>
            <bullet_list>
                <list_item>
                    <paragraph><reference ids="id2" refid="roadmap">Roadmap</reference></paragraph>
                    <bullet_list>
                        <list_item>
                            <paragraph><reference ids="id3" refid="high-level-objectives">High level objectives</reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference ids="id4" refid="environment">Environment</reference></paragraph>
                            <bullet_list>
                                <list_item>
                                    <paragraph><reference ids="id5" refid="requirements">Requirements</reference></paragraph>
                                </list_item>
                            </bullet_list>
                        </list_item>
                        <list_item>
                            <paragraph><reference ids="id6" refid="milestone-1-python-bindings-validation-code-generation-and-documentation">Milestone 1: Python bindings, validation, code generation, and documentation</reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference ids="id7" refid="milestone-2-units-javascript-and-resets">Milestone 2: units, JavaScript, and resets</reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference ids="id8" refid="milestone-3-dae-models">Milestone 3: DAE models</reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference ids="id9" refid="milestone-4-advanced-capabilities">Milestone 4: advanced capabilities</reference></paragraph>
                        </list_item>
                    </bullet_list>
                </list_item>
            </bullet_list>
        </topic>
        <section ids="high-level-objectives" names="high\ level\ objectives">
            <title refid="id3">High level objectives</title>
            <paragraph>libCellML is focused on CellML 2.0 and beyond.</paragraph>
            <block_quote>
                <bullet_list bullet="*">
                    <list_item>
                        <paragraph>The implementation of libCellML should be driven by the requirements for supporting CellML 2.0 and beyond.</paragraph>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph>libCellML should be designed to support the CellML specification with the flexibility for extra restrictions, constraints, or additions coming from future proposals for changing the specification.</paragraph>
                            </list_item>
                        </bullet_list>
                    </list_item>
                    <list_item>
                        <paragraph>libCellML should be able to parse models in CellML 2.0 and newer versions of the specification.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>libCellML will only serialise models to the current version of the specification.</paragraph>
                    </list_item>
                </bullet_list>
            </block_quote>
        </section>
        <section ids="environment" names="environment">
            <title refid="id4">Environment</title>
            <paragraph>This section will specify the environment for the development of libCellML.</paragraph>
            <bullet_list bullet="*">
                <list_item>
                    <paragraph><reference name="GitHub" refuri="https://github.com/">GitHub</reference><target ids="github" names="github" refuri="https://github.com/"></target> to host the primary libCellML source repository and issue tracker under the <reference name="CellML organisation" refuri="https://github.com/cellml">CellML organisation</reference><target ids="cellml-organisation" names="cellml\ organisation" refuri="https://github.com/cellml"></target> (current and former editorial board members).</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Development language: C++ with <reference name="SWIG" refuri="http://www.swig.org/">SWIG</reference><target ids="swig" names="swig" refuri="http://www.swig.org/"></target> bindings.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Build: <reference name="CMake" refuri="http://www.cmake.org/">CMake</reference><target ids="cmake" names="cmake" refuri="http://www.cmake.org/"></target> for generating cross-platform build rules.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Test: using <reference name="Buildbot" refuri="http://buildbot.net/">Buildbot</reference><target ids="buildbot" names="buildbot" refuri="http://buildbot.net/"></target> on the ABI BaTS to run continuous integration testing.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Test: unit testing to use <reference name="gtest" refuri="https://code.google.com/p/googletest/">gtest</reference><target ids="gtest" names="gtest" refuri="https://code.google.com/p/googletest/"></target>.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Documentation: written in <reference name="reStructuredText" refuri="http://docutils.sourceforge.net/docs/ref/rst/restructuredtext.html">reStructuredText</reference><target ids="restructuredtext" names="restructuredtext" refuri="http://docutils.sourceforge.net/docs/ref/rst/restructuredtext.html"></target>.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Documentation: API and source code examples will be documented using C++-style <reference name="Doxygen" refuri="http://www.doxygen.org/">Doxygen</reference><target ids="doxygen" names="doxygen" refuri="http://www.doxygen.org/"></target> comments.</paragraph>
                </list_item>
            </bullet_list>
            <section ids="requirements" names="requirements">
                <title refid="id5">Requirements</title>
                <bullet_list bullet="*">
                    <list_item>
                        <paragraph>Documentation: made available on <reference name="readthedocs.io" refuri="https://readthedocs.io/">readthedocs.io</reference><target ids="readthedocs-io" names="readthedocs.io" refuri="https://readthedocs.io/"></target>.
                            Read the Docs uses <reference name="Sphinx" refuri="http://sphinx-doc.org/">Sphinx</reference><target ids="sphinx" names="sphinx" refuri="http://sphinx-doc.org/"></target> for generating documentation.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Documentation: is amenable for inclusion in external documentation efforts</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Development: Agile, test driven development where:</paragraph>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph>Functionality is more important than API stability in early releases.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph>Release early and often.</paragraph>
                            </list_item>
                        </bullet_list>
                    </list_item>
                    <list_item>
                        <paragraph>Development: code review prior to acceptance into the primary repository using the <reference name="pull request" refuri="https://help.github.com/articles/using-pull-requests">pull request</reference><target ids="pull-request" names="pull\ request" refuri="https://help.github.com/articles/using-pull-requests"></target> feature on <reference name="GitHub" refuri="https://github.com/">GitHub</reference><target dupnames="github" ids="id1" refuri="https://github.com/"></target>.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Development: objectives are added and broken down into incremental tasks.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Development: a single task should be no more than two weeks.</paragraph>
                    </list_item>
                </bullet_list>
                <paragraph>We should avoid using non-standard system libraries unless there is a compelling reason.
                    Once features are available, the API can be fine tuned in consultation with the CellML community.</paragraph>
            </section>
        </section>
        <section ids="milestone-1-python-bindings-validation-code-generation-and-documentation" names="milestone\ 1:\ python\ bindings,\ validation,\ code\ generation,\ and\ documentation">
            <title refid="id6">Milestone 1: Python bindings, validation, code generation, and documentation</title>
            <enumerated_list enumtype="arabic" prefix="" suffix=".">
                <list_item>
                    <paragraph>Python bindings.</paragraph>
                    <enumerated_list enumtype="arabic" prefix="" suffix=".">
                        <list_item>
                            <paragraph>Wrap the libCellML API using Swig to be able to generate Python bindings for the library.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>Package the bindings so they can be easily installed across Windows, Linux, and macOS.</paragraph>
                        </list_item>
                    </enumerated_list>
                </list_item>
                <list_item>
                    <paragraph>Load a CellML 2.0 model and validate it.</paragraph>
                    <enumerated_list enumtype="arabic" prefix="" suffix=".">
                        <list_item>
                            <paragraph>Validate models against the rules defined in the current draft of the CellML 2.0 specification (currently an active document, outstanding issues regarding the new <literal classes="code">reset</literal> construct are likely to require updates to the validation implementation).</paragraph>
                        </list_item>
                    </enumerated_list>
                </list_item>
                <list_item>
                    <paragraph>Code generation.</paragraph>
                    <enumerated_list enumtype="arabic" prefix="" suffix=".">
                        <list_item>
                            <paragraph>Focus on non-DAE models.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>Generate code for any simulatable non-DAE CellML model in PMR (i.e., translated from CellML 1.0/1.1).</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>Guide the code generated for a given model (e.g., a variable to be controlled from an external data source, SED-ML defined changes, etc.).</paragraph>
                        </list_item>
                    </enumerated_list>
                </list_item>
                <list_item>
                    <paragraph>Documentation available.</paragraph>
                    <enumerated_list enumtype="arabic" prefix="" suffix=".">
                        <list_item>
                            <paragraph>API.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>Tutorials/documented code examples.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>Integrating libCellML into common IDEs (Visual Studio, Qt Creator, and PyCharm).</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>Provide documentation on the installation and use of the Python bindings across Windows, Linux, and macOS.</paragraph>
                        </list_item>
                    </enumerated_list>
                </list_item>
            </enumerated_list>
        </section>
        <section ids="milestone-2-units-javascript-and-resets" names="milestone\ 2:\ units,\ javascript,\ and\ resets">
            <title refid="id7">Milestone 2: units, JavaScript, and resets</title>
            <enumerated_list enumtype="arabic" prefix="" suffix=".">
                <list_item>
                    <paragraph>Units.</paragraph>
                    <enumerated_list enumtype="arabic" prefix="" suffix=".">
                        <list_item>
                            <paragraph>Checking units within mathematical expressions.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>Debugging assistance for model authors regarding units.</paragraph>
                        </list_item>
                    </enumerated_list>
                </list_item>
                <list_item>
                    <paragraph>JavaScript.</paragraph>
                    <enumerated_list enumtype="arabic" prefix="" suffix=".">
                        <list_item>
                            <paragraph>Use Emscripten to create a JavaScript API for libCellML.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>Provide a suitable packaged version of the JavaScript API for integration in common JavaScript environments (e.g., Node, Webpack).</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>Document the installation and use of the JavaScript API.</paragraph>
                        </list_item>
                    </enumerated_list>
                </list_item>
                <list_item>
                    <paragraph>Resets.</paragraph>
                    <enumerated_list enumtype="arabic" prefix="" suffix=".">
                        <list_item>
                            <paragraph>Extend libCellML implementation to fully support resets.</paragraph>
                        </list_item>
                    </enumerated_list>
                </list_item>
            </enumerated_list>
        </section>
        <section ids="milestone-3-dae-models" names="milestone\ 3:\ dae\ models">
            <title refid="id8">Milestone 3: DAE models</title>
            <enumerated_list enumtype="arabic" prefix="" suffix=".">
                <list_item>
                    <paragraph>DAE models.</paragraph>
                    <enumerated_list enumtype="arabic" prefix="" suffix=".">
                        <list_item>
                            <paragraph>Code generation support for models with DAEs.</paragraph>
                        </list_item>
                    </enumerated_list>
                </list_item>
            </enumerated_list>
        </section>
        <section ids="milestone-4-advanced-capabilities" names="milestone\ 4:\ advanced\ capabilities">
            <title refid="id9">Milestone 4: advanced capabilities</title>
            <enumerated_list enumtype="arabic" prefix="" suffix=".">
                <list_item>
                    <paragraph>High-order model manipulation (recall the discussion with Andrew McCulloch at the 8th CellML workshop).</paragraph>
                    <enumerated_list enumtype="arabic" prefix="" suffix=".">
                        <list_item>
                            <paragraph>Again, it is outside the scope of libCellML, but helping tool developers provide these kinds of services is very important.</paragraph>
                        </list_item>
                    </enumerated_list>
                </list_item>
            </enumerated_list>
        </section>
    </section>
</document>
