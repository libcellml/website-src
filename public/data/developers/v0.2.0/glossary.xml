<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.16 -->
<document source="/Users/kmoy001/libcellml/libcellml-src/docs/glossary.rst">
    <target refid="glossary"></target>
    <section dupnames="glossary" ids="glossary id1" names="glossary">
        <title>Glossary</title>
        <glossary>
            <definition_list classes="glossary">
                <definition_list_item>
                    <term ids="term-C">C++<index entries="['single',\ 'C++',\ 'term-C',\ 'main',\ None]"></index></term>
                    <definition>
                        <paragraph>The language in which libCellML is written.
                            Please see the <reference internal="False" refuri="https://en.cppreference.com/C++ Reference site">C++ Reference site</reference> for details.</paragraph>
                    </definition>
                </definition_list_item>
                <definition_list_item>
                    <term ids="term-CellML2">CellML2<index entries="['single',\ 'CellML2',\ 'term-CellML2',\ 'main',\ None]"></index></term>
                    <definition>
                        <paragraph>CellML 2.0 is the markup language in which models are parsed, validated, and printed by libCellML.
                            The namespace is defined at <literal classes="code">http://www.cellml.org/cellml/2.0#</literal> and the formal language syntax can be found in the <reference internal="False" refuri="https://www.cellml.org/specifications/cellml_2.0">CellML 2.0 Specification</reference> document.</paragraph>
                    </definition>
                </definition_list_item>
                <definition_list_item>
                    <term ids="term-CMake">CMake<index entries="['single',\ 'CMake',\ 'term-CMake',\ 'main',\ None]"></index></term>
                    <definition>
                        <paragraph><reference internal="False" refuri="https://cmake.org/">CMake</reference> is an open-source, cross-platform family of tools designed to build, test and package software.
                            Instructions for installation of CMake can be found on the <reference internal="True" refuri="dev_setup#dev-setup-cmake"><inline classes="std std-ref">Setup page</inline></reference>.</paragraph>
                    </definition>
                </definition_list_item>
                <definition_list_item>
                    <term ids="term-coding-standard">coding standard<index entries="['single',\ 'coding\ standard',\ 'term-coding-standard',\ 'main',\ None]"></index></term>
                    <definition>
                        <paragraph>A coding standard describes the style and general design approach taken in a project.
                            For detailed information please refer to the <reference internal="True" refuri="dev_coding_standards#dev-coding-standards"><inline classes="std std-ref">Coding Standards</inline></reference> page.</paragraph>
                    </definition>
                </definition_list_item>
                <definition_list_item>
                    <term ids="term-Doxygen">Doxygen<index entries="['single',\ 'Doxygen',\ 'term-Doxygen',\ 'main',\ None]"></index></term>
                    <definition>
                        <paragraph><reference internal="False" refuri="http://www.doxygen.nl/">Doxygen</reference> is software which assembles documentation files directly from annotated source code, including the generation of inheritance and dependency tree diagrams for classes.
                            More information on installing Doxygen is given on the <reference internal="True" refuri="dev_setup#dev-setup-doxygen"><inline classes="std std-ref">Setup page</inline></reference>.</paragraph>
                    </definition>
                </definition_list_item>
                <definition_list_item>
                    <term ids="term-Graphviz">Graphviz<index entries="['single',\ 'Graphviz',\ 'term-Graphviz',\ 'main',\ None]"></index></term>
                    <definition>
                        <paragraph><reference internal="False" refuri="http://graphviz.org">Graphviz</reference> layout programs take descriptions of graphs in a simple text language, and make diagrams in several useful formats such as images and SVG for web pages.
                            It is used here to supplement the class hierarchy graphs within the Doxygen documentation, and may need to be installed on Windows machines.
                            Installation links can be found on the <reference internal="True" refuri="dev_setup#dev-setup-doxygen"><inline classes="std std-ref">Setup page</inline></reference>.</paragraph>
                    </definition>
                </definition_list_item>
                <definition_list_item>
                    <term ids="term-prime-repository">prime repository<index entries="['single',\ 'prime\ repository',\ 'term-prime-repository',\ 'main',\ None]"></index></term>
                    <term ids="term-Prime-repository">Prime repository<index entries="['single',\ 'Prime\ repository',\ 'term-Prime-repository',\ 'main',\ None]"></index></term>
                    <term ids="term-Prime-libCellML-repository">Prime libCellML repository<index entries="['single',\ 'Prime\ libCellML\ repository',\ 'term-Prime-libCellML-repository',\ 'main',\ None]"></index></term>
                    <term ids="term-prime-libCellML-repository">prime libCellML repository<index entries="['single',\ 'prime\ libCellML\ repository',\ 'term-prime-libCellML-repository',\ 'main',\ None]"></index></term>
                    <definition>
                        <paragraph>The repository at <reference refuri="https://github.com/cellml/libcellml">https://github.com/cellml/libcellml</reference> is the definitive repository for the software and used for creating software releases.
                            We will refer to this repository as the prime repository.</paragraph>
                    </definition>
                </definition_list_item>
                <definition_list_item>
                    <term ids="term-Python">Python<index entries="['single',\ 'Python',\ 'term-Python',\ 'main',\ None]"></index></term>
                    <definition>
                        <paragraph><reference internal="False" refuri="https://www.python.org/">Python</reference> is a scripting language for which optional bindings to libCellML can be generated.
                            There are instructions for installing Python on the <reference internal="True" refuri="dev_setup#dev-setup-python"><inline classes="std std-ref">Setup page</inline></reference>.</paragraph>
                    </definition>
                </definition_list_item>
                <definition_list_item>
                    <term ids="term-SWIG">SWIG<index entries="['single',\ 'SWIG',\ 'term-SWIG',\ 'main',\ None]"></index></term>
                    <definition>
                        <paragraph><reference internal="False" refuri="http://swig.org">SWIG (Simplified Wrapper and Interface Generator)</reference> is a tool which acts as a translator between code written in C++ and other languages.
                            libCellML uses SWIG to generate the (optional) Python bindings - if you are not intending to use libCellML in other languages then you will not need to install SWIG.
                            Instructions for installing SWIG on the various operating systems are given on the <reference internal="True" refuri="dev_setup#dev-setup"><inline classes="std std-ref">Setup page</inline></reference>.</paragraph>
                    </definition>
                </definition_list_item>
                <definition_list_item>
                    <term ids="term-toolchain">toolchain<index entries="['single',\ 'toolchain',\ 'term-toolchain',\ 'main',\ None]"></index></term>
                    <definition>
                        <paragraph>A toolchain is the set of different software products needed in order to change text-based code into a functional application.
                            This can include a text editor, a compiler, a linker, a debugger, and more.
                            Toolchains are frequently hidden inside Integrated Development Environments (IDEs), which collect all the tools into one place and provide a single user interface for them together.</paragraph>
                    </definition>
                </definition_list_item>
            </definition_list>
        </glossary>
    </section>
</document>
