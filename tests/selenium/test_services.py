# Generated by Selenium IDE
import os
import unittest

from time import sleep

from selenium import webdriver
from selenium.webdriver.common.by import By
# from selenium.webdriver.common.action_chains import ActionChains
# from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
# from selenium.webdriver.common.keys import Keys
# from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
from config import BASE_URL, RESOURCE_PATH


class TestServices(unittest.TestCase):
    def setUp(self):
        self.driver = webdriver.Chrome()
        self.vars = {"base_url": BASE_URL}

    def tearDown(self):
        self.driver.quit()

    def test_importCellML10(self):
        self.driver.get(self.vars["base_url"])
        self.driver.set_window_size(1627, 1025)
        self.driver.find_element(By.CSS_SELECTOR, ".router-link-active:nth-child(6) .v-btn__content").click()
        el = WebDriverWait(self.driver, timeout=3).until(
            lambda d: d.find_element(By.CSS_SELECTOR, "#service-import .v-btn"))
        el.click()
        el = WebDriverWait(self.driver, timeout=3).until(
            lambda d: d.find_element(By.CSS_SELECTOR, "input[type=\"file\"]"))
        el.send_keys(os.path.join(RESOURCE_PATH, "test_basic_ode.cellml"))
        self.driver.find_element(By.ID, "importButton").click()
        el = WebDriverWait(self.driver, timeout=3).until(
            lambda d: d.find_element(By.CSS_SELECTOR, ".v-list-item-title"))
        # Don't download the imported CellML model,
        # el.click()
        # just check that we have succeeded in importing it by checking the text.
        self.assertEqual("test_basic_ode.cellml (1.91 kB)", el.text)
        # For debugging purposes.
        sleep(1)

    def test_validateCellML20(self):
        self.driver.get(self.vars["base_url"])
        self.driver.set_window_size(1627, 1025)
        # 6 | click | css=.router-link-active:nth-child(6) .v-btn__content |
        self.driver.find_element(By.CSS_SELECTOR, ".router-link-active:nth-child(6) .v-btn__content").click()
        # 7 | click | css=#service-validation > .v-btn |
        el = WebDriverWait(self.driver, timeout=3).until(
            lambda d: d.find_element(By.CSS_SELECTOR, "#service-validation > .v-btn"))
        el.click()
        el = WebDriverWait(self.driver, timeout=3).until(
            lambda d: d.find_element(By.CSS_SELECTOR, "input[type=\"file\"]"))
        el.send_keys(os.path.join(RESOURCE_PATH, "test_basic_ode.cellml2"))
        # 10 | click | css=.v-btn--block > .v-btn__content |
        self.driver.find_element(By.CSS_SELECTOR, ".v-btn--block > .v-btn__content").click()
        # 11 | click | css=.v-card-title |
        el = WebDriverWait(self.driver, timeout=3).until(
            lambda d: d.find_element(By.CSS_SELECTOR, ".v-card-title"))
        self.assertEqual("test_basic_ode.cellml2:The model is valid!", el.text)
        # For debugging purposes.
        sleep(1)


if __name__ == '__main__':
    unittest.main()
